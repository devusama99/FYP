[{"/Users/devusama/Work/FYP_FrontEnd/src/index.js":"1","/Users/devusama/Work/FYP_FrontEnd/src/App.js":"2","/Users/devusama/Work/FYP_FrontEnd/src/reportWebVitals.js":"3","/Users/devusama/Work/FYP_FrontEnd/src/components/theme.js":"4","/Users/devusama/Work/FYP_FrontEnd/src/components/SignUp.js":"5","/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileUpdate.js":"6","/Users/devusama/Work/FYP_FrontEnd/src/components/SubscriptionPackage.js":"7","/Users/devusama/Work/FYP_FrontEnd/src/components/SignIn.js":"8","/Users/devusama/Work/FYP_FrontEnd/src/components/PaymentDetails.js":"9","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminDashboard.js":"10","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogOutline.js":"11","/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileDelete.js":"12","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogHistory.js":"13","/Users/devusama/Work/FYP_FrontEnd/src/components/AddSubUser.js":"14","/Users/devusama/Work/FYP_FrontEnd/src/components/BillingDetails.js":"15","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogTitle.js":"16","/Users/devusama/Work/FYP_FrontEnd/src/components/AIBlog.js":"17","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js":"18","/Users/devusama/Work/FYP_FrontEnd/src/components/SEOBlog.js":"19","/Users/devusama/Work/FYP_FrontEnd/src/components/MainSubscription.js":"20","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogKeywords.js":"21","/Users/devusama/Work/FYP_FrontEnd/src/components/MainAccount.js":"22","/Users/devusama/Work/FYP_FrontEnd/src/components/MainAdmin.js":"23","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminForgotPassword.js":"24","/Users/devusama/Work/FYP_FrontEnd/src/components/MainApp.js":"25","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignin.js":"26","/Users/devusama/Work/FYP_FrontEnd/src/components/PlagiarismChecker.js":"27","/Users/devusama/Work/FYP_FrontEnd/src/components/Invoices.js":"28","/Users/devusama/Work/FYP_FrontEnd/src/components/SEOAnalyzer.js":"29","/Users/devusama/Work/FYP_FrontEnd/src/components/MainFeedbackHelpCenter.js":"30","/Users/devusama/Work/FYP_FrontEnd/src/components/ScrollToTop.js":"31","/Users/devusama/Work/FYP_FrontEnd/src/components/SignInUpTemplate.js":"32","/Users/devusama/Work/FYP_FrontEnd/src/components/PaymentSubscriptionTemplate.js":"33","/Users/devusama/Work/FYP_FrontEnd/src/components/BoxContainerWhite.js":"34","/Users/devusama/Work/FYP_FrontEnd/src/components/Counteries.js":"35","/Users/devusama/Work/FYP_FrontEnd/src/components/PieChart.js":"36","/Users/devusama/Work/FYP_FrontEnd/src/components/PageHead.js":"37","/Users/devusama/Work/FYP_FrontEnd/src/components/PageFoot.js":"38","/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileTemplate.js":"39","/Users/devusama/Work/FYP_FrontEnd/src/components/AppTemplate.js":"40","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminAccount.js":"41","/Users/devusama/Work/FYP_FrontEnd/src/components/Complaint.js":"42","/Users/devusama/Work/FYP_FrontEnd/src/components/Helper/ClearLocalStorage.js":"43","/Users/devusama/Work/FYP_FrontEnd/src/components/Snackbar.jsx":"44","/Users/devusama/Work/FYP_FrontEnd/src/components/ButtonLoader.jsx":"45","/Users/devusama/Work/FYP_FrontEnd/src/components/FAQsShareApp.js":"46","/Users/devusama/Work/FYP_FrontEnd/src/components/RatingFeedback.js":"47","/Users/devusama/Work/FYP_FrontEnd/src/components/SystemGuide.js":"48","/Users/devusama/Work/FYP_FrontEnd/src/components/FeedbackHelpTemplate.js":"49","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminUserManagement.js":"50","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminComplaintManagement.js":"51","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminTemplate.js":"52","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminFeedbackManagement.js":"53","/Users/devusama/Work/FYP_FrontEnd/src/components/Appbar.js":"54","/Users/devusama/Work/FYP_FrontEnd/src/components/DotColored.js":"55","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminFaqsManagement.js":"56","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminChangelogManegement.js":"57","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminVideosManagement.js":"58","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js":"59","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPasswordTemplate.js":"60","/Users/devusama/Work/FYP_FrontEnd/src/components/ImageCrawler.js":"61","/Users/devusama/Work/FYP_FrontEnd/src/components/ImageEditor.js":"62","/Users/devusama/Work/FYP_FrontEnd/src/components/Query.js":"63","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminQueryManagement.js":"64","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPasswordAdmin.js":"65"},{"size":398,"mtime":1651335044444,"results":"66","hashOfConfig":"67"},{"size":2933,"mtime":1653372625494,"results":"68","hashOfConfig":"67"},{"size":362,"mtime":1651335044444,"results":"69","hashOfConfig":"67"},{"size":528,"mtime":1651335044444,"results":"70","hashOfConfig":"67"},{"size":11758,"mtime":1653388650232,"results":"71","hashOfConfig":"67"},{"size":13026,"mtime":1653163442888,"results":"72","hashOfConfig":"67"},{"size":11098,"mtime":1653388204827,"results":"73","hashOfConfig":"67"},{"size":8766,"mtime":1653388624063,"results":"74","hashOfConfig":"67"},{"size":8692,"mtime":1653385082721,"results":"75","hashOfConfig":"67"},{"size":5321,"mtime":1651335044439,"results":"76","hashOfConfig":"67"},{"size":8896,"mtime":1653163881856,"results":"77","hashOfConfig":"67"},{"size":9972,"mtime":1651352673011,"results":"78","hashOfConfig":"67"},{"size":6384,"mtime":1653163856151,"results":"79","hashOfConfig":"67"},{"size":26484,"mtime":1653166150125,"results":"80","hashOfConfig":"67"},{"size":12430,"mtime":1653163839719,"results":"81","hashOfConfig":"67"},{"size":7755,"mtime":1653163889997,"results":"82","hashOfConfig":"67"},{"size":12227,"mtime":1653311390211,"results":"83","hashOfConfig":"67"},{"size":7078,"mtime":1653163642717,"results":"84","hashOfConfig":"67"},{"size":11210,"mtime":1653340675476,"results":"85","hashOfConfig":"67"},{"size":937,"mtime":1651335044442,"results":"86","hashOfConfig":"67"},{"size":8360,"mtime":1653163872811,"results":"87","hashOfConfig":"67"},{"size":666,"mtime":1651335044441,"results":"88","hashOfConfig":"67"},{"size":1695,"mtime":1653226311341,"results":"89","hashOfConfig":"67"},{"size":1940,"mtime":1653163629632,"results":"90","hashOfConfig":"67"},{"size":1237,"mtime":1653333381819,"results":"91","hashOfConfig":"67"},{"size":5532,"mtime":1653372170250,"results":"92","hashOfConfig":"67"},{"size":12519,"mtime":1653382652653,"results":"93","hashOfConfig":"67"},{"size":8561,"mtime":1651335044441,"results":"94","hashOfConfig":"67"},{"size":11574,"mtime":1653340331231,"results":"95","hashOfConfig":"67"},{"size":1135,"mtime":1653224243652,"results":"96","hashOfConfig":"67"},{"size":387,"mtime":1651335044443,"results":"97","hashOfConfig":"67"},{"size":862,"mtime":1651335044443,"results":"98","hashOfConfig":"67"},{"size":11526,"mtime":1653163333920,"results":"99","hashOfConfig":"67"},{"size":798,"mtime":1651335044440,"results":"100","hashOfConfig":"67"},{"size":13502,"mtime":1651335044441,"results":"101","hashOfConfig":"67"},{"size":2391,"mtime":1651335044442,"results":"102","hashOfConfig":"67"},{"size":564,"mtime":1651335044442,"results":"103","hashOfConfig":"67"},{"size":2459,"mtime":1653179574308,"results":"104","hashOfConfig":"67"},{"size":12681,"mtime":1653163348032,"results":"105","hashOfConfig":"67"},{"size":18882,"mtime":1653336236321,"results":"106","hashOfConfig":"67"},{"size":11805,"mtime":1653230507746,"results":"107","hashOfConfig":"67"},{"size":23341,"mtime":1653163917375,"results":"108","hashOfConfig":"67"},{"size":185,"mtime":1652011347836,"results":"109","hashOfConfig":"67"},{"size":819,"mtime":1651335044443,"results":"110","hashOfConfig":"67"},{"size":223,"mtime":1651335044440,"results":"111","hashOfConfig":"67"},{"size":6533,"mtime":1653163948098,"results":"112","hashOfConfig":"67"},{"size":23918,"mtime":1652602253775,"results":"113","hashOfConfig":"67"},{"size":5703,"mtime":1653133473100,"results":"114","hashOfConfig":"67"},{"size":12518,"mtime":1653225174725,"results":"115","hashOfConfig":"67"},{"size":25584,"mtime":1653163703373,"results":"116","hashOfConfig":"67"},{"size":15377,"mtime":1653227285461,"results":"117","hashOfConfig":"67"},{"size":14148,"mtime":1653225956849,"results":"118","hashOfConfig":"67"},{"size":15377,"mtime":1653150962881,"results":"119","hashOfConfig":"67"},{"size":6468,"mtime":1653163798145,"results":"120","hashOfConfig":"67"},{"size":279,"mtime":1651335044441,"results":"121","hashOfConfig":"67"},{"size":18766,"mtime":1653163599843,"results":"122","hashOfConfig":"67"},{"size":10617,"mtime":1653151015128,"results":"123","hashOfConfig":"67"},{"size":14302,"mtime":1653163725278,"results":"124","hashOfConfig":"67"},{"size":11367,"mtime":1653223629535,"results":"125","hashOfConfig":"67"},{"size":5619,"mtime":1653170333105,"results":"126","hashOfConfig":"67"},{"size":14078,"mtime":1653333784123,"results":"127","hashOfConfig":"67"},{"size":3368,"mtime":1653336384761,"results":"128","hashOfConfig":"67"},{"size":21153,"mtime":1653225513553,"results":"129","hashOfConfig":"67"},{"size":15316,"mtime":1653227029286,"results":"130","hashOfConfig":"67"},{"size":11489,"mtime":1653376292630,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"2zf2qn",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"134"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"134"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"134"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"134"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"134"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"134"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"134"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"134"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"134"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"134"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"134"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"134"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"134"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"134"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"134"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"134"},"/Users/devusama/Work/FYP_FrontEnd/src/index.js",[],["306","307"],"/Users/devusama/Work/FYP_FrontEnd/src/App.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"import \"@fontsource/roboto\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport ProfileDelete from \"./components/ProfileDelete\";\nimport ProfileUpdate from \"./components/ProfileUpdate\";\nimport AddSubUser from \"./components/AddSubUser\";\nimport BlogHistory from \"./components/BlogHistory\";\nimport SubscriptionPackage from \"./components/SubscriptionPackage\";\nimport BillingDetails from \"./components/BillingDetails\";\nimport Invoices from \"./components/Invoices\";\nimport PaymentDetails from \"./components/PaymentDetails\";\nimport AdminSignin from \"./components/AdminSignin\";\nimport AdminSignup from \"./components/AdminSignup\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport BlogTitle from \"./components/BlogTitle\";\nimport BlogOutline from \"./components/BlogOutline\";\nimport BlogKeywords from \"./components/BlogKeywords\";\nimport AIBlog from \"./components/AIBlog\";\nimport SEOAnalyzer from \"./components/SEOAnalyzer\";\nimport SEOBlog from \"./components/SEOBlog\";\nimport PlagiarismChecker from \"./components/PlagiarismChecker\";\nimport MainApp from \"./components/MainApp\";\nimport MainAdmin from \"./components/MainAdmin\";\nimport MainAccount from \"./components/MainAccount\";\nimport MainSubscription from \"./components/MainSubscription\";\nimport AdminForgotPassword from \"./components/AdminForgotPassword\";\nimport MainFeedbackHelpCenter from \"./components/MainFeedbackHelpCenter\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport ForgetPasswordAdmin from \"./components/ForgetPasswordAdmin\";\nimport ForgetPasswordTemplate from \"./components/ForgetPasswordTemplate\";\nimport ImageEditor from \"./components/ImageEditor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <ScrollToTop>\n          <Switch>\n            {/* AppRoutes */}\n            <Route path=\"/\" exact component={SignUp} />\n            <Route path=\"/signin\" exact component={SignIn} />\n            <Route\n              path=\"/forgotPassword\"\n              exact\n              component={ForgetPasswordTemplate}\n            />\n            <Route path={\"/app\"} component={MainApp} />\n            <Route path=\"/account\" component={MainAccount} />\n            <Route path=\"/subscription\" component={MainSubscription} />\n            <Route\n              path=\"/feedbackHelpCenter\"\n              component={MainFeedbackHelpCenter}\n            />\n\n            {/* Admin Routes */}\n            <Route path=\"/admin\" component={MainAdmin} />\n            <Route path=\"/adminSignin\" exact component={AdminSignin} />\n            <Route path=\"/adminSignup\" exact component={AdminSignup} />\n            <Route\n              path=\"/adminForgetPassword\"\n              exact\n              component={ForgetPasswordAdmin}\n            />\n          </Switch>\n        </ScrollToTop>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/devusama/Work/FYP_FrontEnd/src/reportWebVitals.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/theme.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/SignUp.js",["326","327","328","329","330","331","332"],"/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileUpdate.js",["333","334","335"],"import { Avatar, Typography, Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: \"80px\",\n    height: \"80px\",\n  },\n  changeImgContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(8),\n  },\n  marginLeft: {\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: 0,\n    },\n  },\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: theme.spacing(5),\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: \"8px 9px 25px rgba(0, 0, 0, 0.06)\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    backgroundColor: theme.palette.light.main,\n    width: \"48%\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: theme.spacing(4),\n      width: \"100%\",\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  changePhotoBtn: {\n    backgroundImage: \"linear-gradient(95.47deg, #0067B1 0.51%, #008181 99.64%)\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px rgba(0, 0, 0, 0.14), 0px 1px 5px rgba(0, 0, 0, 0.12)\",\n    marginLeft: theme.spacing(2),\n  },\n\n  updateBtns: {\n    backgroundImage: \"linear-gradient(95.47deg, #0067B1 0.51%, #008181 99.64%)\",\n    boxShadow:\n      \"0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px rgba(0, 0, 0, 0.14), 0px 1px 5px rgba(0, 0, 0, 0.12)\",\n    color: theme.palette.light.main,\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    color: theme.palette.secondary.main,\n    marginBottom: theme.spacing(6),\n    textAlign: \"center\",\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(4),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(4),\n    },\n  },\n  gridItem: {\n    padding: 0,\n  },\n  container: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n}));\n\nfunction ProfileUpdate() {\n  const classes = useStyles();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [infoLoading, setInfoLoading] = useState(false);\n  const [passwordLoading, setPasswordLoading] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm();\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue: setValue1,\n    watch,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  function updatePassword(data) {\n    setPasswordLoading(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/changePassword`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        ...data,\n        username: JSON.parse(localStorage.getItem(\"user\")).username,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"Invalid Password\") {\n          setSnackData({\n            message: \"Password Updated Succesfully\",\n            type: \"success\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setValue1(\"password\", \"\");\n          setValue1(\"confirmPassword\", \"\");\n          setPasswordLoading(false);\n        } else {\n          setSnackData({\n            message: \"Invalid Old Password\",\n            type: \"error\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setPasswordLoading(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true,\n        });\n        setPasswordLoading(false);\n      });\n  }\n\n  function updateInformation(data) {\n    setInfoLoading(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateProfile`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSnackData({\n          message: \"Information Updated Succesfully\",\n          type: \"success\",\n          open: true,\n        });\n        console.log(JSON.stringify(response.data));\n        localStorage.removeItem(\"user\");\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        setInfoLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Information\",\n          type: \"error\",\n          open: true,\n        });\n        setInfoLoading(false);\n      });\n  }\n\n  function plotData(data) {\n    setValue(\"firstName\", data.firstName);\n    setValue(\"lastName\", data.lastName);\n    setValue(\"username\", data.username);\n    setValue(\"userEmail\", data.userEmail);\n  }\n  useEffect(() => {\n    plotData(JSON.parse(localStorage.getItem(\"user\")));\n  }, []);\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <div className={classes.changeImgContainer}>\n        <Avatar\n          src={JSON.parse(localStorage.getItem(\"user\")).profilePicture}\n          className={classes.avatar}\n        ></Avatar>\n        <span>\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              style={{ marginLeft: 10 }}\n              disableElevation\n            >\n              Change Picture\n            </Button>\n          </label>\n        </span>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.formContainer}>\n          <Typography variant={\"h5\"} className={classes.formHeading}>\n            Personal Information\n          </Typography>\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              updateInformation(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"First Name\"}\n              name=\"firstName\"\n              className={classes.inputFeild}\n              {...register(\"firstName\", {\n                required: \"First name required\",\n                pattern: {\n                  value: /^[a-zA-Z ]*$/,\n                  message: \"Invalid first name\",\n                },\n              })}\n              error={Boolean(errors.firstName)}\n              helperText={errors.firstName?.message}\n              fullWidth\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Last Name\"}\n              className={classes.inputFeild}\n              name=\"lastName\"\n              {...register(\"lastName\", {\n                required: \"Last name required\",\n                pattern: {\n                  value: /^[a-zA-Z ]*$/,\n                  message: \"Invalid last name\",\n                },\n              })}\n              error={Boolean(errors.lastName)}\n              helperText={errors.lastName?.message}\n              fullWidth\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Username\"}\n              name=\"username\"\n              disabled\n              className={classes.inputFeild}\n              {...register(\"username\", {\n                required: \"Username Required\",\n                pattern: {\n                  value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                  minLength: {\n                    value: 6,\n                    message: \"Username can not be less than 3 characters\",\n                  },\n                  message: \"Invalid Username\",\n                },\n              })}\n              error={Boolean(errors.username)}\n              helperText={errors.username?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              disabled={infoLoading}\n              type=\"submit\"\n            >\n              Update Information\n              {infoLoading ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        </div>\n        <div className={[classes.formContainer, classes.marginLeft].join(\" \")}>\n          <Typography variant={\"h5\"} className={classes.formHeading}>\n            Change Password\n          </Typography>\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              updatePassword(data);\n            })}\n            className={classes.passwordSection}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Old Password\"}\n              className={classes.inputFeild}\n              name=\"oldPassword\"\n              {...register1(\"oldPassword\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors1.password)}\n              helperText={errors1.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"New Password\"}\n              className={classes.inputFeild}\n              name=\"password\"\n              {...register1(\"password\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors1.password)}\n              helperText={errors1.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Confirm Password\"}\n              className={classes.inputFeild}\n              name=\"confirmPassword\"\n              {...register1(\"confirmPassword\", {\n                required: \"Confirm Password Required\",\n                validate: (value) =>\n                  value === password.current || \"Passwords do not match\",\n              })}\n              type={\"password\"}\n              error={Boolean(errors1.confirmPassword)}\n              helperText={errors1.confirmPassword?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              type=\"submit\"\n              disabled={passwordLoading}\n            >\n              Update Password {passwordLoading ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileUpdate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/SubscriptionPackage.js",["336","337","338","339","340","341","342"],"/Users/devusama/Work/FYP_FrontEnd/src/components/SignIn.js",["343","344","345","346","347"],"/Users/devusama/Work/FYP_FrontEnd/src/components/PaymentDetails.js",["348","349","350"],"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminDashboard.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/BlogOutline.js",["351"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  outlineList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  outlineListItem: {\n    paddingTop: theme.spacing(1),\n\n    color: theme.palette.dark.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction BlogOutline() {\n  const classes = useStyles();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <PageHead title={\"Blog Outline Suggestions\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <TextField\n            label={\"Title\"}\n            variant={\"outlined\"}\n            fullWidth\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <TextField\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            multiline\n            rows={12}\n            label={\"Description\"}\n            variant={\"outlined\"}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            fullWidth\n          />\n          <Button\n            variant=\"contained\"\n            disableElevation\n            className={classes.btnMain}\n            endIcon={<FiCheckSquare />}\n          >\n            Generate\n          </Button>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <HistoryIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      History\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              <Card className={classes.outputCard}>\n                <Typography\n                  variant={\"body2\"}\n                  className={classes.cardTime}\n                  gutterBottom\n                >\n                  Just Now\n                </Typography>\n                <ul className={classes.outlineList}>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                  <li className={classes.outlineListItem}>\n                    10 common mistakes when you are using your phone\n                  </li>\n                </ul>\n\n                <div className={classes.btnsContainer}>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <ClipboardIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <FavouriteIcon />\n                    </IconButton>\n                  </div>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <FlagIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\" className={classes.historyText}>\n              No History to show\n            </Typography>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot pageNo=\"1.2\" backLink=\"/blogTitle\" nextLink=\"/blogKeywords\" />\n    </div>\n  );\n}\nexport default BlogOutline;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileDelete.js",["352","353","354","355"],"import {\n  Avatar,\n  makeStyles,\n  Typography,\n  Modal,\n  Button,\n  Fade,\n  alpha,\n  Backdrop,\n} from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ProfileTemplate from \"./ProfileTemplate\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { FaTrash as DeleteIcon, FaInfo as WarningIcon } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport { logout } from \"./Helper/ClearLocalStorage\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { MdOutlineClose } from \"react-icons/md\";\n\nconst useStyle = makeStyles((theme) => ({\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  head: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n\n  contentPart1: {\n    width: \"40%\",\n    textAlign: \"justify\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"80%\",\n    },\n  },\n  contentProminent: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n  },\n  contentPart2: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    width: \"80%\",\n  },\n  warningContentPart1: {\n    width: \"80%\",\n    textAlign: \"justify\",\n  },\n  checkBox: {\n    marginTop: theme.spacing(2),\n  },\n  checkboxLabel: {\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"14px\",\n    },\n  },\n  item1: {\n    marginBottom: theme.spacing(5),\n  },\n  warningIcon: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  warningHeading: {\n    color: theme.palette.warning.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n\n  disableBtn: {\n    marginTop: theme.spacing(2),\n    display: \"block\",\n    boxShadow: \"none\",\n    color: theme.palette.light.main,\n    backgroundColor: theme.palette.warning.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.warning.main, 0.8),\n    },\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  contentBox: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(4),\n    marginLeft: theme.spacing(8),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(4),\n      marginLeft: 0,\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontWeight: \"bolder\",\n    color: theme.palette.danger.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(4),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  mt3: {\n    marginTop: theme.spacing(3),\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\",\n    justifyContent: \"start\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    maxWidth:\"800px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction ProfileDelete() {\n  const history = useHistory()\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const classes = useStyle();\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  // deleteconfirm \n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n  function deleteProfile() {\n    console.log(( JSON.parse(localStorage.getItem(\"user\"))._id))\n    setSnackData({ ...snackData, open: false });\n    setDeleteLoading(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteUser${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response)\n        setDeleteLoading(false);\n        logout(history);\n      })\n      .catch(function (error) {\n        console.log(error)\n        setDeleteLoading(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting Account\",\n          open: true,\n        });\n      });\n  }\n  return (\n    <div className={classes.content}>\n      <BoxContainerWhite>\n       <Modal\n          aria-labelledby=\"Delete Sub User\"\n          aria-describedby=\"Delete Account of a sub user\"\n          className={classes.modal}\n          open={deleteUser}\n          onClose={deleteClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={deleteUser}>\n            <div className={classes.paper}>\n              <div className={classes.modalForm}>\n                <div className={classes.displayFlex}>\n                  <Avatar className={classes.deleteIcon}>\n                    <DeleteIcon />\n                  </Avatar>\n                  <Typography\n                    variant={\"h6\"}\n                    component={\"h3\"}\n                    className={classes.dangerHeading}\n                  >\n                    Delete Account Permanently\n                  </Typography>\n                </div>\n              </div>\n              <div className={classes.contentBox}>\n                <Typography variant=\"body2\" className={classes.contentPart1}>\n                  We are sorry to hear you’d like to delete your account.\n                  Permenantly Delete data and all services from IntelliGenie.\n                </Typography>\n                <Typography variant={\"h6\"} className={classes.contentProminent}>\n                  Keeping Your Data Safe\n                </Typography>\n                <Typography variant={\"body2\"} className={classes.contentPart2}>\n                  Nothing is more important to us than the safety and security\n                  of our community. People put their trust in us. So we will\n                  never make any compromise when it comes to safeguarding your\n                  data\n                </Typography>\n\n                <div className={classes.btnGroup}>\n                  <Button\n                    className={classes.deleteBtn}\n                    variant=\"contained\"\n                    onClick={deleteProfile}\n                    disabled={deleteLoading}\n                  >\n                    Delete Account{\" \"}\n                    {deleteLoading ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    className={classes.ml3}\n                    variant={\"contained\"}\n                    onClick={deleteClose}\n                    disableElevation\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n        <Snackbar\n          open={snackData.open}\n          type={snackData.type}\n          message={snackData.message}\n        />\n        <Typography\n          variant={\"h5\"}\n          component={\"h2\"}\n          className={[classes.heading, classes.dangerHeading]}\n          gutterBottom\n        >\n          DELETE PROFILE\n        </Typography>\n        <div className={classes.item1}>\n          <div className={classes.head}>\n            <Avatar className={classes.deleteIcon}>\n              <DeleteIcon />\n            </Avatar>\n            <Typography\n              variant={\"h6\"}\n              component={\"h3\"}\n              className={classes.dangerHeading}\n            >\n              Delete Account Permanently\n            </Typography>\n          </div>\n          <div className={classes.contentBox}>\n            <Typography variant=\"body2\" className={classes.contentPart1}>\n              We are sorry to hear you’d like to delete your account.\n              Permenantly Delete data and all services from IntelliGenie.\n            </Typography>\n            <Typography variant={\"h6\"} className={classes.contentProminent}>\n              Keeping Your Data Safe\n            </Typography>\n            <Typography variant={\"body2\"} className={classes.contentPart2}>\n              Nothing is more important to us than the safety and security of\n              our community. People put their trust in us. So we will never make\n              any compromise when it comes to safeguarding your data\n            </Typography>\n          \n            <div>\n              <Button\n                variant=\"contained\"\n                disableElevation\n                disabled={deleteLoading}\n                style={{ marginTop: 20 }}\n                className={classes.deleteBtn}\n                onClick={deleteOpen}\n              >\n                Delete Account\n              </Button>\n            </div>\n          </div>\n        </div>\n      </BoxContainerWhite>\n    </div>\n  );\n}\n\nexport default ProfileDelete;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogHistory.js",["356"],"import { Button, Card, Typography, Menu, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { useState } from \"react\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport ProfileTemplate from \"./ProfileTemplate\";\nimport { FiMoreHorizontal as MoreIcon } from \"react-icons/fi\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontWeight: \"bolder\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  cardsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  card: {\n    boxShadow: \"4px 4px 12px rgba(0, 0, 0, 0.15)\",\n    backgroundColor: \"#E1F0F0\",\n    margin: theme.spacing(2) + \"px \" + theme.spacing(0) + \"px\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"49%\",\n      padding: theme.spacing(5),\n    },\n  },\n  moreIcon: {\n    fontSize: \"20px\",\n    color: theme.palette.primary.main,\n  },\n  cardHeading: {\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n  },\n  displayFlexSpaceBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  cardBody: {\n    textAlign: \"justify\",\n    marginTop: theme.spacing(2),\n  },\n  pagination: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction BlogHistory() {\n  const classes = useStyles();\n\n  //   Menu\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.content}>\n      <BoxContainerWhite>\n        <Typography\n          variant={\"h5\"}\n          component={\"h2\"}\n          className={classes.heading}\n          gutterBottom\n        >\n          BLOG HISTORY\n        </Typography>\n        <div className={classes.cardsContainer}>\n          <Card className={classes.card}>\n            <div className={classes.displayFlexSpaceBetween}>\n              <Typography variant={\"h6\"} className={classes.cardHeading}>\n                Effects Of Global Warming\n              </Typography>\n              <Button\n                size={\"small\"}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                disableElevation\n              >\n                <MoreIcon className={classes.moreIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Remove</MenuItem>\n                <MenuItem onClick={handleClose}>Downlaod</MenuItem>\n              </Menu>\n            </div>\n            <Typography variant={\"body2\"} className={classes.cardBody}>\n              Ea eu velit aliquip occaecat occaecat exercitation ipsum duis do\n              non eiusmod quis excepteur do. t. Irure ullamco nostrud occaecat\n              id. Nulla pariatur ut cupidatat aute sint id. Do veniam ad sunt\n              non ad. Mollit consectetur cillum eu Lorem aliqua occaecat eu\n              nostrud ut cupidatat ea sit. Sit commodo elit proident magna\n              dolore tempor eu velit et eiusmod. Dolor fugiat adipisicing\n              ullamco velit officia aliquip do irure labore sint. int et nulla\n              est occaecat duis. Labore non officia ad enim nulla magna\n              consectetur adipisicing. Ad exercitation quis laborum. o veniam ad\n              sunt non ad. Mollit consectetur cillum eu Lorem aliqua occaecat eu\n              nostrud ut cupidatat ea sit. Lorem aliqua occaecat eu nostrud ut\n              cupidatat ea sit\n            </Typography>\n          </Card>\n          <Card className={classes.card}>\n            <div className={classes.displayFlexSpaceBetween}>\n              <Typography variant={\"h6\"} className={classes.cardHeading}>\n                Effects Of Global Warming\n              </Typography>\n              <Button\n                size={\"small\"}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                disableElevation\n              >\n                <MoreIcon className={classes.moreIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Remove</MenuItem>\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n              </Menu>\n            </div>\n            <Typography variant={\"body2\"} className={classes.cardBody}>\n              Ea eu velit aliquip occaecat occaecat exercitation ipsum duis do\n              non eiusmod quis excepteur do. t. Irure ullamco nostrud occaecat\n              id. Nulla pariatur ut cupidatat aute sint id. Do veniam ad sunt\n              non ad. Mollit consectetur cillum eu Lorem aliqua occaecat eu\n              nostrud ut cupidatat ea sit. Sit commodo elit proident magna\n              dolore tempor eu velit et eiusmod. Dolor fugiat adipisicing\n              ullamco velit officia aliquip do irure labore sint. int et nulla\n              est occaecat duis. Labore non officia ad enim nulla magna\n              consectetur adipisicing. Ad exercitation quis laborum. o veniam ad\n              sunt non ad. Mollit consectetur cillum eu Lorem aliqua occaecat eu\n              nostrud ut cupidatat ea sit. Lorem aliqua occaecat eu nostrud ut\n              cupidatat ea sit\n            </Typography>\n          </Card>\n        </div>\n        <Pagination\n          variant={\"outlined\"}\n          color={\"primary\"}\n          count={10}\n          size={\"small\"}\n          className={classes.pagination}\n        />\n      </BoxContainerWhite>\n    </div>\n  );\n}\n\nexport default BlogHistory;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AddSubUser.js",["357","358","359","360","361","362"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { FiTrash as DeleteIcon } from \"react-icons/fi\";\nimport { useState, useRef, useEffect } from \"react\";\nimport ProfileTemplate from \"./ProfileTemplate\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport moment from \"moment\";\n\nconst useStyle = makeStyles((theme) => ({\n  MuiTableRow: {\n    height: \"50px\",\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  contentPart1: {\n    width: \"100%\",\n    textAlign: \"justify\",\n    marginTop: theme.spacing(2),\n  },\n  contentProminent: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n  },\n  contentPart2: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    width: \"100%\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    backgroundImage: `linear-gradient(95.47deg, ${theme.palette.secondary.main} 0.51%, ${theme.palette.primary.main} 99.64%)`,\n    color: theme.palette.light.main,\n    marginTop: theme.spacing(3),\n  },\n}));\n\nfunction AddSubUser() {\n  const classes = useStyle();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const [subUsers, setSubUsers] = useState([]);\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n  //   Add User Modal methods\n  const [addUser, setAddUser] = useState(false);\n\n  const addOpen = () => {\n    setAddUser(true);\n  };\n\n  const addClose = () => {\n    setAddUser(false);\n    reset();\n  };\n\n  function AddSubUser(data) {\n    console.log(data);\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/createSubUser${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (res) {\n        if (res.data !== \"Username ALready Exist\") {\n          setSnackData({\n            message: \"User Registered Successfuly\",\n            type: \"success\",\n            open: true,\n          });\n          setSubUsers([...subUsers, res.data]);\n          reset();\n          addClose();\n          setDisable(false);\n        } else {\n          setSnackData({\n            message: \"User Already Registered\",\n            type: \"error\",\n            open: true,\n          });\n          setValue(\"username\", \"\");\n          setDisable(false);\n        }\n        console.log(res);\n      })\n      .catch(function (error) {\n        setSnackData({\n          message: \"Something went wrong please try again\",\n          type: \"error\",\n          open: true,\n        });\n\n        setDisable(false);\n      });\n  }\n  function EditSubUser(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateProfile`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSnackData({\n          message: \"Information Updated Succesfully\",\n          type: \"success\",\n          open: true,\n        });\n\n        setSubUsers([\n          ...subUsers.filter((ele) => data.username !== ele.username),\n          data,\n        ]);\n        setDisable(false);\n        editClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Information\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n  function editReady(data) {\n    setValue(\"firstName\", data.firstName);\n    setValue(\"lastName\", data.lastName);\n    setValue(\"userEmail\", data.userEmail);\n    setValue(\"username\", data.username);\n    editOpen();\n  }\n  function DeleteSubUser() {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteUser${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setSnackData({\n          type: \"success\",\n          message: \"Sub User Deleted Successfully\",\n          open: true,\n        });\n        setDisable(false);\n        setSubUsers([...subUsers.filter((ele) => ele._id !== actionId)]);\n        deleteClose();\n        setActionId(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting SubUser\",\n          open: true,\n        });\n      });\n  }\n  function getAllSubusers() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/allSubUsers${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSubUsers(response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllSubusers();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <BoxContainerWhite className={classes.width90}>\n        <Typography\n          variant={\"h5\"}\n          component={\"h2\"}\n          className={classes.heading}\n          gutterBottom\n        >\n          MANAGE SUB USERS\n        </Typography>\n        <div className={classes.tableContainer}>\n          <MaterialTable\n            style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n            title=\" \"\n            isLoading={pageLoading}\n            columns={[\n              {\n                title: \"Name\",\n                field: \"firstName\",\n                render: (rowData) => (\n                  <p>{rowData.firstName + \" \" + rowData.lastName}</p>\n                ),\n              },\n              { title: \"Email\", field: \"userEmail\" },\n              { title: \"Username\", field: \"username\" },\n              {\n                title: \"Creation Date\",\n                field: \"creationDate\",\n                render: (rowData) => (\n                  <p>{moment(rowData.createdAt).format(\"DD MMM, YYYY\")}</p>\n                ),\n              },\n            ]}\n            data={subUsers}\n            actions={[\n              {\n                icon: \"edit\",\n                tooltip: \"Edit User\",\n                onClick: (e, data) => editReady(data),\n                iconProps: {\n                  style: { color: \"#7fbfbf\" },\n                },\n              },\n              {\n                icon: \"delete\",\n                tooltip: \"Delete User\",\n                onClick: (e, data) => {\n                  setActionId(data._id);\n                  deleteOpen();\n                },\n                iconProps: {\n                  style: { color: \"#7fbfbf\" },\n                },\n              },\n            ]}\n            options={{\n              actionsColumnIndex: -1,\n              exportButton: true,\n              exportFileName: \"Sub Users\",\n              exportAllData: true,\n              emptyRowsWhenPaging: false,\n              headerStyle: {\n                backgroundColor: \"#7FBFBF\",\n                color: \"#444\",\n              },\n            }}\n          />\n        </div>\n        <Button\n          variant={\"contained\"}\n          className={classes.btn}\n          onClick={addOpen}\n          disableElevation\n        >\n          Add Sub User\n        </Button>\n        <Modal\n          aria-labelledby=\"Edit Sub User Modal\"\n          aria-describedby=\"Edit sub user detail and update them\"\n          className={classes.modal}\n          open={editUser}\n          onClose={editClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={editUser}>\n            <div className={classes.paper}>\n              <Typography\n                variant={\"h5\"}\n                color={\"primary\"}\n                id=\"transition-modal-title\"\n              >\n                Edit Sub User\n              </Typography>\n              <div className={classes.modalForm}>\n                <form\n                  noValidate\n                  onSubmit={handleSubmit1((data) => {\n                    EditSubUser(data);\n                  })}\n                >\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"First Name\"}\n                    name=\"firstName\"\n                    className={classes.formItem}\n                    {...register1(\"firstName\", {\n                      required: \"First name required\",\n                      pattern: {\n                        value: /^[a-zA-Z ]*$/,\n                        message: \"Invalid first name\",\n                      },\n                    })}\n                    error={Boolean(errors1.firstName)}\n                    helperText={errors1.firstName?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Last Name\"}\n                    className={classes.formItem}\n                    name=\"lastName\"\n                    {...register1(\"lastName\", {\n                      required: \"Last name required\",\n                      pattern: {\n                        value: /^[a-zA-Z ]*$/,\n                        message: \"Invalid last name\",\n                      },\n                    })}\n                    error={Boolean(errors1.lastName)}\n                    helperText={errors1.lastName?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Email\"}\n                    name=\"userEmail\"\n                    className={classes.formItem}\n                    {...register1(\"userEmail\", {\n                      required: \"Email required\",\n                      pattern: {\n                        value:\n                          /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                        message: \"Invalid email\",\n                      },\n                    })}\n                    error={Boolean(errors1.userEmail)}\n                    helperText={errors1.userEmail?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    disabled\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Username\"}\n                    name=\"username\"\n                    className={classes.formItem}\n                    {...register1(\"username\", {\n                      required: \"Username Required\",\n                      pattern: {\n                        value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                        minLength: {\n                          value: 6,\n                          message: \"Username can not be less than 3 characters\",\n                        },\n                        message: \"Invalid Username\",\n                      },\n                    })}\n                    error={Boolean(errors1.username)}\n                    helperText={errors1.username?.message}\n                    fullWidth\n                  ></TextField>\n\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignContent: \"flex-end\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    <Button\n                      variant={\"contained\"}\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      disabled={disable}\n                      disableElevation\n                    >\n                      Edit Subuser\n                      {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      disableElevation\n                      onClick={editClose}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n        <Modal\n          aria-labelledby=\"Delete Sub User\"\n          aria-describedby=\"Delete Account of a sub user\"\n          className={classes.modal}\n          open={deleteUser}\n          onClose={deleteClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={deleteUser}>\n            <div className={classes.paper}>\n              <div className={classes.modalForm}>\n                <div className={classes.displayFlex}>\n                  <Avatar className={classes.deleteIcon}>\n                    <DeleteIcon />\n                  </Avatar>\n                  <Typography\n                    variant={\"h6\"}\n                    component={\"h3\"}\n                    className={classes.dangerHeading}\n                  >\n                    Delete Account Permanently\n                  </Typography>\n                </div>\n              </div>\n              <div className={classes.contentBox}>\n                <Typography variant=\"body2\" className={classes.contentPart1}>\n                  We are sorry to hear you’d like to delete your account.\n                  Permenantly Delete data and all services from IntelliGenie.\n                </Typography>\n                <Typography variant={\"h6\"} className={classes.contentProminent}>\n                  Keeping Your Data Safe\n                </Typography>\n                <Typography variant={\"body2\"} className={classes.contentPart2}>\n                  Nothing is more important to us than the safety and security\n                  of our community. People put their trust in us. So we will\n                  never make any compromise when it comes to safeguarding your\n                  data\n                </Typography>\n\n                <div className={classes.btnGroup}>\n                  <Button\n                    className={classes.deleteBtn}\n                    variant=\"contained\"\n                    onClick={DeleteSubUser}\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Delete Account{\" \"}\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    className={classes.ml3}\n                    variant={\"contained\"}\n                    onClick={deleteClose}\n                    disableElevation\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n        <Modal\n          aria-labelledby=\"Add Sub User\"\n          aria-describedby=\"Add Account of a sub user\"\n          className={classes.modal}\n          open={addUser}\n          onClose={addClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 300,\n          }}\n          style={{\n            overflowY: \"auto\",\n          }}\n        >\n          <Fade in={addUser}>\n            <div className={classes.paper}>\n              <Typography\n                variant={\"h5\"}\n                color={\"primary\"}\n                id=\"transition-modal-title\"\n              >\n                Add Sub User\n              </Typography>\n              <div className={classes.modalForm}>\n                <div className={classes.modalForm}>\n                  <form\n                    noValidate\n                    onSubmit={handleSubmit((data) => {\n                      AddSubUser(data);\n                    })}\n                  >\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"First Name\"}\n                      name=\"firstName\"\n                      className={classes.formItem}\n                      {...register(\"firstName\", {\n                        required: \"First name required\",\n                        pattern: {\n                          value: /^[a-zA-Z ]*$/,\n                          message: \"Invalid first name\",\n                        },\n                      })}\n                      error={Boolean(errors.firstName)}\n                      helperText={errors.firstName?.message}\n                      fullWidth\n                    ></TextField>\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"Last Name\"}\n                      className={classes.formItem}\n                      name=\"lastName\"\n                      {...register(\"lastName\", {\n                        required: \"Last name required\",\n                        pattern: {\n                          value: /^[a-zA-Z ]*$/,\n                          message: \"Invalid last name\",\n                        },\n                      })}\n                      error={Boolean(errors.lastName)}\n                      helperText={errors.lastName?.message}\n                      fullWidth\n                    ></TextField>\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"Email\"}\n                      name=\"userEmail\"\n                      className={classes.formItem}\n                      {...register(\"userEmail\", {\n                        required: \"Email required\",\n                        pattern: {\n                          value:\n                            /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                          message: \"Invalid email\",\n                        },\n                      })}\n                      error={Boolean(errors.userEmail)}\n                      helperText={errors.userEmail?.message}\n                      fullWidth\n                    ></TextField>\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"Username\"}\n                      name=\"username\"\n                      className={classes.formItem}\n                      {...register(\"username\", {\n                        required: \"Username Required\",\n                        pattern: {\n                          value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                          minLength: {\n                            value: 6,\n                            message:\n                              \"Username can not be less than 3 characters\",\n                          },\n                          message: \"Invalid Username\",\n                        },\n                      })}\n                      error={Boolean(errors.username)}\n                      helperText={errors.username?.message}\n                      fullWidth\n                    ></TextField>\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"Password\"}\n                      className={classes.formItem}\n                      name=\"password\"\n                      {...register(\"password\", {\n                        required: \"Password Required\",\n                        minLength: { value: 6, message: \"Invalid Password\" },\n                      })}\n                      type={\"password\"}\n                      fullWidth\n                      error={Boolean(errors.password)}\n                      helperText={errors.password?.message}\n                    ></TextField>\n                    <TextField\n                      variant={\"outlined\"}\n                      InputLabelProps={{ shrink: true }}\n                      size={\"medium\"}\n                      color={\"primary\"}\n                      label={\"Confirm Password\"}\n                      className={classes.formItem}\n                      name=\"confirmPassword\"\n                      {...register(\"confirmPassword\", {\n                        required: \"Confirm Password Required\",\n                        validate: (value) =>\n                          value === password.current ||\n                          \"Passwords do not match\",\n                      })}\n                      type={\"password\"}\n                      error={Boolean(errors.confirmPassword)}\n                      helperText={errors.confirmPassword?.message}\n                      fullWidth\n                    ></TextField>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignContent: \"flex-end\",\n                        marginTop: \"20px\",\n                      }}\n                    >\n                      <Button\n                        variant={\"contained\"}\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        disabled={disable}\n                        disableElevation\n                      >\n                        Add Subuser\n                        {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        disableElevation\n                        onClick={addClose}\n                      >\n                        Close\n                      </Button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n      </BoxContainerWhite>\n    </div>\n  );\n}\n\nexport default AddSubUser;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/BillingDetails.js",["363"],"import PaymentSubscriptionTemplate from \"./PaymentSubscriptionTemplate\";\nimport {\n  Typography,\n  Button,\n  Backdrop,\n  Modal,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { useState } from \"react\";\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"90%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(4),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n  subHeading: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    [theme.breakpoints.down(\"sm\")]: {\n      textAlign: \"center\",\n    },\n  },\n  primaryAddressContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginTop: theme.spacing(5),\n    },\n  },\n  miniHeading: {\n    fontSize: \"12px\",\n    // marginTop: theme.spacing(2),\n    color: theme.palette.dark.main,\n  },\n  headingContent: {\n    fontSize: \"16px\",\n    marginBottom: theme.spacing(2),\n  },\n  mb0: {\n    marginBottom: 0,\n  },\n  displayFlex: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n  },\n  ml2: {\n    marginLeft: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(8),\n    },\n  },\n  btnbg: {\n    backgroundImage: `linear-gradient(95.47deg, #0067B1 0.51%, #008181 99.64%)`,\n    boxShadow: \"none\",\n    color: theme.palette.light.main,\n  },\n  btnright: {\n    alignSelf: \"flex-end\",\n    [theme.breakpoints.down(\"sm\")]: {\n      alignSelf: \"flex-start\",\n      marginTop: theme.spacing(1),\n    },\n  },\n  address: {\n    backgroundColor: \"#E1F0F0\",\n    boxShadow: \"4px 4px 12px rgba(0, 0, 0, 0.15)\",\n    padding: theme.spacing(2.5),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n      paddingTop: theme.spacing(2.5),\n      paddingBottom: theme.spacing(2.5),\n    },\n  },\n  addressContainer: {\n    width: \"70%\",\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginTop: theme.spacing(5),\n      marginLeft: theme.spacing(0),\n    },\n  },\n\n  mdDisplayNone: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  lgDisplayNone: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  dFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: theme.spacing(3),\n  },\n\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    backgroundImage: `linear-gradient(95.47deg, ${theme.palette.secondary.main} 0.51%, ${theme.palette.primary.main} 99.64%)`,\n    color: theme.palette.light.main,\n    marginTop: theme.spacing(3),\n  },\n}));\n\nfunction BillingDetails() {\n  const classes = useStyles();\n\n  //   Add User Modal methods\n  const [addAddress, setAddAddress] = useState(false);\n\n  const addOpen = () => {\n    setAddAddress(true);\n  };\n\n  const addClose = () => {\n    setAddAddress(false);\n  };\n\n  return (\n    <div className={classes.content}>\n      <BoxContainerWhite>\n        <Typography\n          color={\"primary\"}\n          variant={\"h5\"}\n          className={classes.heading}\n        >\n          BILLING DETAILS\n        </Typography>\n        <div>\n          <div className={classes.dFlex}>\n            <div className={classes.primaryAddressContainer}>\n              <Typography\n                className={classes.subHeading}\n                variant={\"h6\"}\n                gutterBottom\n              >\n                Primary Address\n              </Typography>\n              <Typography className={classes.miniHeading}>Email</Typography>\n              <Typography className={classes.headingContent} color={\"primary\"}>\n                usama1234@xyz.com\n              </Typography>\n\n              <Typography className={classes.miniHeading}>Phone No</Typography>\n              <Typography className={classes.headingContent} color={\"primary\"}>\n                +923120535200\n              </Typography>\n              <Typography className={classes.miniHeading}>Address</Typography>\n              <Typography\n                className={[classes.headingContent, classes.mb0].join(\" \")}\n                color={\"primary\"}\n              >\n                Flat No JJ-12/8 APF Colony PAC Kamra District Attock\n              </Typography>\n              <div className={classes.displayFlex}>\n                <span>\n                  <Typography className={classes.miniHeading}>\n                    Country\n                  </Typography>\n                  <Typography\n                    className={classes.headingContent}\n                    color={\"primary\"}\n                  >\n                    Pakistan\n                  </Typography>\n                </span>\n                <span className={classes.ml2}>\n                  <Typography className={classes.miniHeading}>\n                    Zip Code\n                  </Typography>\n                  <Typography\n                    className={classes.headingContent}\n                    color={\"primary\"}\n                  >\n                    5845\n                  </Typography>\n                </span>\n              </div>\n              <Button\n                variant=\"contained\"\n                disableElevation\n                className={[classes.btnright, classes.btnbg].join(\" \")}\n                onClick={addOpen}\n              >\n                Add New Address\n              </Button>\n            </div>\n            <MaterialTable\n              style={{\n                boxShadow: \"none\",\n                border: \"1px solid \t#E8E8E8\",\n                marginTop: \"50px\",\n              }}\n              title=\" \"\n              columns={[\n                { title: \"Email\", field: \"email\" },\n                { title: \"Phone No\", field: \"phoneNo\" },\n                {\n                  title: \"Address\",\n                  field: \"address\",\n                  cellStyle: {\n                    width: \"40%\",\n                    minWidth: \"250px\",\n                  },\n                },\n                { title: \"Country\", field: \"country\" },\n                {\n                  title: \"Zip Code\",\n                  field: \"zipCode\",\n                },\n              ]}\n              data={[\n                {\n                  email: \"sidra000@gmail.com\",\n                  phoneNo: \"+923120535255\",\n                  address:\n                    \"Flat No JJ-12/8 APF Colony PAC Kamra District Attock\",\n                  country: \"Pakistan\",\n                  zipCode: \"5226\",\n                },\n                {\n                  email: \"arsalan1212@gmail.com\",\n                  phoneNo: \"+9231205058555\",\n                  address:\n                    \"Flat No JJ-18/8 ARF Colony PAC Kamra District Attock\",\n                  country: \"Pakistan\",\n                  zipCode: \"5226\",\n                },\n                {\n                  email: \"usama6934@gmail.com\",\n                  phoneNo: \"+923130735255\",\n                  address:\n                    \"Flat No JJ-18/8 MRF Colony PAC Kamra District Attock\",\n                  country: \"Pakistan\",\n                  zipCode: \"5226\",\n                },\n              ]}\n              actions={[\n                {\n                  icon: \"edit\",\n                  tooltip: \"Edit Address\",\n                  // onClick: handleOpen,\n                  iconProps: {\n                    style: { color: \"#7fbfbf\" },\n                  },\n                },\n                {\n                  icon: \"delete\",\n                  tooltip: \"Delete Address\",\n                  onClick: (event, rowData) =>\n                    alert(\"You want to delete \" + rowData.name),\n                  iconProps: {\n                    style: { color: \"#7fbfbf\" },\n                  },\n                },\n                {\n                  icon: \"add\",\n                  tooltip: \"Make Primary Address\",\n                  iconProps: {\n                    style: { color: \"#7fbfbf\" },\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                exportButton: true,\n                exportFileName: \"Billing Adresses\",\n                headerStyle: {\n                  backgroundColor: \"#7FBFBF\",\n                  color: \"#444\",\n                },\n              }}\n            />\n          </div>\n        </div>\n        <Modal\n          aria-labelledby=\"Add Sub User\"\n          aria-describedby=\"Add Account of a sub user\"\n          className={classes.modal}\n          open={addAddress}\n          onClose={addClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 300,\n          }}\n        >\n          <Fade in={addAddress}>\n            <div className={classes.paper}>\n              <Typography\n                variant={\"h5\"}\n                color={\"primary\"}\n                id=\"transition-modal-title\"\n              >\n                Add New Address\n              </Typography>\n              <div className={classes.modalForm}>\n                <div className={classes.modalForm}>\n                  <TextField\n                    required\n                    fullWidth\n                    variant={\"standard\"}\n                    label={\"Email\"}\n                    className={classes.formItem}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    variant={\"standard\"}\n                    label={\"Phone Number\"}\n                    className={classes.formItem}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    variant={\"standard\"}\n                    label={\"Address\"}\n                    className={classes.formItem}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    variant={\"standard\"}\n                    label={\"Country\"}\n                    className={classes.formItem}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    variant={\"standard\"}\n                    label={\"Zip Code\"}\n                    className={classes.formItem}\n                  />\n                  <Button\n                    className={classes.formItem}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    disableElevation\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    className={[classes.formItem, classes.ml3].join(\" \")}\n                    variant={\"contained\"}\n                    onClick={addClose}\n                    disableElevation\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n      </BoxContainerWhite>\n    </div>\n  );\n}\n\nexport default BillingDetails;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/BlogTitle.js",["364"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    minHeight: \"500px\",\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction BlogTitle() {\n  const classes = useStyles();\n\n  const [keywords, setKeywords] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <PageHead title={\"Blog Title Suggestions\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <TextField\n            label={\"Keywords\"}\n            variant={\"outlined\"}\n            fullWidth\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n          />\n          <TextField\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            multiline\n            rows={12}\n            label={\"Description\"}\n            variant={\"outlined\"}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            fullWidth\n          />\n          <Button\n            disableElevation\n            variant=\"contained\"\n            className={classes.btnMain}\n            endIcon={<FiCheckSquare />}\n          >\n            Generate\n          </Button>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <HistoryIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      History\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              <Card className={classes.outputCard}>\n                <Typography\n                  variant={\"body2\"}\n                  className={classes.cardTime}\n                  gutterBottom\n                >\n                  Just Now\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  gutterBottom\n                  className={classes.cardResult}\n                >\n                  10 common mistakes when you are using your phone\n                </Typography>\n                <div className={classes.btnsContainer}>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <ClipboardIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <FavouriteIcon />\n                    </IconButton>\n                  </div>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <FlagIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\" className={classes.historyText}>\n              No History to show\n            </Typography>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot\n        nextLink=\"/blogOutline\"\n        backLink=\"/blogTitle\"\n        pageNo=\"1.1\"\n        backDisabled={true}\n      />\n    </div>\n  );\n}\nexport default BlogTitle;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AIBlog.js",["365","366","367","368","369","370","371"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    minHeight: \"500px\",\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    // backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n    maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    marginBottom: theme.spacing(3),\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n\n  keywordList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  keywordListItem: {\n    paddingTop: theme.spacing(1),\n    color: theme.palette.dark.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction AIBlog() {\n  const classes = useStyles();\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { REACT_APP_PYTHON_BACKEND: PYTHON_BACKEND } = process.env;\n\n  const [disable, setDisable] = useState(false);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n\n  const [blog, setBlog] = useState();\n  const [blogHistory, setBlogHistory] = useState([]);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  function getBlog(data) {\n    const keywords = data.keywords.split(\",\").map((ele) => ele.trim());\n    const outlines = data.outlines.split(\"\\n\").map((ele) => ele.trim());\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    console.log(data);\n    var config = {\n      method: \"post\",\n      url: `${PYTHON_BACKEND}/app/generateBlog`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: { outlines, keywords },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.parse(response.data));\n        setDisable(false);\n        setBlog(JSON.parse(response.data));\n        setBlogHistory([...blogHistory, JSON.parse(response.data)]);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error calling request\",\n          open: false,\n        });\n      });\n  }\n  return (\n    <div>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n\n      <PageHead title={\"AI Blog\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <form\n            style={{ width: \"100%\" }}\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              getBlog(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Keywords\"}\n              name=\"firstName\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"keywords\", {\n                required: \"Keywords required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9.,? ]*$/,\n                  message: \"Invalid Keywords\",\n                },\n              })}\n              error={Boolean(errors.keywords)}\n              helperText={errors.keywords?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Outlines\"}\n              rows=\"10\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              name=\"lastName\"\n              {...register(\"outlines\", {\n                required: \"Outlines required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9,.? \\n]*$/,\n                  message: \"Invalid Outlines\",\n                },\n              })}\n              error={Boolean(errors.outlines)}\n              helperText={errors.outlines?.message}\n              fullWidth\n            ></TextField>\n\n            <Box className={classes.btnGroup}>\n              <Button\n                variant={\"contained\"}\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={disable}\n                disableElevation\n              >\n                Generate\n                {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n              </Button>\n            </Box>\n          </form>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <HistoryIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      History\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              {blog ? (\n                <Card className={classes.outputCard}>\n                  <Typography\n                    variant={\"body2\"}\n                    className={classes.cardTime}\n                    gutterBottom\n                  >\n                    Just Now\n                  </Typography>\n                  {console.log(typeof blog)}\n                  {blog.map((item) => (\n                    <>\n                      <Typography\n                        variant=\"h6\"\n                        gutterBottom\n                        className={classes.cardResult}\n                      >\n                        {item.outline}\n                      </Typography>\n                      <Typography variant=\"body2\" gutterBottom>\n                        {item.data}\n                      </Typography>\n                    </>\n                  ))}\n                </Card>\n              ) : (\n                <Typography\n                  variant=\"h6\"\n                  gutterBottom\n                  className={classes.cardResult}\n                >\n                  No Data to Show\n                </Typography>\n              )}\n            </div>\n          </TabPanel>\n          <TabPanel\n            value={value}\n            index={1}\n            style={{ maxHeight: \"60vh\", overflowY: \"auto\" }}\n          >\n            {blogHistory?.length ? (\n              blogHistory.map((blog) => (\n                <Card className={classes.outputCard}>\n                  <Typography\n                    variant={\"body2\"}\n                    className={classes.cardTime}\n                    gutterBottom\n                  >\n                    Just Now\n                  </Typography>\n                  {blog.map((item) => (\n                    <>\n                      <Typography\n                        variant=\"h6\"\n                        gutterBottom\n                        className={classes.cardResult}\n                      >\n                        {item.outline}\n                      </Typography>\n                      <Typography variant=\"body2\" gutterBottom>\n                        {item.data}\n                      </Typography>\n                    </>\n                  ))}\n\n                  <div className={classes.btnsContainer}>\n                    <div>\n                      <CopyToClipboard text=\"item.data\">\n                        <IconButton className={classes.cardBtn}>\n                          <ClipboardIcon />\n                        </IconButton>\n                      </CopyToClipboard>\n                    </div>\n                  </div>\n                </Card>\n              ))\n            ) : (\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                className={classes.cardResult}\n              >\n                {console.log(blogHistory)}\n                No Data to Show\n              </Typography>\n            )}\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot nextLink=\"/seoAnalyzer\" backLink=\"/blogKeywords\" pageNo=\"3\" />\n    </div>\n  );\n}\nexport default AIBlog;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js",["372","373"],"import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light,\n  },\n  formContainer: {\n    padding: theme.spacing(5),\n    minWidth: \"350px\",\n    maxWidth: \"400px\",\n    borderRadius: theme.shape.borderRadius,\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3),\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(2),\n  },\n  btn: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2),\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n  },\n  loginLink: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nfunction AdminSignup() {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  function signUp(data) {\n    console.log(data);\n    setSnackData({ ...snackData, open: false });\n    setDisable(!disable);\n\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/adminRouter/signUp`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (res) {\n        if (res.data === \"Admin Successfully Created\") {\n          setSnackData({\n            message: \"Admin Registered Successfuly\",\n            type: \"success\",\n            open: true,\n          });\n          reset();\n          setTimeout(() => {\n            setSnackData({\n              message: \"\",\n              type: \"\",\n              open: false,\n            });\n\n            history.push(\"/adminSignin\");\n          }, 5000);\n\n          setDisable(false);\n        } else {\n          setSnackData({\n            message: \"Admin Username Already Registered\",\n            type: \"error\",\n            open: true,\n          });\n          setValue(\"username\", \"\");\n          setDisable(false);\n        }\n        console.log(res);\n      })\n      .catch(function (error) {\n        setSnackData({\n          message: \"Something went wrong please try again\",\n          type: \"error\",\n          open: true,\n        });\n\n        setDisable(false);\n      });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n\n      <Card className={classes.formContainer}>\n        <Typography\n          variant=\"h6\"\n          color=\"primary\"\n          className={classes.formHeading}\n        >\n          INTELLIGENIE ADMIN\n        </Typography>\n        <form\n          noValidate\n          onSubmit={handleSubmit((data) => {\n            signUp(data);\n          })}\n        >\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Username\"}\n            name=\"username\"\n            className={classes.inputFeild}\n            {...register(\"username\", {\n              required: \"Username Required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                minLength: {\n                  value: 6,\n                  message: \"Username can not be less than 3 characters\",\n                },\n                message: \"Invalid Username\",\n              },\n            })}\n            error={Boolean(errors.username)}\n            helperText={errors.username?.message}\n            fullWidth\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Email\"}\n            name=\"userEmail\"\n            className={classes.inputFeild}\n            {...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value:\n                  /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\",\n              },\n            })}\n            error={Boolean(errors.userEmail)}\n            helperText={errors.userEmail?.message}\n            fullWidth\n          ></TextField>\n\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Password\"}\n            className={classes.inputFeild}\n            name=\"password\"\n            {...register(\"password\", {\n              required: \"Password Required\",\n              minLength: { value: 6, message: \"Invalid Password\" },\n            })}\n            type={\"password\"}\n            fullWidth\n            error={Boolean(errors.password)}\n            helperText={errors.password?.message}\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Confirm Password\"}\n            className={classes.inputFeild}\n            name=\"confirmPassword\"\n            {...register(\"confirmPassword\", {\n              required: \"Confirm Password Required\",\n              validate: (value) =>\n                value === password.current || \"Passwords do not match\",\n            })}\n            type={\"password\"}\n            error={Boolean(errors.confirmPassword)}\n            helperText={errors.confirmPassword?.message}\n            fullWidth\n          ></TextField>\n          <Box className={classes.btnGroup}>\n            <Button\n              variant={\"contained\"}\n              color=\"primary\"\n              size=\"large\"\n              type=\"submit\"\n              disabled={disable}\n              fullWidth\n              disableElevation\n              className={classes.btn}\n            >\n              Sign up\n              {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n            </Button>\n          </Box>\n          <Typography\n            variant={\"body2\"}\n            component={\"span\"}\n            className={classes.loginLink}\n          >\n            Alread Registered?{\" \"}\n            <Link to={\"/adminSignin\"} className={classes.link}>\n              Log In\n            </Link>\n          </Typography>\n        </form>\n      </Card>\n    </div>\n  );\n}\nexport default AdminSignup;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/SEOBlog.js",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport Progress from \"./ButtonLoader\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport { Pie, PieChart } from \"recharts\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    // backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(2),\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n    maxHeight: \"70vh\",\n    overflowY: \"auto\",\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  outlineList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  outlineListItem: {\n    paddingTop: theme.spacing(1),\n\n    color: theme.palette.dark.main,\n  },\n  green: {\n    color: theme.palette.primary.main,\n  },\n  red: {\n    color: theme.palette.danger.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction SEOBlog() {\n  const classes = useStyles();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const [disable, setDisable] = useState(false);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n\n  const [seo, setSeo] = useState();\n  const [blogHistory, setBlogHistory] = useState([]);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const { REACT_APP_PYTHON_BACKEND: PYTHON_BACKEND } = process.env;\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function seoBlog(data) {\n    setDisable(true);\n    const value = {\n      focus_keyword: data.keyword,\n      meta_description: data.meta,\n      content: data.outlines.split(\"\\n\").map((ele) => ele.trim()),\n      title: data.title,\n    };\n    console.log(value);\n    var config = {\n      method: \"post\",\n      url: `${PYTHON_BACKEND}/app/seoBlog`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: value,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSeo(JSON.parse(response.data));\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n  function getcolor(item) {\n    if (item == \"Bad SEO score\") {\n      return \"red\";\n    } else if (item == \"Good SEO score\") {\n      return \"green\";\n    } else {\n      return \"#777\";\n    }\n  }\n  return (\n    <>\n      <PageHead title={\"SEO Blog\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <form\n            style={{ width: \"100%\" }}\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              seoBlog(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Focus Keyword\"}\n              name=\"firstName\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"keyword\", {\n                required: \"Keyword required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9.,? ]*$/,\n                  message: \"Invalid Keyword\",\n                },\n              })}\n              error={Boolean(errors.keyword)}\n              helperText={errors.keyword?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Blog Title\"}\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"title\", {\n                required: \"Title required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9.,? ]*$/,\n                  message: \"Invalid Title\",\n                },\n              })}\n              error={Boolean(errors.title)}\n              helperText={errors.keywords?.title}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Meta Description\"}\n              rows=\"4\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"meta\", {\n                required: \"Meta Description required\",\n              })}\n              error={Boolean(errors.meta)}\n              helperText={errors.meta?.message}\n              fullWidth\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Outlines\"}\n              rows=\"10\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              name=\"lastName\"\n              {...register(\"outlines\", {\n                required: \"Outlines required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9,.? \\n]*$/,\n                  message: \"Invalid Outlines\",\n                },\n              })}\n              error={Boolean(errors.outlines)}\n              helperText={errors.outlines?.message}\n              fullWidth\n            ></TextField>\n\n            <Box className={classes.btnGroup}>\n              <Button\n                variant={\"contained\"}\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={disable}\n                disableElevation\n              >\n                Generate\n                {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n              </Button>\n            </Box>\n          </form>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              {seo?.length ? (\n                <Card className={classes.outputCard}>\n                  <Typography\n                    variant={\"body2\"}\n                    className={classes.cardTime}\n                    gutterBottom\n                  >\n                    Just Now\n                  </Typography>\n                  <ul>\n                    {seo.map((item) => (\n                      <li>\n                        <Typography\n                          style={{ color: getcolor(item.Result) }}\n                          variant={\"body2\"}\n                          gutterBottom\n                        >\n                          {item.text}\n                        </Typography>\n                      </li>\n                    ))}\n                  </ul>\n                </Card>\n              ) : (\n                <Typography variant=\"h6\">No Data To Show</Typography>\n              )}\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\" className={classes.historyText}>\n              No History to show\n            </Typography>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot\n        pageNo=\"5\"\n        backLink=\"/seoAnalyzer\"\n        nextLink=\"/plagiarismChecker\"\n      />\n    </>\n  );\n}\nexport default SEOBlog;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/MainSubscription.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/BlogKeywords.js",["396"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    minHeight: \"500px\",\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n\n  keywordList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  keywordListItem: {\n    paddingTop: theme.spacing(1),\n    color: theme.palette.dark.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction BlogKeywords() {\n  const classes = useStyles();\n\n  const [keywords, setKeywords] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <PageHead title={\"Blog Keywords Suggestions\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <TextField\n            label={\"Title\"}\n            variant={\"outlined\"}\n            fullWidth\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n          />\n          <TextField\n            className={[classes.formItem, classes.textFeild].join(\" \")}\n            multiline\n            rows={12}\n            label={\"Description\"}\n            variant={\"outlined\"}\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            fullWidth\n          />\n          <Button\n            variant=\"contained\"\n            disableElevation\n            className={classes.btnMain}\n            endIcon={<FiCheckSquare />}\n          >\n            Generate\n          </Button>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <HistoryIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      History\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              <Card className={classes.outputCard}>\n                <Typography\n                  variant={\"body2\"}\n                  className={classes.cardTime}\n                  gutterBottom\n                >\n                  Just Now\n                </Typography>\n                <ul className={classes.keywordList}>\n                  <li className={classes.keywordListItem}>BitCoin</li>\n                  <li className={classes.keywordListItem}>AltCoin</li>\n                  <li className={classes.keywordListItem}>BlockChain</li>\n                  <li className={classes.keywordListItem}>CoinBase</li>\n                  <li className={classes.keywordListItem}>Bitcoin Cash</li>\n                  <li className={classes.keywordListItem}>Cold Wallet</li>\n                  <li className={classes.keywordListItem}>Decentralization</li>\n                  <li className={classes.keywordListItem}>Minning</li>\n                </ul>\n                <div className={classes.btnsContainer}>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <ClipboardIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <FavouriteIcon />\n                    </IconButton>\n                  </div>\n                  <div>\n                    <IconButton className={classes.cardBtn}>\n                      <FlagIcon />\n                    </IconButton>\n                    <IconButton className={classes.cardBtn}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\" className={classes.historyText}>\n              No History to show\n            </Typography>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot\n        nextLink=\"/aiBLog\"\n        backLink=\"/blogOutline\"\n        pageNo=\"2\"\n        backDisabled={true}\n      />\n    </div>\n  );\n}\nexport default BlogKeywords;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/MainAccount.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/MainAdmin.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminForgotPassword.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/MainApp.js",["397","398"],"import { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport AppTemplate from \"./AppTemplate\";\nimport BlogOutline from \"./BlogOutline\";\nimport BlogTitle from \"./BlogTitle\";\nimport BlogKeywords from \"./BlogKeywords\";\nimport AIBlog from \"./AIBlog\";\nimport SEOAnalyzer from \"./SEOAnalyzer\";\nimport SEOBlog from \"./SEOBlog\";\nimport PlagiarismChecker from \"./PlagiarismChecker\";\nimport ImageCrawler from \"./ImageCrawler\";\nimport ImageEditor from \"./ImageEditor\";\n\nfunction MainApp() {\n  return (\n    <AppTemplate>\n      <Route path=\"/app/blogTitle\" exact component={BlogTitle} />\n      <Route path={\"/app/blogOutline\"} exact component={BlogOutline} />\n      <Route path=\"/app/blogKeywords\" exact component={BlogKeywords} />\n      <Route path=\"/app/aiBlog\" exact component={AIBlog} />\n      <Route path=\"/app/seoAnalyzer\" exact component={SEOAnalyzer} />\n      <Route path=\"/app/seoBlog\" exact component={SEOBlog} />\n      <Route\n        path=\"/app/plagiarismChecker\"\n        exact\n        component={PlagiarismChecker}\n      />\n      <Route path=\"/app/imageCrawler\" exact component={ImageCrawler} />\n      <Route path=\"/app/imageEditor\" exact component={ImageEditor} />\n    </AppTemplate>\n  );\n}\n\nexport default MainApp;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignin.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/PlagiarismChecker.js",["399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Pie, PieChart, Cell } from \"recharts\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    minHeight: \"500px\",\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    // backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n    maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    marginBottom: theme.spacing(3),\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n\n  keywordList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  keywordListItem: {\n    paddingTop: theme.spacing(1),\n    color: theme.palette.dark.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction AIBlog() {\n  const classes = useStyles();\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const [percentage, setPercentage] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { REACT_APP_PYTHON_BACKEND: PYTHON_BACKEND } = process.env;\n\n  const [disable, setDisable] = useState(false);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n\n  const [output, setOutput] = useState(\"\");\n  const [blog, setBlog] = useState();\n  const [blogHistory, setBlogHistory] = useState([]);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const COLORS = [\"#D22B2B\", \"#028181\"];\n  function getBlog(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    console.log(data);\n    const config = {\n      method: \"POST\",\n      url: \"https://plagiarism-checker-and-auto-citation-generator-multi-lingual.p.rapidapi.com/plagiarism\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"X-RapidAPI-Host\":\n          \"plagiarism-checker-and-auto-citation-generator-multi-lingual.p.rapidapi.com\",\n        \"X-RapidAPI-Key\": \"db60fd54bamshee6955361247a3bp1c1ce5jsnadfe642a8566\",\n      },\n      data: {\n        text: data.outlines,\n        language: \"en\",\n        includeCitations: false,\n        scrapeSources: false,\n      },\n    };\n    var content = data.outlines;\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data);\n        setPercentage(response.data.percentPlagiarism);\n        response.data.sources.forEach((parent) => {\n          parent.matches.forEach((match) => {\n            if (match.matchText.charAt(match.matchText.length - 1 == \".\")) {\n              content = content.replace(\n                \" \" + match.matchText.substring(0, match.matchText.length - 3),\n                `${\" \"}<span style=\"color:red\">${match.matchText.substring(\n                  0,\n                  match.matchText.length - 3\n                )}</span>${\" \"}`\n              );\n            } else {\n              content = content.replace(\n                \" \" + match.matchText,\n                `${\" \"}<span style=\"color:red\">${match.matchText}</span>${\" \"}`\n              );\n            }\n          });\n        });\n        setOutput(content);\n        setDisable(false);\n        // setBlog(JSON.parse(response.data));\n        // setBlogHistory([...blogHistory, JSON.parse(response.data)]);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error calling request\",\n          open: false,\n        });\n      });\n  }\n  return (\n    <div>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n\n      <PageHead title={\"Plagiarism Checker\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <form\n            style={{ width: \"100%\" }}\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              getBlog(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Title\"}\n              name=\"firstName\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"keywords\", {\n                required: \"Title required\",\n              })}\n              error={Boolean(errors.keywords)}\n              helperText={errors.keywords?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Content\"}\n              rows=\"15\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              name=\"lastName\"\n              {...register(\"outlines\", {\n                required: \"Content required\",\n              })}\n              error={Boolean(errors.outlines)}\n              helperText={errors.outlines?.message}\n              fullWidth\n            ></TextField>\n\n            <Box className={classes.btnGroup}>\n              <Button\n                variant={\"contained\"}\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={disable}\n                disableElevation\n              >\n                Generate\n                {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n              </Button>\n            </Box>\n          </form>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n              {/* <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <HistoryIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      History\n                    </Typography>\n                  </div>\n                }\n              /> */}\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            <div className={classes.cardsContainer}>\n              {output?.length ? (\n                <>\n                  <Card className={classes.outputCard}>\n                    <Typography\n                      variant={\"body2\"}\n                      className={classes.cardTime}\n                      gutterBottom\n                    >\n                      Just Now\n                    </Typography>\n\n                    <Typography\n                      variant=\"body1\"\n                      gutterBottom\n                      dangerouslySetInnerHTML={{ __html: output }}\n                    ></Typography>\n                  </Card>\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <PieChart width={100} height={100}>\n                      <Pie\n                        data={[\n                          {\n                            name: \"Plagarized\",\n                            value: percentage,\n                            color: \"red\",\n                          },\n                          {\n                            name: \"Not Plagarized\",\n                            value: 100 - percentage,\n                            color: \"#008080\",\n                          },\n                        ]}\n                        nameKey={\"name\"}\n                        innerRadius={20}\n                      >\n                        {new Array(2).fill(null).map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index]} />\n                        ))}\n                      </Pie>\n                    </PieChart>\n                    <div>\n                      <Typography style={{ color: COLORS[0] }}>\n                        {percentage}% Plagarized\n                      </Typography>\n                      <Typography style={{ color: COLORS[1] }}>\n                        {100 - percentage}% Unique\n                      </Typography>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Typography\n                  variant=\"h6\"\n                  gutterBottom\n                  className={classes.cardResult}\n                >\n                  No Data to Show\n                </Typography>\n              )}\n            </div>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot nextLink=\"/seoAnalyzer\" backLink=\"/blogKeywords\" pageNo=\"3\" />\n    </div>\n  );\n}\nexport default AIBlog;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/Invoices.js",["416"],"import PaymentSubscriptionTemplate from \"./PaymentSubscriptionTemplate\";\nimport { Typography, Button, Menu, MenuItem, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport PDFimage from \"./img/PDFicon.png\";\nimport {\n  FiMoreHorizontal as MenuIcon,\n  FiFilePlus as FileIcon,\n} from \"react-icons/fi\";\nimport { useState } from \"react\";\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(4),\n    },\n  },\n  invoicesContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  invoice: {\n    minHeight: \"250px\",\n    minWidth: \"250px\",\n    flexGrow: 1,\n    border: `1px solid #A2F0F0`,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: \"none\",\n  },\n  pdfImage: {\n    height: \"70%\",\n    borderRadius: theme.shape.borderRadius,\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light,\n    marginBottom: theme.spacing(2),\n  },\n  invoiceMonth: {\n    fontWeight: \"bold\",\n    marginLeft: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  dFLex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  MenuIcon: {\n    fontSize: \"16px\",\n    color: theme.palette.primary.main,\n  },\n  ml2: {\n    marginLeft: theme.spacing(1.5),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction Invoices() {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <div className={classes.content}>\n      <BoxContainerWhite>\n        <div className={classes.invoicesContainer}>\n          <Paper className={classes.invoice}>\n            <div className={classes.pdfImage}>\n              <img src={PDFimage} alt={\"PDF Invoice\"} />\n            </div>\n            <div className={classes.dFLex}>\n              <div className={[classes.dFLex, classes.ml2].join(\" \")}>\n                <FileIcon className={classes.MenuIcon} />\n                <Typography variant={\"body2\"} className={classes.invoiceMonth}>\n                  September Invoice\n                </Typography>\n              </div>\n              <Button size={\"small\"} onClick={handleClick}>\n                <MenuIcon className={classes.MenuIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n              </Menu>\n            </div>\n            <Typography\n              variant={\"body2\"}\n              color={\"primary\"}\n              className={classes.ml2}\n            >\n              Created on 1/September/2021\n            </Typography>\n          </Paper>\n          <Paper className={classes.invoice}>\n            <div className={classes.pdfImage}>\n              <img src={PDFimage} alt={\"PDF Invoice\"} />\n            </div>\n            <div className={classes.dFLex}>\n              <div className={[classes.dFLex, classes.ml2].join(\" \")}>\n                <FileIcon className={classes.MenuIcon} />\n                <Typography variant={\"body2\"} className={classes.invoiceMonth}>\n                  September Invoice\n                </Typography>\n              </div>\n              <Button size={\"small\"} onClick={handleClick}>\n                <MenuIcon className={classes.MenuIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n              </Menu>\n            </div>\n            <Typography\n              variant={\"body2\"}\n              color={\"primary\"}\n              className={classes.ml2}\n            >\n              Created on 1/September/2021\n            </Typography>\n          </Paper>\n          <Paper className={classes.invoice}>\n            <div className={classes.pdfImage}>\n              <img src={PDFimage} alt={\"PDF Invoice\"} />\n            </div>\n            <div className={classes.dFLex}>\n              <div className={[classes.dFLex, classes.ml2].join(\" \")}>\n                <FileIcon className={classes.MenuIcon} />\n                <Typography variant={\"body2\"} className={classes.invoiceMonth}>\n                  September Invoice\n                </Typography>\n              </div>\n              <Button size={\"small\"} onClick={handleClick}>\n                <MenuIcon className={classes.MenuIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n              </Menu>\n            </div>\n            <Typography\n              variant={\"body2\"}\n              color={\"primary\"}\n              className={classes.ml2}\n            >\n              Created on 1/September/2021\n            </Typography>\n          </Paper>\n          <Paper className={classes.invoice}>\n            <div className={classes.pdfImage}>\n              <img src={PDFimage} alt={\"PDF Invoice\"} />\n            </div>\n            <div className={classes.dFLex}>\n              <div className={[classes.dFLex, classes.ml2].join(\" \")}>\n                <FileIcon className={classes.MenuIcon} />\n                <Typography variant={\"body2\"} className={classes.invoiceMonth}>\n                  September Invoice\n                </Typography>\n              </div>\n              <Button size={\"small\"} onClick={handleClick}>\n                <MenuIcon className={classes.MenuIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n              </Menu>\n            </div>\n            <Typography\n              variant={\"body2\"}\n              color={\"primary\"}\n              className={classes.ml2}\n            >\n              Created on 1/September/2021\n            </Typography>\n          </Paper>\n          <Paper className={classes.invoice}>\n            <div className={classes.pdfImage}>\n              <img src={PDFimage} alt={\"PDF Invoice\"} />\n            </div>\n            <div className={classes.dFLex}>\n              <div className={[classes.dFLex, classes.ml2].join(\" \")}>\n                <FileIcon className={classes.MenuIcon} />\n                <Typography variant={\"body2\"} className={classes.invoiceMonth}>\n                  September Invoice\n                </Typography>\n              </div>\n              <Button size={\"small\"} onClick={handleClick}>\n                <MenuIcon className={classes.MenuIcon} />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Download</MenuItem>\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n              </Menu>\n            </div>\n            <Typography\n              variant={\"body2\"}\n              color={\"primary\"}\n              className={classes.ml2}\n            >\n              Created on 1/September/2021\n            </Typography>\n          </Paper>\n        </div>\n      </BoxContainerWhite>\n    </div>\n  );\n}\n\nexport default Invoices;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/SEOAnalyzer.js",["417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  IconButton,\n} from \"@material-ui/core\";\nimport Progress from \"./ButtonLoader\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport { Pie, PieChart } from \"recharts\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  inputForm: {\n    width: \"50%\",\n    borderRight: `1px solid ${theme.palette.grey.main}`,\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(9),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    // backgroundColor: \"#fff\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    paddingRight: theme.spacing(0.7),\n    paddingLeft: theme.spacing(0.7),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(2),\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n    maxHeight: \"70vh\",\n    overflowY: \"auto\",\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  outlineList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  outlineListItem: {\n    paddingTop: theme.spacing(1),\n\n    color: theme.palette.dark.main,\n  },\n  green: {\n    color: theme.palette.primary.main,\n  },\n  red: {\n    color: theme.palette.danger.main,\n  },\n}));\n\n// Nav Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction SEOBlog() {\n  const classes = useStyles();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const [disable, setDisable] = useState(false);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n\n  const [seo, setSeo] = useState({});\n  const [blogHistory, setBlogHistory] = useState([]);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const { REACT_APP_PYTHON_BACKEND: PYTHON_BACKEND } = process.env;\n\n  //   Tabs Methods\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const chartsOptions = {\n    chart: {\n      type: \"donut\",\n    },\n    labels: [\"Bad SEO\", \"Good SEO\", \"Normal SEO\"],\n    colors: [\"#E53834\", \"#629A8D\", \"#C6CDC0\"],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  };\n\n  const [series, setSeries] = useState([Object.values(seo)]);\n\n  function seoBlog(data) {\n    setDisable(true);\n    const value = {\n      focus_keyword: data.keyword,\n      meta_description: data.meta,\n      content: data.outlines.split(\"\\n\").map((ele) => ele.trim()),\n      title: data.title,\n    };\n    console.log(value);\n    var config = {\n      method: \"post\",\n      url: `${PYTHON_BACKEND}/app/seoBlog`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: value,\n    };\n\n    let good = 0;\n    let bad = 0;\n    let normal = 0;\n\n    axios(config)\n      .then(function (response) {\n        setSeo(JSON.parse(response.data));\n        JSON.parse(response.data).forEach((item) => {\n          if (item.Result == \"Bad SEO score\") {\n            bad += 1;\n          } else if (item.Result == \"Good SEO score\") {\n            good += 1;\n          } else {\n            normal += 1;\n          }\n        });\n        setDisable(false);\n        setSeries([bad, good, normal]);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n  function getcolor(item) {\n    if (item == \"Bad SEO score\") {\n      return \"red\";\n    } else if (item == \"Good SEO score\") {\n      return \"green\";\n    } else {\n      return \"#777\";\n    }\n  }\n  return (\n    <>\n      <PageHead title={\"SEO Analyzer\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <form\n            style={{ width: \"100%\" }}\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              seoBlog(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Focus Keyword\"}\n              name=\"firstName\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"keyword\", {\n                required: \"Keyword required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9.,? ]*$/,\n                  message: \"Invalid Keyword\",\n                },\n              })}\n              error={Boolean(errors.keyword)}\n              helperText={errors.keyword?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              fullWidth\n              label={\"Blog Title\"}\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"title\", {\n                required: \"Title required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9.,? ]*$/,\n                  message: \"Invalid Title\",\n                },\n              })}\n              error={Boolean(errors.title)}\n              helperText={errors.keywords?.title}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Meta Description\"}\n              rows=\"4\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              {...register(\"meta\", {\n                required: \"Meta Description required\",\n              })}\n              error={Boolean(errors.meta)}\n              helperText={errors.meta?.message}\n              fullWidth\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              multiline\n              color={\"primary\"}\n              label={\"Content\"}\n              rows=\"10\"\n              className={[classes.textFeild, classes.formItem].join(\" \")}\n              name=\"lastName\"\n              {...register(\"outlines\", {\n                required: \"Outlines required\",\n                pattern: {\n                  value: /^[a-zA-Z0-9,.? \\n]*$/,\n                  message: \"Invalid Outlines\",\n                },\n              })}\n              error={Boolean(errors.outlines)}\n              helperText={errors.outlines?.message}\n              fullWidth\n            ></TextField>\n\n            <Box className={classes.btnGroup}>\n              <Button\n                variant={\"contained\"}\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={disable}\n                disableElevation\n              >\n                Generate\n                {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n              </Button>\n            </Box>\n          </form>\n        </div>\n        <div className={classes.outputContainer}>\n          <Paper square className={classes.tabCard}>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab\n                label={\n                  <div className={classes.TabIconContent}>\n                    <OutputIcon className={classes.tabIcon} />\n                    <Typography variant=\"body2\" className={classes.ml1}>\n                      Output\n                    </Typography>\n                  </div>\n                }\n              />\n            </Tabs>\n          </Paper>\n          <TabPanel value={value} index={0}>\n            {console.log(series)}\n            <div className={classes.cardsContainer}>\n              {seo?.length ? (\n                <div id=\"chart\">\n                  <ReactApexChart\n                    options={chartsOptions}\n                    series={series}\n                    type=\"donut\"\n                  />\n                </div>\n              ) : (\n                <Typography variant=\"h6\">No Data To Show</Typography>\n              )}\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography variant=\"h6\" className={classes.historyText}>\n              No History to show\n            </Typography>\n          </TabPanel>\n        </div>\n      </div>\n      <PageFoot\n        pageNo=\"5\"\n        backLink=\"/seoAnalyzer\"\n        nextLink=\"/plagiarismChecker\"\n      />\n    </>\n  );\n}\nexport default SEOBlog;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/MainFeedbackHelpCenter.js",["443","444","445","446"],"import { Route } from \"react-router-dom\";\nimport PaymentDetails from \"./PaymentDetails\";\nimport SubscriptionPackage from \"./SubscriptionPackage\";\nimport BillingDetails from \"./BillingDetails\";\nimport Invoices from \"./Invoices\";\nimport FeedbackHelpTemplate from \"./FeedbackHelpTemplate\";\nimport RatingFeedback from \"./RatingFeedback\";\nimport SystemGuide from \"./SystemGuide\";\nimport FAQsShareApp from \"./FAQsShareApp\";\nimport Complaint from \"./Complaint\";\nimport Query from \"./Query\";\n\nfunction MainFeedbackHelpCenter() {\n  return (\n    <FeedbackHelpTemplate>\n      <Route path={\"/feedbackHelpCenter\"} exact component={RatingFeedback} />\n      <Route\n        path={\"/feedbackHelpCenter/systemGuide\"}\n        exact\n        component={SystemGuide}\n      />\n      <Route\n        path={\"/feedbackHelpCenter/FAQsShareApp\"}\n        exact\n        component={FAQsShareApp}\n      />\n      <Route\n        path={\"/feedbackHelpCenter/complaint\"}\n        exact\n        component={Complaint}\n      />\n      <Route path={\"/feedbackHelpCenter/query\"} exact component={Query} />\n    </FeedbackHelpTemplate>\n  );\n}\nexport default MainFeedbackHelpCenter;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ScrollToTop.js",["447"],"import React, { useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);\n","/Users/devusama/Work/FYP_FrontEnd/src/components/SignInUpTemplate.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/PaymentSubscriptionTemplate.js",["448"],"import React from \"react\";\nimport Logo from \"./img/Logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { logout } from \"./Helper/ClearLocalStorage\";\nimport {\n  FiDollarSign as SubscriptionIcon,\n  FiCreditCard as PaymentIcon,\n  FiFileText as BillingIcon,\n  FiClock as InvoicesIcon,\n} from \"react-icons/fi\";\nimport { MdLogout as SignoutIcon } from \"react-icons/md\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#f2f8f8\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItem: {\n    padding: \"10px 48px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  listItemActive: {\n    padding: \"10px 48px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.primary.main} 100%)`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  appBar: {\n    backgroundImage: \"linear-gradient(90deg, #0067B1 0%, #008181 100%)\",\n    zIndex: \"100\",\n    padding: \"0px !important\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0),\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    zIndex: 0,\n    width: drawerWidth,\n    backgroundColor: \"#ffffff\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper1: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"85vh\",\n    width: `100%`,\n    margin: \"20px\",\n    marginRight: \"0px\",\n    paddingLeft: drawerWidth - 20 + \"px\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingLeft: 0,\n      margin: 0,\n    },\n  },\n  navItemIcon: {\n    marginRight: \"10px\",\n    color: theme.palette.dark.main,\n  },\n  navItemIconActive: {\n    marginRight: \"10px\",\n    color: theme.palette.light.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(0.7),\n  },\n  navScreen: {\n    marginTop: \"65px\",\n    width: \"98%\",\n  },\n  navBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  },\n  SignoutBtn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    margin: \"0px 10px\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundImage: ` linear-gradient(93.12deg, ${theme.palette.secondary.main} 1.28%, ${theme.palette.primary.main} 99.48%)`,\n  },\n  signoutIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.light.main,\n    fontWeight: \"bolder\",\n  },\n  width100: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    height: \"25px\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(0.3),\n\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.8) translateY(0px)\",\n    },\n  },\n\n  avatarBtn: {\n    paddingLeft: \"0\",\n    paddingRight: \"0\",\n  },\n}));\n\nfunction PaymentSubscriptionTemplate(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const location = useLocation();\n\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to=\"/subscription\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/subscription\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <SubscriptionIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/subscription\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Subscription Package\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/subscription/paymentDetails\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/subscription/paymentDetails\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <PaymentIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/subscription/paymentDetails\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Payment Details\"} />\n          </ListItem>\n        </Link>\n\n        <Link to=\"/subscription/billing\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/subscription/billing\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <BillingIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/subscription/billing\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Billing Details\"} />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/subscription/invoices\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/subscription/invoices\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <InvoicesIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/subscription/invoices\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Invoices\"} />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  const history = useHistory();\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar className={classes.appBar}>\n        <div className={classes.navBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to={\"/app\"}>\n            <img src={Logo} alt=\"Logo\" className={classes.Logo} />\n          </Link>\n          <div className={classes.settings}>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              className={classes.avatarBtn}\n              color=\"inherit\"\n            >\n              <Avatar\n                src={JSON.parse(localStorage.getItem(\"user\")).profilePicture}\n              />\n            </IconButton>\n            <Menu\n              className={classes.menu}\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <Link to={\"/feedbackHelpCenter\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Feedback and Help Center\n                </MenuItem>\n              </Link>\n              <Link to={\"/subscription\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Payment and Subscription\n                </MenuItem>\n              </Link>\n              <Link to={\"/account\"} className={classes.link}>\n                <MenuItem onClick={handleClose} className={classes.width100}>\n                  Account Settings\n                </MenuItem>\n              </Link>\n              <div className={classes.link}>\n                <MenuItem\n                  className={[classes.width100, classes.SignoutBtn].join(\" \")}\n                  onClick={() => {\n                    handleClose();\n                    logout(history);\n                  }}\n                >\n                  Sign out\n                  <SignoutIcon className={classes.signoutIcon} />\n                </MenuItem>\n              </div>\n            </Menu>\n          </div>\n        </div>\n      </AppBar>\n      <div className={classes.navScreen}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          className={classes.drawerPaper1}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <nav>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{props.children}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentSubscriptionTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/BoxContainerWhite.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/Counteries.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/PieChart.js",["449"],"import React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >\n        {\" \"}\n        {`(${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nfunction Piechart(props) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const onPieEnter = useCallback(\n    (_, index) => {\n      setActiveIndex(index);\n    },\n    [setActiveIndex]\n  );\n\n  return (\n    <ResponsiveContainer height={380}>\n      <PieChart style={{ padding: \"none\" }}>\n        <Pie\n          activeIndex={activeIndex}\n          activeShape={renderActiveShape}\n          data={props.data}\n          cx={200}\n          cy={200}\n          innerRadius={70}\n          outerRadius={120}\n          dataKey=\"value\"\n          animationBegin={0}\n          animationDuration={1000}\n          onMouseEnter={onPieEnter}\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default Piechart;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/PageHead.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/PageFoot.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/ProfileTemplate.js",["450"],"import React from \"react\";\nimport Logo from \"./img/Logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { logout } from \"./Helper/ClearLocalStorage\";\nimport {\n  FiUserCheck as UpdateProfileIcon,\n  FiTrash as DeleteProfileIcon,\n  FiUserPlus as AddSubUserIcon,\n  FiClock as BlogHistoryIcon,\n  FiFolder as OthersIcon,\n} from \"react-icons/fi\";\nimport { MdLogout as SignoutIcon } from \"react-icons/md\";\nimport DotColored from \"./DotColored\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#f2f8f8\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItem: {\n    padding: \"10px 48px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  listItemActive: {\n    padding: \"10px 48px\",\n    color: theme.palette.light.main,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.primary.main} 100%)`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  appBar: {\n    backgroundImage: \"linear-gradient(90deg, #0067B1 0%, #008181 100%)\",\n    zIndex: \"100\",\n    padding: \"0px !important\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(2),\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    zIndex: 0,\n    width: drawerWidth,\n    backgroundColor: \"#ffffff\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper1: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"85vh\",\n    margin: \"20px\",\n    marginRight: \"0px\",\n    paddingLeft: drawerWidth - 20 + \"px\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingLeft: 0,\n      margin: 0,\n    },\n  },\n  navItemIcon: {\n    marginRight: \"10px\",\n    color: theme.palette.dark.main,\n  },\n  navItemIconActive: {\n    marginRight: \"10px\",\n    color: theme.palette.light.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(0.7),\n  },\n  navScreen: {\n    marginTop: \"65px\",\n    width: \"100%\",\n  },\n  toolBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  },\n  SignoutBtn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    margin: \"0px 10px\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundImage: ` linear-gradient(93.12deg, ${theme.palette.secondary.main} 1.28%, ${theme.palette.primary.main} 99.48%)`,\n  },\n  signoutIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.light.main,\n    fontWeight: \"bolder\",\n  },\n\n  width100: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    height: \"25px\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(0.3),\n\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.8) translateY(0px)\",\n    },\n  },\n  avatarBtn: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n}));\n\nfunction ProfileTemplate(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const location = useLocation();\n\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to=\"/account\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/account\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <UpdateProfileIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/account\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Update Profile\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/account/delete\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/account/delete\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <DeleteProfileIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/account/delete\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Delete Profile\"} />\n          </ListItem>\n        </Link>\n\n        <Link to=\"/account/subusers\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/account/subusers\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <AddSubUserIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/account/subusers\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Manage Sub Users\"} />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/account/blogHistory\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/account/blogHistory\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <BlogHistoryIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/account/blogHistory\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Blog History\"} />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <ListItem className={classes.listItem}>\n          <ListItemIcon>\n            <OthersIcon\n              className={classes.navItemIcon}\n              style={{ fontSize: 20 }}\n            />\n          </ListItemIcon>\n          <ListItemText primary={\"Others\"} />\n        </ListItem>\n        <ListItem button className={classes.listItem}>\n          <ListItemIcon style={{ height: \"15px\" }}>\n            <DotColored color=\"#581B98\" size={10} />\n          </ListItemIcon>\n          <ListItemText primary={\"Favourites\"} />\n        </ListItem>\n        <ListItem button className={classes.listItem}>\n          <ListItemIcon style={{ height: \"15px\" }}>\n            <DotColored color=\"#9C1DE7\" size={10} />\n          </ListItemIcon>\n          <ListItemText primary={\"Flagged\"} />\n        </ListItem>\n        <ListItem button className={classes.listItem}>\n          <ListItemIcon style={{ height: \"15px\" }}>\n            <DotColored color=\"#F3558E\" size={10} />\n          </ListItemIcon>\n          <ListItemText primary={\"Trash\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  const history = useHistory();\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar className={classes.appBar}>\n        <div className={classes.toolBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to={\"/app\"}>\n            <img src={Logo} alt=\"Logo\" className={classes.Logo} />\n          </Link>\n          <div className={classes.settings}>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              className={classes.avatarBtn}\n              color=\"inherit\"\n            >\n              <Avatar\n                src={JSON.parse(localStorage.getItem(\"user\")).profilePicture}\n              />\n            </IconButton>\n            <Menu\n              className={classes.menu}\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <Link to={\"/feedbackHelpCenter\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Feedback and Help Center\n                </MenuItem>\n              </Link>\n              <Link to={\"/subscription\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Payment and Subscription\n                </MenuItem>\n              </Link>\n              <Link to={\"/account\"} className={classes.link}>\n                <MenuItem onClick={handleClose} className={classes.width100}>\n                  Account Settings\n                </MenuItem>\n              </Link>\n              <div className={classes.link}>\n                <MenuItem\n                  className={[classes.width100, classes.SignoutBtn].join(\" \")}\n                  onClick={() => {\n                    handleClose();\n                    logout(history);\n                  }}\n                >\n                  Sign out\n                  <SignoutIcon className={classes.signoutIcon} />\n                </MenuItem>\n              </div>\n            </Menu>\n          </div>\n        </div>\n      </AppBar>\n      <div className={classes.navScreen}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          className={classes.drawerPaper1}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <nav>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{props.children}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AppTemplate.js",["451"],"import React from \"react\";\nimport Logo from \"./img/Logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  FiHome as DashboardIcon,\n  FiHelpCircle as BlogHelpIcon,\n  FiAirplay as AiBlogIcon,\n  FiCpu as AnalyzerIcon,\n  FiActivity as SEOBlogIcon,\n  FiAlertOctagon as PlagiarismIcon,\n  FiImage as ImageCrawlerIcon,\n  FiCode as HTMLCodeIcon,\n  FiKey as KeywordsIcon,\n} from \"react-icons/fi\";\nimport { MdLogout as SignoutIcon } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logout } from \"./Helper/ClearLocalStorage\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    paddingRight: 0,\n    backgroundColor: \"#f2f8f8\",\n    width: \"100%\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItem: {\n    padding: \"10px 48px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  listItemActive: {\n    padding: \"10px 48px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.primary.main} 100%)`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  appBar: {\n    backgroundImage: \"linear-gradient(90deg, #0067B1 0%, #008181 100%)\",\n    zIndex: \"100\",\n    padding: \"0px !important\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0),\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    zIndex: 0,\n    width: drawerWidth,\n    backgroundColor: \"#ffffff\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper1: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    paddingLeft: drawerWidth + \"px\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingLeft: 0,\n      margin: 0,\n    },\n  },\n  navItemIcon: {\n    marginRight: \"10px\",\n    color: theme.palette.dark.main,\n  },\n  navItemIconActive: {\n    marginRight: \"10px\",\n    color: theme.palette.light.main,\n  },\n  listItemTextActive: {\n    color: theme.palette.light.main,\n  },\n  listItemText: {\n    color: theme.palette.dark.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(0.7),\n  },\n  navScreen: {\n    marginTop: \"65px\",\n    width: \"100%\",\n  },\n  navBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  },\n  SignoutBtn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    margin: \"0px 10px\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundImage: ` linear-gradient(93.12deg, ${theme.palette.secondary.main} 1.28%, ${theme.palette.primary.main} 99.48%)`,\n  },\n  signoutIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.light.main,\n    fontWeight: \"bolder\",\n  },\n  width100: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    height: \"25px\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(0.3),\n\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.8) translateY(0px)\",\n    },\n  },\n  avatarBtn: {\n    paddingLeft: \"0\",\n    paddingRight: \"0\",\n  },\n  nested: {\n    marginLeft: theme.spacing(4),\n  },\n}));\n\nfunction AppTemplate(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const [openDropdown, setOpenDropdown] = React.useState(false);\n\n  const handleClick = () => {\n    setOpenDropdown(!openDropdown);\n  };\n\n  const location = useLocation();\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to=\"/app\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              \"/app\" === location.pathname\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <DashboardIcon\n              style={{ fontSize: 20 }}\n              className={\n                \"/app\" === location.pathname\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"Dashboard\"}\n              className={\n                \"/app\" === location.pathname\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n\n        <ListItem\n          button\n          className={\n            \"/app/blogTitle\" === location.pathname ||\n            \"/app/blogOutline\" === location.pathname\n              ? classes.listItemActive\n              : classes.listItem\n          }\n          onClick={() => {\n            handleClick();\n          }}\n        >\n          <BlogHelpIcon\n            style={{ fontSize: 20 }}\n            className={\n              \"/app/blogTitle\" === location.pathname ||\n              \"/app/blogOutline\" === location.pathname\n                ? classes.navItemIconActive\n                : classes.navItemIcon\n            }\n          />\n          <ListItemText\n            primary={\"1-Blog Help\"}\n            className={\n              \"/app/blogTitle\" === location.pathname ||\n              \"/app/blogOutline\" === location.pathname\n                ? classes.listItemTextActive\n                : classes.listItemText\n            }\n          />\n          {openDropdown ? (\n            <ExpandLess\n              className={\n                \"/app/blogTitle\" === location.pathname ||\n                \"/app/blogOutline\" === location.pathname\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n          ) : (\n            <ExpandMore\n              className={\n                \"/app/blogTitle\" === location.pathname ||\n                \"/app/blogOutline\" === location.pathname\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n          )}\n        </ListItem>\n        <Collapse in={openDropdown} timeout=\"auto\" unmountOnExit>\n          <Link to=\"/app/blogTitle\" className={classes.link}>\n            <ListItem\n              selected={\"/app/blogTitle\" === location.pathname}\n              button\n              className={classes.listItem}\n              onClick={() => {\n                handleClick();\n                handleDrawerToggle();\n              }}\n            >\n              <ListItemText primary={\"Blog Title\"} className={classes.nested} />\n            </ListItem>\n          </Link>\n          <Link to=\"/app/blogOutline\" className={classes.link}>\n            <ListItem\n              selected={\"/app/blogOutline\" === location.pathname}\n              button\n              className={classes.listItem}\n              onClick={() => {\n                handleClick();\n                handleDrawerToggle();\n              }}\n            >\n              <ListItemText\n                primary={\"Blog Outline\"}\n                className={classes.nested}\n              />\n            </ListItem>\n          </Link>\n        </Collapse>\n        <Link to=\"/app/blogKeywords\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/blogKeywords\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <KeywordsIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/blogKeywords\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"2-Blog Keywords\"}\n              className={\n                location.pathname === \"/app/blogKeywords\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n\n        <Link to=\"/app/aiBlog\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/aiBlog\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <AiBlogIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/aiBlog\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"3-AI Blog\"}\n              className={\n                location.pathname === \"/app/aiBlog\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/app/seoAnalyzer\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/seoAnalyzer\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <AnalyzerIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/seoAnalyzer\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"4-Analyzer\"}\n              className={\n                location.pathname === \"/app/seoAnalyzer\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/app/seoBlog\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/seoBlog\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <SEOBlogIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/seoBlog\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"5-SEO Blog\"}\n              className={\n                location.pathname === \"/app/seoBlog\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/app/plagiarismChecker\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/plagiarismChecker\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <PlagiarismIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/plagiarismChecker\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"6-Plagiarism\"}\n              className={\n                location.pathname === \"/app/plagiarismChecker\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/app/imageCrawler\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/app/imageCrawler\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <ImageCrawlerIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/imageCrawler\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"7-Image Crawler\"}\n              className={\n                location.pathname === \"/app/imageCrawler\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/app/invoices\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            className={\n              location.pathname === \"/app/invoices\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <HTMLCodeIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/app/invoices\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText\n              primary={\"8-HTML Code\"}\n              className={\n                location.pathname === \"/app/invoices\"\n                  ? classes.listItemTextActive\n                  : classes.listItemText\n              }\n            />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  const history = useHistory();\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar className={classes.appBar}>\n        <div className={classes.navBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to={\"/app\"}>\n            <img src={Logo} alt=\"Logo\" className={classes.Logo} />\n          </Link>\n          <div className={classes.settings}>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n              className={classes.avatarBtn}\n            >\n              <Avatar\n                src={JSON.parse(localStorage.getItem(\"user\")).profilePicture}\n              />\n            </IconButton>\n            <Menu\n              className={classes.menu}\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <Link to={\"/feedbackHelpCenter\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Feedback and Help Center\n                </MenuItem>\n              </Link>\n              <Link to={\"/subscription\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Payment and Subscription\n                </MenuItem>\n              </Link>\n              <Link to={\"/account\"} className={classes.link}>\n                <MenuItem onClick={handleClose} className={classes.width100}>\n                  Account Settings\n                </MenuItem>\n              </Link>\n              <div className={classes.link}>\n                <MenuItem\n                  className={[classes.width100, classes.SignoutBtn].join(\" \")}\n                  onClick={() => {\n                    handleClose();\n                    logout(history);\n                  }}\n                >\n                  Sign out\n                  <SignoutIcon className={classes.signoutIcon} />\n                </MenuItem>\n              </div>\n            </Menu>\n          </div>\n        </div>\n      </AppBar>\n      <div className={classes.navScreen}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          className={classes.drawerPaper1}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <nav>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{props.children}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default AppTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminAccount.js",["452","453","454","455","456","457"],"import {\n  Avatar,\n  Button,\n  TextField,\n  CircularProgress,\n  makeStyles,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingLeft: theme.spacing(3),\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      width: \"90%\",\n      paddingLeft: theme.spacing(0),\n    },\n  },\n  avatar: {\n    width: \"100px\",\n    height: \"100px\",\n    backgroundColor: theme.palette.primary.main,\n  },\n  avatarText: {\n    fontSize: \"42px\",\n  },\n  updateBtn: {\n    marginTop: theme.spacing(2),\n  },\n  avatarContainer: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginBottom: theme.spacing(4),\n    },\n  },\n  input: { display: \"none\" },\n  content: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  formContainer: {\n    paddingLeft: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(0),\n    },\n  },\n  forms: {\n    borderLeft: `1px solid ${theme.palette.primary.light}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"none\",\n      textAlign: \"center\",\n    },\n  },\n  formHeading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4),\n  },\n  formHeading2: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(6),\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nfunction AdminDashboard() {\n  const classes = useStyles();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue: setValue1,\n    watch,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [passwordLoading, setPasswordLoading] = useState(false);\n\n  function plotData() {\n    const data = JSON.parse(localStorage.getItem(\"admin\"));\n    setValue(\"userEmail\", data.userEmail);\n    setValue(\"username\", data.username);\n  }\n  function updateInformation(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateProfile`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSnackData({\n          message: \"Information Updated Succesfully\",\n          type: \"success\",\n          open: true,\n        });\n        console.log(JSON.stringify(response.data));\n        localStorage.removeItem(\"admin\");\n        localStorage.setItem(\"admin\", JSON.stringify(response.data));\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Information\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n  function updatePassword(data) {\n    setPasswordLoading(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/changePassword`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        ...data,\n        username: JSON.parse(localStorage.getItem(\"admin\")).username,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"Invalid Password\") {\n          setSnackData({\n            message: \"Password Updated Succesfully\",\n            type: \"success\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setValue1(\"password\", \"\");\n          setValue1(\"confirmPassword\", \"\");\n          setPasswordLoading(false);\n        } else {\n          setSnackData({\n            message: \"Invalid Old Password\",\n            type: \"error\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setPasswordLoading(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true,\n        });\n        setPasswordLoading(false);\n      });\n  }\n  useEffect(() => {\n    plotData();\n  }, []);\n  return (\n    <div className={classes.container}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <BoxContainerWhite>\n        <div className={classes.content}>\n          <div className={classes.avatarContainer}>\n            <Avatar className={classes.avatar}>\n              <span className={classes.avatarText}> A </span>\n            </Avatar>\n            <input\n              accept=\"image/*\"\n              className={classes.input}\n              id=\"contained-button-file\"\n              type=\"file\"\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n                className={classes.updateBtn}\n                disableElevation\n              >\n                Change Picture\n              </Button>\n            </label>\n          </div>\n          <div className={classes.forms}>\n            <div className={classes.formContainer}>\n              <Typography variant={\"h5\"} className={classes.formHeading}>\n                Personal Information\n              </Typography>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  // signIn(data);\n                })}\n              >\n                <TextField\n                  required\n                  disabled\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  name=\"usename\"\n                  label={\"Username\"}\n                  className={classes.inputFeild}\n                  fullWidth\n                  {...register(\"username\", {\n                    required: \"Username Required\",\n                    pattern: {\n                      value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                      message: \"Invalid Username\",\n                    },\n                  })}\n                  error={Boolean(errors.username)}\n                  helperText={errors.username?.message}\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Email\"}\n                  disabled\n                  name=\"userEmail\"\n                  className={classes.inputFeild}\n                  {...register(\"userEmail\", {\n                    required: \"Email required\",\n                    pattern: {\n                      value:\n                        /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                      message: \"Invalid email\",\n                    },\n                  })}\n                  error={Boolean(errors.userEmail)}\n                  helperText={errors.userEmail?.message}\n                  fullWidth\n                ></TextField>\n                <Box className={classes.btnGroup}>\n                  <Box className={classes.btnGroupLeft}>\n                    {/* <Button\n                      variant={\"contained\"}\n                      disableElevation\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      disabled={disable}\n                    >\n                      Update Information\n                      {disable ? <Progress size={20} /> : \"\"}\n                    </Button> */}\n                  </Box>\n                </Box>\n              </form>\n            </div>\n            <div className={classes.formContainer}>\n              <Typography variant={\"h5\"} className={classes.formHeading2}>\n                Change Password\n              </Typography>\n              <form\n                noValidate\n                onSubmit={handleSubmit1((data) => {\n                  updatePassword(data);\n                })}\n                className={classes.passwordSection}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Old Password\"}\n                  className={classes.inputFeild}\n                  name=\"oldPassword\"\n                  {...register1(\"oldPassword\", {\n                    required: \"Password Required\",\n                    minLength: { value: 6, message: \"Invalid Password\" },\n                  })}\n                  type={\"password\"}\n                  fullWidth\n                  error={Boolean(errors1.password)}\n                  helperText={errors1.password?.message}\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"New Password\"}\n                  className={classes.inputFeild}\n                  name=\"password\"\n                  {...register1(\"password\", {\n                    required: \"Password Required\",\n                    minLength: { value: 6, message: \"Invalid Password\" },\n                  })}\n                  type={\"password\"}\n                  fullWidth\n                  error={Boolean(errors1.password)}\n                  helperText={errors1.password?.message}\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Confirm Password\"}\n                  className={classes.inputFeild}\n                  name=\"confirmPassword\"\n                  {...register1(\"confirmPassword\", {\n                    required: \"Confirm Password Required\",\n                    validate: (value) =>\n                      value === password.current || \"Passwords do not match\",\n                  })}\n                  type={\"password\"}\n                  error={Boolean(errors1.confirmPassword)}\n                  helperText={errors1.confirmPassword?.message}\n                  fullWidth\n                ></TextField>\n                <Button\n                  color=\"primary\"\n                  variant={\"contained\"}\n                  type=\"submit\"\n                  disabled={passwordLoading}\n                >\n                  Update Password{\" \"}\n                  {passwordLoading ? <Progress size={20} /> : \"\"}\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </BoxContainerWhite>\n    </div>\n  );\n}\nexport default AdminDashboard;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/Complaint.js",["458","459","460","461","462","463","464"],"import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  Typography,\n  IconButton,\n  CircularProgress,\n  alpha,\n  Modal,\n  Backdrop,\n  Fade,\n  Avatar,\n} from \"@material-ui/core\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState, useEffect } from \"react\";\nimport Snackbar from \"./Snackbar\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  ratingFeedbackHead: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  complaintCard: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    boxSizing: \"border-box\",\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    width: \"98.5%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95%\",\n      padding: theme.spacing(3),\n    },\n  },\n  catagoryHeading: {\n    fontSize: \"14px\",\n    marginBottom: theme.spacing(1),\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n\n  complaintHeading: {\n    color: theme.palette.dark.main,\n    fontSize: \"14px\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    backgroundImage: `linear-gradient(95.47deg, ${theme.palette.secondary.main} 0%,  ${theme.palette.primary.main} 100%)`,\n    color: theme.palette.light.main,\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  complainCategory: {\n    marginTop: theme.spacing(1),\n  },\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  ratingFeedbackHead: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  ratingFeedbackCard: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    boxSizing: \"border-box\",\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    width: \"98.5%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95%\",\n      padding: theme.spacing(3),\n    },\n  },\n  ratingHeading: {\n    fontSize: \"14px\",\n    marginBottom: theme.spacing(1),\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n  ratingStars: {\n    transform: \"scale(1.5)\",\n  },\n  feedbackHeading: {\n    color: theme.palette.dark.main,\n    fontSize: \"14px\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.light.main,\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  btn: {\n    marginTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  ratingsFeedbacksHeading: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  editRatingsFeedbacksHeading: {\n    marginBottom: theme.spacing(4),\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n  },\n  ratingsFeedbacksContainer: {\n    maxWidth: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  feedbackCard: {\n    flexGrow: 1,\n    minHeight: \"200px\",\n    boxShadow: \"none\",\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n    border: `1px solid ${theme.palette.primary.light}`,\n  },\n  cardName: {\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n  },\n  cardRating: {\n    marginTop: theme.spacing(1),\n  },\n  cardFeedback: {\n    marginTop: theme.spacing(1),\n  },\n  cardTag: {\n    display: \"inline-block\",\n    fontWeight: \"bold\",\n    fontFamily: \"Cookie, cursive\",\n    fontSize: \"20px\",\n    marginTop: theme.spacing(2),\n    backgroundImage: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    backgroundSize: \"100%\",\n    WebkitBackgroundClip: \"text\",\n    MozBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\",\n    MozTextFillColor: \"transparent\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  displayFlexCenter: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  dangerHeading: {\n    marginLeft: theme.spacing(1),\n  },\n  contentPart1: {\n    marginBottom: theme.spacing(2),\n  },\n  reply: {\n    backgroundColor: \"#f7f7f7\",\n    marginTop: theme.spacing(2),\n  },\n  p2: {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction Complaint() {\n  const classes = useStyles();\n  const complainCategory = [\n    {\n      title: \"Information Update\",\n    },\n    {\n      title: \"Payment and subscription\",\n    },\n    {\n      title: \"Broken interface\",\n    },\n    {\n      title: \"Content related issue\",\n    },\n    {\n      title: \"Issue after update\",\n    },\n    {\n      title: \"Other\",\n    },\n  ];\n\n  const [category, setCategory] = useState(complainCategory[0].title);\n  const [actionID, setActionID] = useState(\"\");\n  const [disable, setDisable] = useState(false);\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const [myComplaints, setMyComplaints] = useState([]);\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const [actionDisable, setActionDisable] = useState(false);\n  const [editCategory, setEditCategory] = useState(complainCategory[0].title);\n\n  //   Edit Complaint Modal methods\n  const [editComplaint, seteditComplaint] = useState(false);\n\n  const editOpen = () => {\n    seteditComplaint(true);\n  };\n\n  const editClose = () => {\n    seteditComplaint(false);\n  };\n\n  const [deleteComplaint, setdeleteComplaint] = useState(false);\n\n  const deleteOpen = () => {\n    setdeleteComplaint(true);\n  };\n\n  const deleteClose = () => {\n    setdeleteComplaint(false);\n  };\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  function getmyComplaints() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewAllComplaints${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"No Complaints register.\")\n          setMyComplaints(response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting Complaints\",\n          open: true,\n        });\n      });\n  }\n\n  function postComplaint(data) {\n    console.log(data);\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/registerComplaint${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        category: category,\n        description: data.complaint,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints([response.data, ...myComplaints]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Complaint posted successfully\",\n          open: true,\n        });\n        reset();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error posting complaint\",\n          open: true,\n        });\n      });\n  }\n\n  function updateComplaint(data) {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateComplaint${actionID}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        category: editCategory,\n        description: data.complaint,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints(\n          myComplaints.map((ele) =>\n            ele._id == actionID\n              ? { ...ele, category: editCategory, description: data.complaint }\n              : ele\n          )\n        );\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Complaint updated successfully\",\n          open: true,\n        });\n        reset();\n        editClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error updating complaint\",\n          open: true,\n        });\n      });\n  }\n\n  function removeComplaint() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteComplaint${actionID}/user${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints(myComplaints.filter((ele) => ele._id !== actionID));\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Complaint Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting complaint\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getmyComplaints();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography variant=\"h6\" component={\"h1\"} className={classes.heading}>\n        COMPLAINTS AND RESPONSES\n      </Typography>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingFeedbackHead}\n      >\n        Your Complaint\n      </Typography>\n      <Card className={classes.complaintCard}>\n        <Typography\n          variant=\"h6\"\n          component={\"h6\"}\n          className={classes.catagoryHeading}\n        >\n          Select Category\n        </Typography>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={complainCategory}\n          getOptionLabel={(option) => option.title}\n          defaultValue={complainCategory[0]}\n          style={{ width: 300 }}\n          onChange={(e, val) => setCategory(val.title)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              className={classes.complainCategory}\n              InputLabelProps={{ shrink: true }}\n              required\n            />\n          )}\n        />\n\n        <Typography\n          variant=\"h6\"\n          component={\"h6\"}\n          className={classes.complaintHeading}\n        >\n          Complaint Detail\n        </Typography>\n        <form\n          noValidate\n          onSubmit={handleSubmit((data) => {\n            postComplaint(data);\n          })}\n        >\n          <TextField\n            variant={\"outlined\"}\n            multiline\n            fullWidth\n            rows={8}\n            InputLabelProps={{ shrink: true }}\n            {...register(\"complaint\", {\n              required: \"Complaint Detail Required\",\n              pattern: {\n                value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                message: \"Invalid ComplaintDetail\",\n              },\n            })}\n            error={Boolean(errors.complaint)}\n            helperText={errors.complaint?.message}\n          />\n          <div className={classes.dFlexBetween}>\n            <Button\n              className={classes.submitBtn}\n              variant={\"contained\"}\n              type=\"submit\"\n              disableElevation\n              disabled={disable}\n              color={\"primary\"}\n            >\n              Submit Complaint\n              {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n            </Button>\n          </div>\n        </form>\n      </Card>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingsFeedbacksHeading}\n      >\n        Your Complaints\n      </Typography>\n      <div className={classes.ratingsFeedbacksContainer}>\n        {myComplaints.length > 0 ? (\n          myComplaints.map((ele, i) => {\n            return (\n              <Card className={classes.feedbackCard} key={\"complaint-\" + i}>\n                <div className={classes.dFlexBetween}>\n                  <div>\n                    <Typography\n                      variant=\"h6\"\n                      component={\"h3\"}\n                      className={classes.cardName}\n                    >\n                      {ele.userFullName}\n                    </Typography>\n                  </div>\n                  <div>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"edit\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        setValue(\"complaint\", ele.description);\n                        editOpen();\n                      }}\n                    >\n                      <MdEdit color=\"primary\" />\n                    </IconButton>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"delete\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        deleteOpen();\n                      }}\n                    >\n                      <MdDelete />\n                    </IconButton>\n                  </div>\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardFeedback}\n                >\n                  {ele.description.split(\"\\n\").map((item) => (\n                    <p>{item}</p>\n                  ))}\n                </Typography>\n                <div className={classes.reply}>\n                  {ele.reply ? (\n                    <div className={classes.p2}>\n                      <Typography\n                        variant=\"body1\"\n                        component={\"p\"}\n                        color=\"primary\"\n                        className={classes.cardFeedback}\n                      >\n                        Admin\n                      </Typography>\n                      <Typography variant=\"body1\" component={\"p\"}>\n                        {ele.reply}\n                      </Typography>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardTag}\n                >\n                  Powered By IntelliGenie\n                </Typography>\n              </Card>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlexCenter}>\n            {pageLoading ? (\n              <CircularProgress size={30} color=\"primary\" />\n            ) : (\n              <p>No Complaints To Show</p>\n            )}\n          </div>\n        )}\n      </div>\n      <Modal\n        aria-labelledby=\"Add Sub User\"\n        aria-describedby=\"Add Account of a sub user\"\n        className={classes.modal}\n        open={editComplaint}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 300,\n        }}\n        style={{\n          overflowY: \"auto\",\n        }}\n      >\n        <Fade in={editComplaint}>\n          <div className={classes.paper}>\n            <Typography\n              variant=\"h6\"\n              component={\"h2\"}\n              className={classes.editRatingsFeedbacksHeading}\n            >\n              Edit Complaint\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              component={\"h6\"}\n              className={classes.catagoryHeading}\n            >\n              Select Category\n            </Typography>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={complainCategory}\n              getOptionLabel={(option) => option.title}\n              defaultValue={complainCategory[0]}\n              style={{ width: 300 }}\n              onChange={(e, val) => setCategory(val.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  className={classes.complainCategory}\n                  InputLabelProps={{ shrink: true }}\n                  required\n                />\n              )}\n            />\n\n            <Typography\n              variant=\"h6\"\n              component={\"h6\"}\n              className={classes.complaintHeading}\n            >\n              Complaint Detail\n            </Typography>\n            <form\n              noValidate\n              onSubmit={handleSubmit1((data) => {\n                updateComplaint(data);\n              })}\n            >\n              <TextField\n                variant={\"outlined\"}\n                multiline\n                fullWidth\n                rows={8}\n                InputLabelProps={{ shrink: true }}\n                {...register1(\"complaint\", {\n                  required: \"Complaint Detail Required\",\n                  pattern: {\n                    value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                    message: \"Invalid Complaint Detail\",\n                  },\n                })}\n                error={Boolean(errors1.complaint)}\n                helperText={errors1.complaint?.message}\n              />\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={classes.submitBtn}\n                  variant={\"contained\"}\n                  type=\"submit\"\n                  disableElevation\n                  disabled={actionDisable}\n                  color={\"primary\"}\n                >\n                  Edit Complaint\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={classes.btn}\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={editClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteComplaint}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteComplaint}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Complaint Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete complaint from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  color=\"red\"\n                  disabled={actionDisable}\n                  onClick={removeComplaint}\n                >\n                  Delete Complaint\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn]}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Complaint;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/Helper/ClearLocalStorage.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/Snackbar.jsx",["465"],"import { Snackbar } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useEffect, useState } from \"react\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n export default function CustomSnackbar(props){\n     \n   const[open,setOpen] = useState(props.open)\n  useEffect(()=>{\n    setOpen(props.open)\n  }, [props.open])\n      function snackClose(){\n        setOpen(!open)\n      }\n      return(\n        <Snackbar\n        anchorOrigin={{ vertical:\"bottom\", horizontal:\"center\" }}\n        open={open}\n        autoHideDuration={5000}\n        onClose={snackClose}\n      >\n        <Alert  onClose={snackClose} severity={props.type}>\n         { props.message}\n        </Alert>\n      </Snackbar>\n      )\n  }","/Users/devusama/Work/FYP_FrontEnd/src/components/ButtonLoader.jsx",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/FAQsShareApp.js",["466"],"import {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  makeStyles,\n  Button,\n  Typography,\n  Tooltip,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {\n  FiClipboard as ClipboardIcon,\n  FiFacebook as FacebookIcon,\n  FiTwitter as TwitterIcon,\n} from \"react-icons/fi\";\nimport { FaWhatsapp as WhatsappIcon } from \"react-icons/fa\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"100%\",\n    margin: theme.spacing(8),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  accordion: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  accordionHeading: {\n    color: theme.palette.dark.main,\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n  },\n  contentHeading: {\n    color: theme.palette.primary.main,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  clipboardBtn: {\n    borderRadius: \"50%\",\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"65px\",\n    width: \"65px\",\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.main,\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  btnIcon: {\n    fontSize: \"22px\",\n    padding: 0,\n  },\n  shareBtns: {\n    display: \"flex\",\n  },\n  whatsappicon: {\n    fontSize: \"26px\",\n    padding: 0,\n  },\n  displayFlex: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction FAQsShareApp() {\n  const classes = useStyles();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  // Accordian\n  const [expanded, setExpanded] = useState(\"\");\n  const [faqs, setFaqs] = useState([]);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  function getFAQS() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewALLFAQs`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFaqs(response.data);\n        setExpanded(response.data[0]._id);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getFAQS();\n  }, []);\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h2\" component={\"h2\"} className={classes.heading}>\n        FAQS AND SHARE APP\n      </Typography>\n      <Typography variant=\"h6\" className={classes.contentHeading}>\n        FAQs about IntelliGenie\n      </Typography>\n      <div className={classes.FAQsContainer}>\n        {faqs.length > 0 ? (\n          faqs.map((ele) => {\n            return (\n              <Accordion\n                key={ele._id}\n                className={classes.accordion}\n                expanded={expanded === ele._id}\n                onChange={handleChange(ele._id)}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                  aria-controls=\"panel1bh-content\"\n                  id={ele._id}\n                >\n                  <Typography className={classes.accordionHeading}>\n                    {ele.question}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>{ele.answer}</Typography>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlex}>\n            <CircularProgress size={30} color=\"primary\" />\n          </div>\n        )}\n      </div>\n      <Typography variant=\"h6\" className={classes.contentHeading}>\n        Share Our App\n      </Typography>\n      <div className={classes.shareBtns}>\n        <div style={{ height: \"90px\" }}>\n          <CopyToClipboard text={\"https://intellegenie.netlify.app/\"}>\n            <Tooltip title={\"Copy to Clipboard\"} placement=\"bottom\">\n              <Button\n                variant=\"contained\"\n                className={classes.clipboardBtn}\n                disableElevation\n              >\n                <ClipboardIcon className={classes.btnIcon} />\n              </Button>\n            </Tooltip>\n          </CopyToClipboard>\n        </div>\n        <div style={{ height: \"90px\" }}>\n          <Tooltip title=\"Share on Facebook\" placement=\"bottom\">\n            <Button\n              variant=\"contained\"\n              className={classes.clipboardBtn}\n              disableElevation\n            >\n              <FacebookIcon\n                className={classes.btnIcon}\n                href=\"https://www.facebook.com/\"\n                target=\"_blank\"\n              />\n            </Button>\n          </Tooltip>\n        </div>\n        <div style={{ height: \"90px\" }}>\n          <Tooltip title=\"Share on Twitter\" placement=\"bottom\">\n            <Button\n              variant=\"contained\"\n              disableElevation\n              className={classes.clipboardBtn}\n              href={\"https://twitter.com/compose/tweet\"}\n              target={\"_blank\"}\n            >\n              <TwitterIcon className={classes.btnIcon} />\n            </Button>\n          </Tooltip>\n        </div>\n        <div style={{ height: \"90px\" }}>\n          <Tooltip title=\"Share on WhatsApp\" placement=\"bottom\">\n            <Button\n              disableElevation\n              variant=\"contained\"\n              className={classes.clipboardBtn}\n              href={\"https://wa.me/?text=https://intellegenie.netlify.app/\"}\n              target={\"_blank\"}\n            >\n              <WhatsappIcon className={classes.whatsappicon} />\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FAQsShareApp;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/RatingFeedback.js",["467","468"],"import {\n  Button,\n  Card,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  Modal,\n  Backdrop,\n  Fade,\n  Avatar,\n  CircularProgress,\n  alpha,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport React, { useEffect, useState } from \"react\";\nimport Snackbar from \"./Snackbar\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  ratingFeedbackHead: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  ratingFeedbackCard: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    boxSizing: \"border-box\",\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    width: \"98.5%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95%\",\n      padding: theme.spacing(3),\n    },\n  },\n  ratingHeading: {\n    fontSize: \"14px\",\n    marginBottom: theme.spacing(1),\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n  ratingStars: {\n    transform: \"scale(1.5)\",\n  },\n  feedbackHeading: {\n    color: theme.palette.dark.main,\n    fontSize: \"14px\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.light.main,\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  btn: {\n    marginTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  ratingsFeedbacksHeading: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  editRatingsFeedbacksHeading: {\n    marginBottom: theme.spacing(4),\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n  },\n  ratingsFeedbacksContainer: {\n    maxWidth: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  feedbackCard: {\n    flexGrow: 1,\n    width: \"300px\",\n    minHeight: \"200px\",\n    boxShadow: \"none\",\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n    border: `1px solid ${theme.palette.primary.light}`,\n  },\n  cardName: {\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n  },\n  cardRating: {\n    marginTop: theme.spacing(1),\n  },\n  cardFeedback: {\n    marginTop: theme.spacing(1),\n  },\n  cardTag: {\n    display: \"inline-block\",\n    fontWeight: \"bold\",\n    fontFamily: \"Cookie, cursive\",\n    fontSize: \"20px\",\n    marginTop: theme.spacing(2),\n    backgroundImage: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    backgroundSize: \"100%\",\n    WebkitBackgroundClip: \"text\",\n    MozBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\",\n    MozTextFillColor: \"transparent\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  displayFlexCenter: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  dangerHeading: {\n    marginLeft: theme.spacing(1),\n  },\n  contentPart1: {\n    marginBottom: theme.spacing(2),\n  },\n  reply: {\n    backgroundColor: \"#f7f7f7\",\n    marginTop: theme.spacing(2),\n  },\n  p2: {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction RatingFeedback() {\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const classes = useStyles();\n  const [rating, setRating] = useState(5);\n  const [disable, setDisable] = useState(false);\n  const [actionID, setActionID] = useState(\"\");\n\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const [editRating, setEditRating] = useState(5);\n  const [actionDisable, setActionDisable] = useState(false);\n\n  const [othersFeedbacks, setOthersFeedbacks] = useState([]);\n  const [myFeedbacks, setMyFeedbacks] = useState([]);\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit Feedback Modal methods\n  const [editFeedback, seteditFeedback] = useState(false);\n\n  const editOpen = () => {\n    seteditFeedback(true);\n  };\n\n  const editClose = () => {\n    seteditFeedback(false);\n  };\n\n  const [deleteFeedback, setdeleteFeedback] = useState(false);\n\n  const deleteOpen = () => {\n    setdeleteFeedback(true);\n  };\n\n  const deleteClose = () => {\n    setdeleteFeedback(false);\n  };\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  function postFeedback(data) {\n    console.log(data);\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/provideReviewAndFeedback${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        review: rating,\n        feedback: data.feedback,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyFeedbacks([response.data, ...myFeedbacks]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Feedback posted successfully\",\n          open: true,\n        });\n        reset();\n        setRating(5);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error posting feedback\",\n          open: true,\n        });\n      });\n  }\n\n  function updateFeedback(data) {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateReviewAndFeedback${actionID}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        review: editRating,\n        feedback: data.feedback,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyFeedbacks(\n          myFeedbacks.map((ele) =>\n            ele._id == actionID\n              ? { ...ele, review: editRating, feedback: data.feedback }\n              : ele\n          )\n        );\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Feedback updated successfully\",\n          open: true,\n        });\n        reset();\n        setRating(0);\n        editClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error updating feedback\",\n          open: true,\n        });\n      });\n  }\n\n  function removeFeedback(data) {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteReviewAndFeedback${actionID}/user${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        review: editRating,\n        feedback: data.feedback,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyFeedbacks(myFeedbacks.filter((ele) => ele._id !== actionID));\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Feedback Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting feedback\",\n          open: true,\n        });\n      });\n  }\n\n  function getReviews() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewAllReviews`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setOthersFeedbacks(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting feedbacks\",\n          open: true,\n        });\n      });\n  }\n\n  function getmyReviews() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewAllReviews${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        // setMyFeedbacks(response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting feedbacks\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getReviews();\n    getmyReviews();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography variant=\"h6\" component={\"h1\"} className={classes.heading}>\n        RATINGS AND FEEDBACKS\n      </Typography>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingFeedbackHead}\n      >\n        Your Feedback\n      </Typography>\n      <Card className={classes.ratingFeedbackCard}>\n        <Typography\n          variant=\"h6\"\n          component={\"h6\"}\n          className={classes.ratingHeading}\n        >\n          Please Rate Us\n        </Typography>\n        <Rating\n          name=\"simple-controlled\"\n          size=\"large\"\n          value={rating}\n          onChange={(_, val) => setRating(val)}\n        />\n        <Typography\n          variant=\"h6\"\n          component={\"h6\"}\n          className={classes.feedbackHeading}\n        >\n          Please Provide Feedback\n        </Typography>\n        <form\n          noValidate\n          onSubmit={handleSubmit((data) => {\n            postFeedback(data);\n          })}\n        >\n          <TextField\n            variant={\"outlined\"}\n            multiline\n            fullWidth\n            rows={8}\n            InputLabelProps={{ shrink: true }}\n            {...register(\"feedback\", {\n              required: \"Feedback Required\",\n              pattern: {\n                value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                message: \"Invalid Feedback\",\n              },\n            })}\n            error={Boolean(errors.feedback)}\n            helperText={errors.feedback?.message}\n          />\n          <div className={classes.dFlexBetween}>\n            <Button\n              className={classes.submitBtn}\n              variant={\"contained\"}\n              type=\"submit\"\n              disabled={disable}\n              color={\"primary\"}\n            >\n              Submit Feedback\n              {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n            </Button>\n          </div>\n        </form>\n      </Card>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingsFeedbacksHeading}\n      >\n        Your Feedbacks\n      </Typography>\n      <div className={classes.ratingsFeedbacksContainer}>\n        {myFeedbacks.length > 0 ? (\n          myFeedbacks.map((ele) => {\n            return (\n              <Card className={classes.feedbackCard}>\n                <div className={classes.dFlexBetween}>\n                  <div>\n                    <Typography\n                      variant=\"h6\"\n                      component={\"h3\"}\n                      className={classes.cardName}\n                    >\n                      {ele.userFullName}\n                    </Typography>\n                    <Rating\n                      name=\"simple-controlled\"\n                      size=\"small\"\n                      value={ele.review}\n                      disabled\n                      className={classes.cardRating}\n                    />\n                  </div>\n                  <div>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"edit\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        setEditRating(ele.review);\n                        setValue(\"feedback\", ele.feedback);\n                        editOpen();\n                      }}\n                    >\n                      <MdEdit color=\"primary\" />\n                    </IconButton>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"delete\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        deleteOpen();\n                      }}\n                    >\n                      <MdDelete />\n                    </IconButton>\n                  </div>\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardFeedback}\n                >\n                  {ele.feedback.split(\"\\n\").map((item) => (\n                    <p>{item}</p>\n                  ))}\n                </Typography>\n                <div className={classes.reply}>\n                  {ele.reply ? (\n                    <div className={classes.p2}>\n                      <Typography\n                        variant=\"body1\"\n                        component={\"p\"}\n                        color=\"primary\"\n                        className={classes.cardFeedback}\n                      >\n                        Admin\n                      </Typography>\n                      <Typography variant=\"body1\" component={\"p\"}>\n                        {ele.reply}\n                      </Typography>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardTag}\n                >\n                  Powered By IntelliGenie\n                </Typography>\n              </Card>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlexCenter}>\n            {pageLoading ? (\n              <CircularProgress size={30} color=\"primary\" />\n            ) : (\n              <p>No Feedbacks To Show</p>\n            )}\n          </div>\n        )}\n      </div>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingsFeedbacksHeading}\n      >\n        Other People Feedbacks\n      </Typography>\n      <div className={classes.ratingsFeedbacksContainer}>\n        {othersFeedbacks.length > 0 ? (\n          othersFeedbacks.map((ele) => {\n            return (\n              <Card className={classes.feedbackCard}>\n                <Typography\n                  variant=\"h6\"\n                  component={\"h3\"}\n                  className={classes.cardName}\n                >\n                  {ele.userFullName}\n                </Typography>\n                <Rating\n                  name=\"simple-controlled\"\n                  size=\"small\"\n                  value={ele.review}\n                  disabled\n                  className={classes.cardRating}\n                />\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardFeedback}\n                >\n                  {ele.feedback.split(\"\\n\").map((item) => (\n                    <p>{item}</p>\n                  ))}\n                </Typography>\n                <div className={classes.reply}>\n                  {ele.reply ? (\n                    <div className={classes.p2}>\n                      <Typography\n                        variant=\"body1\"\n                        component={\"p\"}\n                        color=\"primary\"\n                        className={classes.cardFeedback}\n                      >\n                        Admin\n                      </Typography>\n                      <Typography variant=\"body1\" component={\"p\"}>\n                        {ele.reply}\n                      </Typography>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardTag}\n                >\n                  Powered By IntelliGenie\n                </Typography>\n              </Card>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlexCenter}>\n            <CircularProgress size={30} color=\"primary\" />\n          </div>\n        )}\n      </div>\n      <Modal\n        aria-labelledby=\"Add Sub User\"\n        aria-describedby=\"Add Account of a sub user\"\n        className={classes.modal}\n        open={editFeedback}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 300,\n        }}\n        style={{\n          overflowY: \"auto\",\n        }}\n      >\n        <Fade in={editFeedback}>\n          <div className={classes.paper}>\n            <Typography\n              variant=\"h6\"\n              component={\"h2\"}\n              className={classes.editRatingsFeedbacksHeading}\n            >\n              Edit Feedback\n            </Typography>\n            <div>\n              <Typography\n                variant=\"h6\"\n                component={\"h6\"}\n                className={classes.ratingHeading}\n              >\n                Please Rate Us\n              </Typography>\n              <Rating\n                name=\"Edit-controlled\"\n                size=\"large\"\n                value={editRating}\n                onChange={(_, val) => setEditRating(val)}\n              />\n              <Typography\n                variant=\"h6\"\n                component={\"h6\"}\n                className={classes.feedbackHeading}\n              >\n                Please Provide Feedback\n              </Typography>\n              <form\n                noValidate\n                onSubmit={handleSubmit1((data) => {\n                  updateFeedback(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  fullWidth\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register1(\"feedback\", {\n                    required: \"Feedback Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9 _.-]{2,}$/m,\n                      message: \"Invalid Feedback\",\n                    },\n                  })}\n                  error={Boolean(errors1.feedback)}\n                  helperText={errors1.feedback?.message}\n                />\n                <div className={classes.dFlexBetween}>\n                  <Button\n                    className={classes.submitBtn}\n                    variant={\"contained\"}\n                    type=\"submit\"\n                    disabled={actionDisable}\n                    color={\"primary\"}\n                  >\n                    Edit Feedback\n                    {actionDisable ? (\n                      <Progress color=\"primary\" size={20} />\n                    ) : (\n                      \"\"\n                    )}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    className={[classes.btn, classes.ml3]}\n                    onClick={editClose}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteFeedback}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteFeedback}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Feedback Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete feedback from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  color=\"red\"\n                  disabled={actionDisable}\n                  onClick={removeFeedback}\n                >\n                  Delete Feedback\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn]}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RatingFeedback;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/SystemGuide.js",["469","470","471","472","473"],"import {\n  Button,\n  Card,\n  makeStyles,\n  CircularProgress,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(5.5),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  guideHeading: {\n    fontWeight: \"bold\",\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(4),\n    color: theme.palette.primary.main,\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(0),\n    },\n  },\n  videoGuide: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  videoHeading: {\n    color: theme.palette.dark.main,\n    fontWeight: \"bold\",\n    marginBottom: theme.spacing(2),\n  },\n  manualContainer: {\n    flexGrow: \"1\",\n    width: \"300px\",\n    minHeight: \"150px\",\n    margin: theme.spacing(2.5),\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"#fff\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(0),\n      marginRight: theme.spacing(0),\n    },\n  },\n  videoContainer: {\n    position: \"relative\",\n  },\n  loadingVideo: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translateX(-50%) translateY(-50%)\",\n    zIndex: 0,\n  },\n  video: {\n    zIndex: 5,\n  },\n  changelogList: {\n    padding: theme.spacing(2),\n    paddingLeft: theme.spacing(4),\n    paddingTop: theme.spacing(0),\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2.2),\n    },\n  },\n  listItem: {\n    fontSize: \"16px\",\n    paddingTop: theme.spacing(0.6),\n    paddingBottom: theme.spacing(0.6),\n    color: theme.palette.dark.main,\n  },\n  displayFlex: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n}));\n\nfunction SystemGuide() {\n  const classes = useStyles();\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [loader, setLoader] = useState(true);\n\n  const [changeLog, setChangeLog] = useState([]);\n  const [systemVideos, setSystemVideos] = useState([]);\n\n  function videoReady(e) {\n    setLoader(false);\n  }\n\n  function getChangeLog() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewChangeLog`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data.changeLog);\n        setChangeLog(response.data.changeLog);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  function getSystemVideos() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewVideos`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSystemVideos(response.data.systemVideo);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getChangeLog();\n    getSystemVideos();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h2\" component={\"h2\"} className={classes.heading}>\n        SYSTEM GUIDE\n      </Typography>\n      <Typography variant=\"h6\" className={classes.guideHeading}>\n        Video Guides\n      </Typography>\n      <div className={classes.videoGuide}>\n        {systemVideos.length > 0 ? (\n          systemVideos.map((ele) => {\n            return (\n              <div className={classes.manualContainer}>\n                <Typography\n                  variant=\"body2\"\n                  component={\"h5\"}\n                  className={classes.videoHeading}\n                >\n                  {ele.title}\n                </Typography>\n                <div className={classes.videoContainer}>\n                  {loader ? (\n                    <div className={classes.loadingVideo}>\n                      <CircularProgress />\n                    </div>\n                  ) : null}\n                  <div className={classes.video}>\n                    <YouTube\n                      videoId={ele.URL.split(\"=\")[1]}\n                      opts={{\n                        width: \"100%\",\n                        height: \"180\",\n                      }}\n                      onReady={(e) => {\n                        setLoader(false);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlex}>\n            <CircularProgress size={30} color=\"primary\" />\n          </div>\n        )}\n      </div>\n      <Typography variant=\"h6\" className={classes.guideHeading}>\n        Change Logs\n      </Typography>\n      <div className={classes.changelogList}>\n        <ul>\n          {changeLog.length > 0 ? (\n            changeLog.map((ele, i) => (\n              <li key={\"item\" + i} className={classes.listItem}>\n                {ele}\n              </li>\n            ))\n          ) : (\n            <div className={classes.displayFlex}>\n              <CircularProgress size={30} color=\"primary\" />\n            </div>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default SystemGuide;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/FeedbackHelpTemplate.js",["474","475","476","477","478","479"],"import React, { useEffect } from \"react\";\nimport Logo from \"./img/Logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  FiThumbsUp as FeedbackIcon,\n  FiHelpCircle as QueryIcon,\n  FiAlertTriangle as ComplaintIcon,\n  FiFileText as SystemGuideIcon,\n  FiShare2 as ShareIcon,\n} from \"react-icons/fi\";\nimport {\n  MdInfoOutline,\n  MdLogout as SignoutIcon,\n  MdOutlineQuestionAnswer,\n  MdQuestionAnswer,\n} from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logout } from \"./Helper/ClearLocalStorage\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#f2f8f8\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItem: {\n    padding: \"10px 40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  listItemActive: {\n    padding: \"10px 40px\",\n    color: theme.palette.light.main,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.primary.main} 100%)`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  appBar: {\n    backgroundImage: \"linear-gradient(90deg, #0067B1 0%, #008181 100%)\",\n    zIndex: \"100\",\n    padding: \"0px !important\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0),\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    zIndex: 0,\n    width: drawerWidth,\n    backgroundColor: \"#ffffff\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper1: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"85vh\",\n    margin: \"20px\",\n    marginRight: \"0px\",\n    paddingLeft: drawerWidth - 20 + \"px\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingLeft: 0,\n      margin: 0,\n    },\n  },\n  navItemIcon: {\n    marginRight: \"10px\",\n    color: theme.palette.dark.main,\n  },\n  navItemIconActive: {\n    marginRight: \"10px\",\n    color: theme.palette.light.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(0.7),\n  },\n  navScreen: {\n    marginTop: \"65px\",\n    width: \"100%\",\n  },\n  toolBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  },\n  SignoutBtn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    margin: \"0px 10px\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundImage: ` linear-gradient(93.12deg, ${theme.palette.secondary.main} 1.28%, ${theme.palette.primary.main} 99.48%)`,\n  },\n  signoutIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.light.main,\n    fontWeight: \"bolder\",\n  },\n\n  width100: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    height: \"25px\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(0.3),\n\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.8) translateY(0px)\",\n    },\n  },\n  avatarBtn: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n}));\n\nfunction FeedbackHelpTemplate(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const location = useLocation();\n\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to=\"/feedbackHelpCenter\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/feedbackHelpCenter\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <FeedbackIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/feedbackHelpCenter\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Ratings and Feedback\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/feedbackHelpCenter/complaint\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/feedbackHelpCenter/complaint\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <ComplaintIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/feedbackHelpCenter/complaint\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Complaint and Response\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/feedbackHelpCenter/query\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/feedbackHelpCenter/query\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <MdOutlineQuestionAnswer\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/feedbackHelpCenter/query\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Query and Response\"} />\n          </ListItem>\n        </Link>\n\n        <Link className={classes.link} to={\"/feedbackHelpCenter/systemGuide\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/feedbackHelpCenter/systemGuide\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <SystemGuideIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/feedbackHelpCenter/systemGuide\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"System Guide\"} />\n          </ListItem>\n        </Link>\n        <Link className={classes.link} to={\"/feedbackHelpCenter/FAQsShareApp\"}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/feedbackHelpCenter/FAQsShareApp\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <ShareIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/feedbackHelpCenter/FAQsShareApp\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"FAQs and Share App\"} />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  const history = useHistory();\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar className={classes.appBar}>\n        <div className={classes.toolBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to={\"/app\"}>\n            <img src={Logo} alt=\"Logo\" className={classes.Logo} />\n          </Link>\n          <div className={classes.settings}>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              className={classes.avatarBtn}\n              color=\"inherit\"\n            >\n              <Avatar\n                src={JSON.parse(localStorage.getItem(\"user\")).profilePicture}\n              />\n            </IconButton>\n            <Menu\n              className={classes.menu}\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <Link to={\"/feedbackHelpCenter\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Feedback and Help Center\n                </MenuItem>\n              </Link>\n              <Link to={\"/subscription\"} className={classes.link}>\n                <MenuItem className={classes.width100} onClick={handleClose}>\n                  Payment and Subscription\n                </MenuItem>\n              </Link>\n              <Link to={\"/account\"} className={classes.link}>\n                <MenuItem onClick={handleClose} className={classes.width100}>\n                  Account Settings\n                </MenuItem>\n              </Link>\n              <div className={classes.link}>\n                <MenuItem\n                  className={[classes.width100, classes.SignoutBtn].join(\" \")}\n                  onClick={() => {\n                    handleClose();\n                    logout(history);\n                  }}\n                >\n                  Sign out\n                  <SignoutIcon className={classes.signoutIcon} />\n                </MenuItem>\n              </div>\n            </Menu>\n          </div>\n        </div>\n      </AppBar>\n      <div className={classes.navScreen}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          className={classes.drawerPaper1}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <nav>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{props.children}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default FeedbackHelpTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminUserManagement.js",["480","481","482","483","484","485"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { FiTrash as DeleteIcon } from \"react-icons/fi\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\n\nconst useStyle = makeStyles((theme) => ({\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  contentPart1: {\n    width: \"100%\",\n    textAlign: \"justify\",\n    marginTop: theme.spacing(2),\n  },\n  contentProminent: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    fontWeight: \"bold\",\n    fontSize: \"16px\",\n  },\n  contentPart2: {\n    marginTop: theme.spacing(2),\n    textAlign: \"justify\",\n    width: \"100%\",\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginBottom: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n}));\n\nfunction AdminUserManagement() {\n  const classes = useStyle();\n  const [users, setUsers] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n  } = useForm();\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n  //   Add User Modal methods\n  const [addUser, setAddUser] = useState(false);\n\n  const addOpen = () => {\n    setAddUser(true);\n  };\n\n  const addClose = () => {\n    setAddUser(false);\n    reset();\n  };\n\n  function AddUser(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(!disable);\n\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/signUp`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (res) {\n        if (res.data === \"User Successfully Created\") {\n          setSnackData({\n            message: \"User Registered Successfuly\",\n            type: \"success\",\n            open: true,\n          });\n          reset();\n          setDisable(false);\n          setUsers([data, ...users]);\n          addClose();\n        } else {\n          setSnackData({\n            message: \"User Already Registered\",\n            type: \"error\",\n            open: true,\n          });\n          setValue(\"username\", \"\");\n          setDisable(false);\n        }\n        console.log(res);\n      })\n      .catch(function (error) {\n        setSnackData({\n          message: \"Something went wrong please try again\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function EditUser(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/updateProfile`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setSnackData({\n          message: \"Information Updated Succesfully\",\n          type: \"success\",\n          open: true,\n        });\n\n        setUsers([\n          data,\n          ...users.filter((ele) => data.username !== ele.username),\n        ]);\n        setDisable(false);\n        editClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Information\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n  function editReady(data) {\n    setValue(\"firstName\", data.firstName);\n    setValue(\"lastName\", data.lastName);\n    setValue(\"userEmail\", data.userEmail);\n    setValue(\"username\", data.username);\n    editOpen();\n  }\n  function DeleteUser() {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteUser${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setSnackData({\n          type: \"success\",\n          message: \"User Deleted Successfully\",\n          open: true,\n        });\n        setDisable(false);\n        setUsers([...users.filter((ele) => ele._id !== actionId)]);\n        deleteClose();\n        setActionId(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting User\",\n          open: true,\n        });\n      });\n  }\n\n  function getAllUsers() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewAllUsers`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data[0]);\n        setUsers(response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        USER MANAGEMENT\n      </Typography>\n      <Button\n        variant={\"contained\"}\n        className={classes.btn}\n        color=\"primary\"\n        disableElevation\n        onClick={addOpen}\n      >\n        Add User\n      </Button>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          isLoading={pageLoading}\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          title=\" \"\n          columns={[\n            {\n              title: \"Name\",\n              field: \"name\",\n              render: (rowData) => (\n                <p>\n                  {rowData.firstName} {rowData.lastName}\n                </p>\n              ),\n            },\n            {\n              title: \"Username\",\n              field: \"username\",\n              cellStyle: { maxWidth: 80 },\n            },\n            {\n              title: \"Email\",\n              field: \"userEmail\",\n              cellStyle: { maxWidth: 250 },\n            },\n            {\n              title: \"Creation Date\",\n              field: \"updatedAt\",\n              render: (rowData) => (\n                <p>{moment(rowData.updatedAt).format(\"DD/MM/YYYY\")}</p>\n              ),\n            },\n          ]}\n          data={users}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Edit User\",\n              onClick: (e, data) => {\n                editReady(data);\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n            {\n              icon: \"delete\",\n              tooltip: \"Delete User\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"All Users\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              fontWeight: \"bold\",\n              textAlign: \"left\",\n            },\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Edit Sub User\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit1((data) => {\n                  EditUser(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"First Name\"}\n                  name=\"firstName\"\n                  className={classes.formItem}\n                  {...register1(\"firstName\", {\n                    required: \"First name required\",\n                    pattern: {\n                      value: /^[a-zA-Z ]*$/,\n                      message: \"Invalid first name\",\n                    },\n                  })}\n                  error={Boolean(errors1.firstName)}\n                  helperText={errors1.firstName?.message}\n                  fullWidth\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Last Name\"}\n                  className={classes.formItem}\n                  name=\"lastName\"\n                  {...register1(\"lastName\", {\n                    required: \"Last name required\",\n                    pattern: {\n                      value: /^[a-zA-Z ]*$/,\n                      message: \"Invalid last name\",\n                    },\n                  })}\n                  error={Boolean(errors1.lastName)}\n                  helperText={errors1.lastName?.message}\n                  fullWidth\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Email\"}\n                  name=\"userEmail\"\n                  className={classes.formItem}\n                  {...register1(\"userEmail\", {\n                    required: \"Email required\",\n                    pattern: {\n                      value:\n                        /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                      message: \"Invalid email\",\n                    },\n                  })}\n                  error={Boolean(errors1.userEmail)}\n                  helperText={errors1.userEmail?.message}\n                  fullWidth\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  disabled\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Username\"}\n                  name=\"username\"\n                  className={classes.formItem}\n                  {...register1(\"username\", {\n                    required: \"Username Required\",\n                    pattern: {\n                      value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                      minLength: {\n                        value: 6,\n                        message: \"Username can not be less than 3 characters\",\n                      },\n                      message: \"Invalid Username\",\n                    },\n                  })}\n                  error={Boolean(errors1.username)}\n                  helperText={errors1.username?.message}\n                  fullWidth\n                ></TextField>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Edit User\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <DeleteIcon />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Account Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                We are sorry to hear you’d like to delete your account.\n                Permenantly Delete data and all services from IntelliGenie.\n              </Typography>\n              <Typography variant={\"h6\"} className={classes.contentProminent}>\n                Keeping Your Data Safe\n              </Typography>\n              <Typography variant={\"body2\"} className={classes.contentPart2}>\n                Nothing is more important to us than the safety and security of\n                our community. People put their trust in us. So we will never\n                make any compromise when it comes to safeguarding your data\n              </Typography>\n\n              <div className={classes.btnGroup}>\n                <Button\n                  className={classes.deleteBtn}\n                  variant=\"contained\"\n                  onClick={DeleteUser}\n                  disabled={disable}\n                  disableElevation\n                >\n                  Delete Account{\" \"}\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={classes.ml3}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Add Sub User\"\n        aria-describedby=\"Add Account of a sub user\"\n        className={classes.modal}\n        open={addUser}\n        onClose={addClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 300,\n        }}\n        style={{\n          overflowY: \"auto\",\n        }}\n      >\n        <Fade in={addUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Add Sub User\n            </Typography>\n            <div className={classes.modalForm}>\n              <div className={classes.modalForm}>\n                <form\n                  noValidate\n                  onSubmit={handleSubmit((data) => {\n                    AddUser(data);\n                  })}\n                >\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"First Name\"}\n                    name=\"firstName\"\n                    className={classes.formItem}\n                    {...register(\"firstName\", {\n                      required: \"First name required\",\n                      pattern: {\n                        value: /^[a-zA-Z ]*$/,\n                        message: \"Invalid first name\",\n                      },\n                    })}\n                    error={Boolean(errors.firstName)}\n                    helperText={errors.firstName?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Last Name\"}\n                    className={classes.formItem}\n                    name=\"lastName\"\n                    {...register(\"lastName\", {\n                      required: \"Last name required\",\n                      pattern: {\n                        value: /^[a-zA-Z ]*$/,\n                        message: \"Invalid last name\",\n                      },\n                    })}\n                    error={Boolean(errors.lastName)}\n                    helperText={errors.lastName?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Email\"}\n                    name=\"userEmail\"\n                    className={classes.formItem}\n                    {...register(\"userEmail\", {\n                      required: \"Email required\",\n                      pattern: {\n                        value:\n                          /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                        message: \"Invalid email\",\n                      },\n                    })}\n                    error={Boolean(errors.userEmail)}\n                    helperText={errors.userEmail?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Username\"}\n                    name=\"username\"\n                    className={classes.formItem}\n                    {...register(\"username\", {\n                      required: \"Username Required\",\n                      pattern: {\n                        value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                        minLength: {\n                          value: 6,\n                          message: \"Username can not be less than 3 characters\",\n                        },\n                        message: \"Invalid Username\",\n                      },\n                    })}\n                    error={Boolean(errors.username)}\n                    helperText={errors.username?.message}\n                    fullWidth\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Password\"}\n                    className={classes.formItem}\n                    name=\"password\"\n                    {...register(\"password\", {\n                      required: \"Password Required\",\n                      minLength: { value: 6, message: \"Invalid Password\" },\n                    })}\n                    type={\"password\"}\n                    fullWidth\n                    error={Boolean(errors.password)}\n                    helperText={errors.password?.message}\n                  ></TextField>\n                  <TextField\n                    variant={\"outlined\"}\n                    InputLabelProps={{ shrink: true }}\n                    size={\"medium\"}\n                    color={\"primary\"}\n                    label={\"Confirm Password\"}\n                    className={classes.formItem}\n                    name=\"confirmPassword\"\n                    {...register(\"confirmPassword\", {\n                      required: \"Confirm Password Required\",\n                      validate: (value) =>\n                        value === password.current || \"Passwords do not match\",\n                    })}\n                    type={\"password\"}\n                    error={Boolean(errors.confirmPassword)}\n                    helperText={errors.confirmPassword?.message}\n                    fullWidth\n                  ></TextField>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignContent: \"flex-end\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    <Button\n                      variant={\"contained\"}\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      disabled={disable}\n                      disableElevation\n                    >\n                      Add User\n                      {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      disableElevation\n                      onClick={addClose}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminUserManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminComplaintManagement.js",["486","487","488"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminFeedbackManagement() {\n  const classes = useStyle();\n\n  const [feedbacks, setFeedbacks] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const [activeFeedback, setActiveFeedback] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n    reset();\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n    setActionId(\"\");\n    setActiveFeedback(\"\");\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n\n  function getAllComplaints() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewAllComplaints`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data === \"No Un-Responded Complaints Found\")\n          setFeedbacks([]);\n        else setFeedbacks(...feedbacks, response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function replyComlaint(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    console.log(disable);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/respondToComplaint${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { reply: data.feedbackReply },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFeedbacks([\n          ...feedbacks.map((ele) =>\n            ele._id === actionId ? { ...ele, isResponded: true } : ele\n          ),\n        ]);\n        setSnackData({\n          message: \"Reply Sent Successfully\",\n          type: \"success\",\n          open: true,\n        });\n        editClose();\n        setDisable(false);\n        console.log(disable);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Replying Complaint\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function removeFeedback() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteComplaint${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(feedbacks.filter((ele) => ele._id !== actionId));\n        setFeedbacks([...feedbacks.filter((ele) => ele._id !== actionId)]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Feedback Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting feedback\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllComplaints();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        COMPLAINT MANAGEMENT\n      </Typography>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Name\",\n              field: \"userFullName\",\n            },\n            {\n              title: \"Username\",\n              field: \"username\",\n            },\n            {\n              title: \"Complaint\",\n              field: \"description\",\n              type: \"String\",\n              cellStyle: {\n                width: \"40%\",\n                minWidth: \"400px\",\n              },\n            },\n            {\n              title: \"Response\",\n              field: \"isResponded\",\n              render: (rowData) =>\n                rowData.isResponded ? (\n                  <Chip\n                    label=\"Responded\"\n                    className={classes.responded}\n                    icon={<RespondedIcon className={classes.icon} />}\n                  />\n                ) : (\n                  <Chip\n                    label=\"Not Responded\"\n                    className={classes.notResponded}\n                    icon={<NotRespondedIcon className={classes.icon} />}\n                  />\n                ),\n            },\n          ]}\n          data={feedbacks}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Reply Feedback\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                setActiveFeedback(data.description);\n                editOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n            {\n              icon: \"delete\",\n              tooltip: \"Delete User\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"Complaints\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Reply Compaint\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  replyComlaint(data);\n                })}\n              >\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Complaint\n                </Typography>\n                <Typography\n                  variant=\"inherit\"\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  {activeFeedback}\n                </Typography>\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Reply\n                </Typography>\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  fullWidth\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"feedbackReply\", {\n                    required: \"Reply Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                      message: \"Invalid Reply\",\n                    },\n                  })}\n                  error={Boolean(errors.feedbackReply)}\n                  helperText={errors.feedbackReply?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Reply Complaint\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Complaint Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete feedback from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  disabled={disable}\n                  onClick={removeFeedback}\n                >\n                  Delete Complain\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn].join(\" \")}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminFeedbackManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminTemplate.js",["489","490","491"],"import React from \"react\";\nimport Logo from \"./img/Logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport {\n  FiHome as DashboardIcon,\n  FiUser as UserManagementIcon,\n  FiPenTool as FeedbackManagementIcon,\n  FiFeather as ComplaintManagementIcon,\n} from \"react-icons/fi\";\nimport {\n  RiQuestionAnswerLine,\n  RiNewspaperLine,\n  RiQuestionnaireLine,\n} from \"react-icons/ri\";\nimport {\n  MdLogout as SignoutIcon,\n  MdOutlineVideoSettings,\n} from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logoutAdmin } from \"./Helper/ClearLocalStorage\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#f2f8f8\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItem: {\n    padding: \"10px 40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  listItemActive: {\n    padding: \"10px 40px\",\n    color: theme.palette.light.main,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.primary.main} 100%)`,\n    borderRadius: theme.shape.borderRadius,\n  },\n  appBar: {\n    backgroundImage: \"linear-gradient(90deg, #0067B1 0%, #008181 100%)\",\n    zIndex: \"100\",\n    padding: \"0px !important\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0),\n    },\n  },\n  // necessary for content to be below app bar\n  // toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    zIndex: 0,\n    width: drawerWidth,\n    backgroundColor: \"#ffffff\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper1: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    minHeight: \"85vh\",\n    margin: \"20px\",\n    marginRight: \"20px\",\n    paddingLeft: drawerWidth - 20 + \"px\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingLeft: 0,\n      margin: 0,\n    },\n  },\n  navItemIcon: {\n    marginRight: \"10px\",\n    color: theme.palette.dark.main,\n  },\n  navItemIconActive: {\n    marginRight: \"10px\",\n    color: theme.palette.light.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(0.7),\n  },\n  navScreen: {\n    marginTop: \"65px\",\n    width: \"100%\",\n  },\n  toolBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  },\n  SignoutBtn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: theme.palette.light.main,\n    margin: \"0px 10px\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundImage: ` linear-gradient(93.12deg, ${theme.palette.secondary.main} 1.28%, ${theme.palette.primary.main} 99.48%)`,\n  },\n  signoutIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.light.main,\n    fontWeight: \"bolder\",\n  },\n\n  width100: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    height: \"25px\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(0.3),\n\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.8) translateY(0px)\",\n    },\n  },\n  setting: {\n    padding: \"0px\",\n  },\n  drawerContainer: {\n    marginTop: theme.spacing(8),\n  },\n\n  avatarBtn: {\n    paddingLeft: \"0\",\n    paddingRight: \"0\",\n  },\n}));\n\nfunction ProfileTemplate(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const location = useLocation();\n\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to=\"/admin\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <DashboardIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Dashboard\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/userManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/userManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <UserManagementIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/userManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"User Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/feedbackManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/feedbackManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <FeedbackManagementIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/feedbackManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Feedback Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/complaintManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/complaintManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <ComplaintManagementIcon\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/complaintManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Complaint Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/queryManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/queryManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <RiQuestionnaireLine\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/queryManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Query Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/changelogManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/changelogManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <RiNewspaperLine\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/changelogManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"Changelog Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/faqsManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/faqsManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <RiQuestionAnswerLine\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/faqsManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"FAQs Management\"} />\n          </ListItem>\n        </Link>\n        <Link to=\"/admin/videosManagement\" className={classes.link}>\n          <ListItem\n            onClick={handleDrawerToggle}\n            button\n            className={\n              location.pathname === \"/admin/videosManagement\"\n                ? classes.listItemActive\n                : classes.listItem\n            }\n          >\n            <MdOutlineVideoSettings\n              style={{ fontSize: 20 }}\n              className={\n                location.pathname === \"/admin/videosManagement\"\n                  ? classes.navItemIconActive\n                  : classes.navItemIcon\n              }\n            />\n            <ListItemText primary={\"System Videos\"} />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  const history = useHistory();\n\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <AppBar className={classes.appBar}>\n        <div className={classes.toolBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to={\"/admin\"}>\n            <img src={Logo} alt=\"Logo\" className={classes.Logo} />\n          </Link>\n          <div className={classes.settings}>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              className={classes.avatarBtn}\n              color=\"inherit\"\n            >\n              <Avatar />\n            </IconButton>\n            <Menu\n              className={classes.menu}\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <Link to={\"/admin/account\"} className={classes.link}>\n                <MenuItem onClick={handleClose} className={classes.width100}>\n                  Account Settings\n                </MenuItem>\n              </Link>\n              <div className={classes.link}>\n                <MenuItem\n                  className={[classes.width100, classes.SignoutBtn].join(\" \")}\n                  onClick={() => {\n                    logoutAdmin(history);\n                  }}\n                >\n                  Sign out\n                  <SignoutIcon className={classes.signoutIcon} />\n                </MenuItem>\n              </div>\n            </Menu>\n          </div>\n        </div>\n      </AppBar>\n      <div className={classes.navScreen}>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          className={classes.drawerPaper1}\n          classes={{\n            paper: classes.drawerPaper1,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n        <nav>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{props.children}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminFeedbackManagement.js",["492","493"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminFeedbackManagement() {\n  const classes = useStyle();\n\n  const [feedbacks, setFeedbacks] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const [activeFeedback, setActiveFeedback] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n    reset();\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n    setActionId(\"\");\n    setActiveFeedback(\"\");\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n\n  function getAllFeedbacks() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewAllFeedbacks`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFeedbacks(...feedbacks, response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function replyFeedback(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/respondToFeedback${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { reply: data.feedbackReply },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(feedbacks);\n        setFeedbacks([\n          ...feedbacks.map((ele) =>\n            ele._id === actionId ? { ...ele, isResponded: true } : ele\n          ),\n        ]);\n        console.log(feedbacks);\n        setSnackData({\n          message: \"Reply Sent Successfully\",\n          type: \"success\",\n          open: true,\n        });\n        editClose();\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Replying Feedback\",\n          type: \"error\",\n          open: true,\n        });\n      });\n    setDisable(false);\n  }\n\n  function removeFeedback() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteReview${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(feedbacks.filter((ele) => ele._id !== actionId));\n        setFeedbacks([...feedbacks.filter((ele) => ele._id !== actionId)]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Feedback Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting feedback\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllFeedbacks();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        FEEDBACK MANAGEMENT\n      </Typography>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Name\",\n              field: \"userFullName\",\n            },\n            {\n              title: \"Rating\",\n              field: \"review\",\n              render: (rowData) => (\n                <Rating name=\"disabled\" value={rowData.review} disabled />\n              ),\n            },\n            {\n              title: \"Feedback\",\n              field: \"feedback\",\n              type: \"String\",\n              cellStyle: {\n                width: \"40%\",\n                minWidth: \"400px\",\n              },\n            },\n            {\n              title: \"Response\",\n              field: \"isResponded\",\n              render: (rowData) =>\n                rowData.isResponded ? (\n                  <Chip\n                    label=\"Responded\"\n                    className={classes.responded}\n                    icon={<RespondedIcon className={classes.icon} />}\n                  />\n                ) : (\n                  <Chip\n                    label=\"Not Responded\"\n                    className={classes.notResponded}\n                    icon={<NotRespondedIcon className={classes.icon} />}\n                  />\n                ),\n            },\n          ]}\n          data={feedbacks}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Reply Feedback\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                setActiveFeedback(data.feedback);\n                editOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n            {\n              icon: \"delete\",\n              tooltip: \"Delete User\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"Feedbacks\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Reply Feedback\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  replyFeedback(data);\n                })}\n              >\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Feedback\n                </Typography>\n                <Typography\n                  variant=\"inherit\"\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  {activeFeedback}\n                </Typography>\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Reply\n                </Typography>\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  fullWidth\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"feedbackReply\", {\n                    required: \"Reply Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                      message: \"Invalid Reply\",\n                    },\n                  })}\n                  error={Boolean(errors.feedbackReply)}\n                  helperText={errors.feedbackReply?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Reply Feedback\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Feedback Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete feedback from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  disabled={disable}\n                  onClick={removeFeedback}\n                >\n                  Delete Feedback\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn]}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminFeedbackManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/Appbar.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/DotColored.js",[],"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminFaqsManagement.js",["494","495","496","497","498","499","500"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminFaqsManagement() {\n  const classes = useStyle();\n\n  const [FAQs, setFAQs] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n    setValue,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    reset: reset1,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const [addUser, setAddUser] = useState(false);\n\n  const addOpen = () => {\n    setAddUser(true);\n    reset1();\n  };\n\n  const addClose = () => {\n    setAddUser(false);\n  };\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n    setActionId(\"\");\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n\n  function getAllFAQs() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewAllFAQs`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data === \"No Un-Responded FAQs Found\") setFAQs([]);\n        else setFAQs(...FAQs, response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function addFAQ(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/adminRouter/addFAQ`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFAQs([response.data, ...FAQs]);\n        setSnackData({\n          message: \"FAQ Added Successfully\",\n          type: \"success\",\n          open: true,\n        });\n        addClose();\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error FAQ Edit\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function editFAQ(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/updateFAQ${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFAQs([\n          ...FAQs.map((ele) =>\n            ele._id === actionId ? { _id: actionId, ...data } : ele\n          ),\n        ]);\n        setSnackData({\n          message: \"FAQ Edit Successful\",\n          type: \"success\",\n          open: true,\n        });\n        editClose();\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error FAQ Edit\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function removeFAQ() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteFAQ${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFAQs([...FAQs.filter((ele) => ele._id !== actionId)]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"FAQ Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting FAQ\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllFAQs();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        FAQs MANAGEMENT\n      </Typography>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        style={{ marginBottom: 20, marginRight: 10, alignSelf: \"flex-end\" }}\n        onClick={addOpen}\n        disableElevation\n      >\n        Add FAQ\n      </Button>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Questions\",\n              field: \"question\",\n              cellStyle: {\n                minWidth: 200,\n              },\n            },\n            {\n              title: \"Answers\",\n              field: \"answer\",\n              cellStyle: {\n                minWidth: 300,\n              },\n            },\n          ]}\n          data={FAQs}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Edit FAQ\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                setValue(\"question\", data.question);\n                setValue(\"answer\", data.answer);\n                editOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n            {\n              icon: \"delete\",\n              tooltip: \"Delete FAQ\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"FAQs\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={addUser}\n        onClose={addClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={addUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Create FAQ\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit1((data) => {\n                  addFAQ(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  label=\"Question\"\n                  fullWidth\n                  className={classes.formItem}\n                  InputLabelProps={{ shrink: true }}\n                  {...register1(\"question\", {\n                    required: \"Question Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9?_. -]{2,}$/m,\n                      message: \"Invalid Question\",\n                    },\n                  })}\n                  error={Boolean(errors1.question)}\n                  helperText={errors1.question?.message}\n                />\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  label=\"Answer\"\n                  fullWidth\n                  className={classes.formItem}\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register1(\"answer\", {\n                    required: \"Answer Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9%,_. -]{2,}$/m,\n                      message: \"Invalid Answer\",\n                    },\n                  })}\n                  error={Boolean(errors1.answer)}\n                  helperText={errors1.answer?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Add FAQ\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={addClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Edit FAQ\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  editFAQ(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  label=\"Question\"\n                  fullWidth\n                  className={classes.formItem}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"question\", {\n                    required: \"Question Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9?_. -]{2,}$/m,\n                      message: \"Invalid Question\",\n                    },\n                  })}\n                  error={Boolean(errors.question)}\n                  helperText={errors.question?.message}\n                />\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  label=\"Answer\"\n                  fullWidth\n                  className={classes.formItem}\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"answer\", {\n                    required: \"Answer Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9%,_. -]{2,}$/m,\n                      message: \"Invalid Answer\",\n                    },\n                  })}\n                  error={Boolean(errors.answer)}\n                  helperText={errors.answer?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Edit FAQ\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  &nbsp; Delete FAQ Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete FAQ from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  disabled={disable}\n                  onClick={removeFAQ}\n                >\n                  Delete FAQ\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn].join(\" \")}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminFaqsManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminChangelogManegement.js",["501","502","503","504","505","506","507","508"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminChangelogManagement() {\n  const classes = useStyle();\n\n  const [Changelog, setChangelog] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n    setActionId(\"\");\n  };\n\n  //   Delete User Modal methods\n\n  function getAllChangelog() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewChangeLog`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data);\n        setChangelog([response.data]);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function editChangelog(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var data1 = data.changelog.trim().split(\"\\n\");\n    console.log(data1, actionId);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/editChangelog${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { changeLog: data1 },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setChangelog([\n          {\n            ...Changelog,\n            changeLog: data1,\n          },\n        ]);\n        setSnackData({\n          message: \"Changelog Edit Successful\",\n          type: \"success\",\n          open: true,\n        });\n        editClose();\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Changelog Edit\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  useEffect(() => {\n    getAllChangelog();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        CHANGE LOG MANAGEMENT\n      </Typography>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Change Log\",\n              field: \"changelog\",\n              cellStyle: {\n                minWidth: 300,\n              },\n              render: (data) => (\n                <div>\n                  {data.changeLog.map((ele, i) => (\n                    <>\n                      <p key={\"item-\" + ele + Math.random()}>{ele}</p>\n                      <br />\n                    </>\n                  ))}\n                </div>\n              ),\n            },\n          ]}\n          data={Changelog}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Edit Changelog\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                var temp = \"\";\n                data.changeLog.forEach((ele) => {\n                  temp += ele + \"\\n\";\n                });\n                setValue(\"changelog\", temp);\n                editOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"Changelog\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Edit Changelog\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  editChangelog(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  label=\"Change Log\"\n                  fullWidth\n                  rows={16}\n                  className={classes.formItem}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"changelog\", {\n                    required: \"Changelog Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9?_. -]{10,}$/m,\n                      message: \"Invalid Changelog\",\n                    },\n                  })}\n                  error={Boolean(errors.changelog)}\n                  helperText={errors.changelog?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Edit Changelog\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminChangelogManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminVideosManagement.js",["509","510","511","512","513","514","515","516","517","518","519","520"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminVideosManagement() {\n  const classes = useStyle();\n\n  const [SystemVideos, setSystemVideos] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n    setValue,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    reset: reset1,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const [addUser, setAddUser] = useState(false);\n  const [OBJid, setOBJid] = useState(false);\n\n  const addOpen = () => {\n    setAddUser(true);\n    reset1();\n  };\n\n  const addClose = () => {\n    setAddUser(false);\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n\n  function getAllSystemVideos() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewVideos`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data);\n        if (response.data === \"No  System Videos Found\") setSystemVideos([]);\n        else setSystemVideos(response.data.systemVideo);\n        setOBJid(response.data._id);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function addFAQ(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/addSystemVideos${OBJid}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { title: data.question, URL: data.answer },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setSystemVideos([\n          { title: data.question, URL: data.answer },\n          ...SystemVideos,\n        ]);\n        setSnackData({\n          message: \"Video Added Successfully\",\n          type: \"success\",\n          open: true,\n        });\n        addClose();\n        setDisable(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error AddingVideo\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function removeFAQ() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteSystemVideos${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setSystemVideos([\n          ...SystemVideos.filter((ele) => ele._id !== actionId),\n        ]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Video Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting Video\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllSystemVideos();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        SYSTEM VIDEOS MANAGEMENT\n      </Typography>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        style={{ marginBottom: 20, marginRight: 10, alignSelf: \"flex-end\" }}\n        onClick={addOpen}\n        disableElevation\n      >\n        Add Video\n      </Button>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Tile\",\n              field: \"title\",\n            },\n            {\n              title: \"Video URL\",\n              field: \"URL\",\n            },\n          ]}\n          data={SystemVideos}\n          actions={[\n            {\n              icon: \"delete\",\n              tooltip: \"Delete FAQ\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"System Videos\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={addUser}\n        onClose={addClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={addUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Add System Video\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit1((data) => {\n                  addFAQ(data);\n                })}\n              >\n                <TextField\n                  variant={\"outlined\"}\n                  label=\"Title\"\n                  fullWidth\n                  className={classes.formItem}\n                  InputLabelProps={{ shrink: true }}\n                  {...register1(\"question\", {\n                    required: \"Title Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9 -?]{2,}$/m,\n                      message: \"Invalid Title\",\n                    },\n                  })}\n                  error={Boolean(errors1.question)}\n                  helperText={errors1.question?.message}\n                />\n                <TextField\n                  variant={\"outlined\"}\n                  label=\"Youtube URL\"\n                  fullWidth\n                  className={classes.formItem}\n                  InputLabelProps={{ shrink: true }}\n                  {...register1(\"answer\", {\n                    required: \"URL Required\",\n                    pattern: {\n                      value:\n                        /^(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.be)\\/.+$/,\n                      message: \"Invalid URL\",\n                    },\n                  })}\n                  error={Boolean(errors1.answer)}\n                  helperText={errors1.answer?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Add Video\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={addClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  &nbsp; Delete Video Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete Video from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  disabled={disable}\n                  onClick={removeFAQ}\n                >\n                  Delete Video\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn].join(\" \")}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminVideosManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js",["521","522","523","524","525","526","527","528"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  color: {\n    backgroundColor: \"#F2F8F8\",\n  },\n\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2),\n  },\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    height: \"100%\",\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  const classes = useStyles();\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              forgetPassword(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify Email\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 1:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              verifyOTP(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"OTP\"}\n              name=\"otp\"\n              className={classes.inputFeild}\n              {...register1(\"otp\", {\n                required: \"OTP required\",\n                pattern: {\n                  value: /^[0-9]{5}$/,\n                  message: \"Invalid OTP\",\n                },\n              })}\n              error={Boolean(errors1.otp)}\n              helperText={errors1.otp?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify OTP\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 2:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit2((data) => {\n              updatePassword(data);\n            })}\n            className={classes.passwordSection}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"New Password\"}\n              className={classes.inputFeild}\n              name=\"password\"\n              {...register2(\"password\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors2.password)}\n              helperText={errors2.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Confirm Password\"}\n              className={classes.inputFeild}\n              name=\"confirmPassword\"\n              {...register2(\"confirmPassword\", {\n                required: \"Confirm Password Required\",\n                validate: (value) =>\n                  value === password.current || \"Passwords do not match\",\n              })}\n              type={\"password\"}\n              error={Boolean(errors2.confirmPassword)}\n              helperText={errors2.confirmPassword?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              type=\"submit\"\n              size=\"medium\"\n              disabled={disable}\n              className={classes.button}\n            >\n              Update Password {disable ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register: register2,\n    formState: { errors: errors2 },\n    handleSubmit: handleSubmit2,\n    watch,\n    setValue: setValue1,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const history = useHistory();\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [username, setUsername] = useState(\"\");\n\n  function forgetPassword(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/forgetPassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        if (response.data.message == \"OTP Send to Your Email\") {\n          handleNext();\n          setUsername(response.data.data[0].username);\n          setDisable(false);\n        } else {\n          setValue(\"userEmail\", \"\");\n          setDisable(false);\n          setSnackData({\n            message: \"Error Verifying Email\",\n            type: \"error\",\n            open: true,\n          });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function verifyOTP(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/verifyOTP`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data == \"OTP Matched\") {\n          handleNext();\n          setDisable(false);\n        } else {\n          setValue(\"otp\", \"\");\n          setSnackData({\n            message: \"OTP Not Matched\",\n            type: \"error\",\n            open: true,\n          });\n          setDisable(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function updatePassword(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/updatePassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        ...data,\n        username: username,\n      },\n    };\n    console.log({\n      ...data,\n      username: username,\n    });\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"Invalid Password\") {\n          setSnackData({\n            message: \"Password Updated Succesfully\",\n            type: \"success\",\n            open: true,\n          });\n          setValue1(\"password\", \"\");\n          setValue1(\"confirmPassword\", \"\");\n          setDisable(false);\n          setTimeout(() => {\n            history.push(\"/signin\");\n          }, 5000);\n        } else {\n          setSnackData({\n            message: \"Error Updating Password\",\n            type: \"error\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setDisable(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Stepper\n        activeStep={activeStep}\n        orientation=\"vertical\"\n        classes={{\n          root: classes.color,\n        }}\n      >\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent className={classes.content}>\n              <Typography>{getStepContent(index)}</Typography>\n\n              <Link\n                to=\"/signin\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#015A59\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                Sign In?\n              </Link>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPasswordTemplate.js",["529","530","531","532","533","534","535","536","537","538","539","540","541","542"],"import {\n  Box,\n  makeStyles,\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  FaFacebookF as Facebook,\n  FaGoogle as Google,\n  FaTwitter as Twitter,\n  FaGithub as GitHub,\n} from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport Progress from \"./ButtonLoader\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport SignInImage from \"./img/signIn.svg\";\nimport ForgetPassword from \"./ForgetPassword\";\n\nconst useStyles = makeStyles((theme) => ({\n  imgContainer: {\n    backgroundImage:\n      \"radial-gradient(50% 50% at 50% 50%, rgba(127, 191, 191, 0.41) 0%, #82C2C2 100%)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingBottom: theme.spacing(5),\n    },\n    paddingTop: theme.spacing(5),\n    [theme.breakpoints.up(\"md\")]: {\n      height: \"100%\",\n      justifyContent: \"flex-start\",\n    },\n  },\n  formContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: theme.spacing(5),\n    height: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n  },\n  signupImage: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    transform: \"scale(0.7)\",\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(3),\n  },\n  btnGroup: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n    },\n  },\n  signupBtn: {\n    backgroundImage: \"linear-gradient(92.61deg, #0067B1 0%, #008080 100%)\",\n    boxShadow: \"3px 4px 8px 1px rgba(0, 0, 0, 0.15)\",\n    color: theme.palette.light.main,\n  },\n  iconButton: {\n    backgroundColor: theme.palette.primary.light,\n    marginRight: theme.spacing(1),\n  },\n  icon: {\n    border: 0,\n    color: theme.palette.primary.main,\n    fontSize: theme.iconBtn.size,\n  },\n  colorDark: {\n    color: theme.palette.dark.main,\n  },\n  tagline: {\n    color: theme.palette.dark.main,\n    textAlign: \"center\",\n  },\n  socialGroup: {\n    minWidth: \"40%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: \"0%\",\n      marginTop: theme.spacing(2),\n    },\n  },\n  loginLink: {\n    alignSelf: \"flex-start\",\n    marginTop: theme.spacing(3),\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n  btnGroupLeft: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  forgotLink: {\n    marginTop: theme.spacing(2),\n    alignSelf: \"flex-start\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  anchorTag: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction ForgetPasswordTemplate() {\n  const classes = useStyles();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const history = useHistory();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  function ForgetPasswordTemplate(data) {\n    console.log(data);\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/ForgetPasswordTemplate`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then((res) => {\n        if (res.data.message === \"Logged In Successfully\") {\n          localStorage.setItem(\"token\", res.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n          history.push(\"/app/blogTitle\");\n        } else {\n          setSnackData({\n            message: \"Invalid Username or Password\",\n            type: \"error\",\n            open: true,\n          });\n          setDisable(false);\n        }\n        console.log(res);\n      })\n      .catch(function (error) {\n        console.log(\"Data Not Sent to Server!\");\n        setSnackData({\n          message: \"Something went wrong please try again\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  return (\n    <SignInUpTemplate>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Grid item xs={12} md={6}>\n        <Box className={classes.imgContainer}>\n          <Typography\n            variant={\"h4\"}\n            component={\"h1\"}\n            gutterBottom\n            className={classes.heading}\n          >\n            Forgot Password\n          </Typography>\n          <Typography\n            variant={\"body2\"}\n            component={\"p\"}\n            className={classes.tagline}\n          >\n            Reset your password and start working now\n          </Typography>\n          <img src={SignInImage} alt=\"Signup\" className={classes.signupImage} />\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            height: \"100%\",\n          }}\n        >\n          <ForgetPassword />\n        </div>\n      </Grid>\n    </SignInUpTemplate>\n  );\n}\n\nexport default ForgetPasswordTemplate;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ImageCrawler.js",["543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"import {\n  makeStyles,\n  TextField,\n  Button,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport Snackbar from \"./Snackbar\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { saveAs } from \"file-saver\";\nimport {\n  FiZap as OutputIcon,\n  FiClock as HistoryIcon,\n  FiClipboard as ClipboardIcon,\n  FiStar as FavouriteIcon,\n  FiFlag as FlagIcon,\n  FiTrash as DeleteIcon,\n} from \"react-icons/fi\";\nimport PropTypes from \"prop-types\";\nimport { FiCheckSquare } from \"react-icons/fi\";\nimport { useEffect, useState } from \"react\";\nimport AppTemplate from \"./AppTemplate\";\nimport PageHead from \"./PageHead\";\nimport PageFoot from \"./PageFoot\";\nimport { MdDelete, MdEdit, MdFavorite } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n  root: {\n    maxWidth: 400,\n    boxShadow: \"none\",\n    border: \"1px solid #ccc\",\n    margin: \"20px\",\n    flexGrow: 1,\n    marginLeft: \"0px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginRight: \"0px\",\n    },\n  },\n  media: {\n    height: 300,\n    minWidth: 300,\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 600,\n    },\n  },\n  inputForm: {\n    width: \"75%\",\n    borderRight: \"1px solid #ccc\",\n    minHeight: \"500px\",\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(3),\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      borderRight: `none`,\n      width: \"100%\",\n    },\n  },\n  textFeild: {\n    backgroundColor: \"#fff\",\n    maxWidth: \"500px\",\n  },\n  formItem: {\n    marginBottom: theme.spacing(3),\n  },\n  btnMain: {\n    backgroundImage: \"linear-gradient(93.12deg, #0067B1 1.28%, #008080 99.48%)\",\n    color: theme.palette.light.main,\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  outputContainer: {\n    maxHeight: \"172vh\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      flexDirection: \"row\",\n    },\n  },\n  imagesCards: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   flexDirection: \"column\",\n    //   alignItems: \"center\",\n    // },\n  },\n  cardsContainer: {\n    // overflowY: \"scroll\",\n    width: \"100%\",\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(3),\n  },\n  tabCard: {\n    width: \"100%\",\n    backgroundColor: \"#F3F8FA\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey.main}`,\n  },\n  TabIconContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ml1: {\n    marginLeft: theme.spacing(1),\n  },\n  tabIcon: {\n    fontSize: \"16px\",\n  },\n  outputCard: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.grey.dark}`,\n  },\n  cardTime: {\n    color: theme.palette.grey.dark,\n  },\n  cardResult: {\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n  },\n  btnsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cardBtn: {\n    borderRadius: theme.shape.borderRadius,\n    transform: \"scale(0.8)\",\n    backgroundColor: theme.palette.grey.main,\n    padding: theme.spacing(0.7),\n  },\n  historyText: {\n    color: theme.palette.dark.main,\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n\n  keywordList: {\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1.1),\n  },\n  keywordListItem: {\n    paddingTop: theme.spacing(1),\n    color: theme.palette.dark.main,\n  },\n}));\n\nfunction ImageCrawler() {\n  const classes = useStyles();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n  } = useForm();\n\n  const [actionDisable, setActionDisable] = useState(false);\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [images, setImages] = useState([]);\n  const [favimages, setfavimages] = useState([]);\n\n  const [favAction, setFavAction] = useState(false);\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n  function getFavImages(data) {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewAllImages${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setfavimages(response.data);\n      })\n      .catch(function (error) {\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting Favourites Images\",\n          open: false,\n        });\n      });\n  }\n\n  function getImages(data) {\n    setSnackData({ ...snackData, open: false });\n    setActionDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/getUnsplashImages`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setImages([...response.data]);\n        setActionDisable(false);\n      })\n      .catch(function (error) {\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting images\",\n          open: false,\n        });\n        setActionDisable(false);\n      });\n  }\n\n  function removeToFavourites(id) {\n    setFavAction(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteImage${id}/user${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setfavimages([...favimages.filter((ele) => ele._id != id)]);\n        setSnackData({\n          type: \"success\",\n          message: \"Deleted to Favourites\",\n          open: false,\n        });\n      })\n      .catch(function (error) {\n        setFavAction(true);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting from Favourites\",\n          open: false,\n        });\n      });\n  }\n  function addToFavourites(link) {\n    setFavAction(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/starImage${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { imagePath: link },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setfavimages([response.data, ...favimages]);\n        setFavAction(false);\n      })\n      .catch(function (error) {\n        setFavAction(true);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Adding to Favourites\",\n          open: false,\n        });\n        setFavAction(false);\n      });\n  }\n  useEffect(() => {\n    getFavImages();\n  }, []);\n\n  const downloadImage = (url) => {\n    saveAs(url, \"image.jpg\"); // Put your image url here.\n  };\n\n  return (\n    <div>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <PageHead title={\"Image Crawler\"} />\n      <div className={classes.container}>\n        <div className={classes.inputForm}>\n          <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n            <form\n              noValidate\n              onSubmit={handleSubmit1((data) => {\n                getImages(data);\n              })}\n              style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}\n            >\n              <TextField\n                label={\"Keyword\"}\n                variant={\"outlined\"}\n                fullWidth\n                className={classes.textFeild}\n                InputLabelProps={{ shrink: true }}\n                {...register1(\"search\", {\n                  required: \"Keyword Required\",\n                  pattern: {\n                    value: /^[a-zA-Z ]{3,}$/m,\n                    message: \"Invalid Keyword\",\n                  },\n                })}\n                error={Boolean(errors1.search)}\n                helperText={errors1.search?.message}\n              />\n              <div className={classes.dFlexBetween}>\n                <Button\n                  style={{\n                    marginLeft: \"10px\",\n                    margin: \"10px\",\n                    paddingTop: \"15px\",\n                    paddingBottom: \"15px\",\n                    paddingLeft: \"30px\",\n                    paddingRight: \"30px\",\n                  }}\n                  variant={\"contained\"}\n                  type=\"submit\"\n                  disableElevation\n                  disabled={actionDisable}\n                  color={\"primary\"}\n                >\n                  Search\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n              </div>\n            </form>\n          </div>\n          <div className={classes.imagesCards}>\n            {!images.length > 0 ? (\n              <h4>No Images To Show</h4>\n            ) : (\n              images.map((ele, i) => (\n                <Card key={\"picture-\" + i} className={classes.root}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      image={ele}\n                      title=\"Contemplative Reptile\"\n                    />\n                  </CardActionArea>\n                  <CardActions\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      paddingLeft: 20,\n                      paddingRight: 20,\n                    }}\n                  >\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick={() => {\n                        downloadImage(ele);\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <div>\n                      <IconButton onClick={() => addToFavourites(ele)}>\n                        <MdFavorite />\n                      </IconButton>\n                      <Link\n                        to={`imageEditor`}\n                        style={{\n                          margin: 0,\n                          padding: 0,\n                          textDecoration: \"none\",\n                        }}\n                      >\n                        <IconButton\n                          onClick={() => localStorage.setItem(\"imageEdit\", ele)}\n                        >\n                          <MdEdit />\n                        </IconButton>\n                      </Link>\n                    </div>\n                  </CardActions>\n                </Card>\n              ))\n            )}\n          </div>\n        </div>\n        <div className={classes.outputContainer}>\n          <div className={classes.cardsContainer}>\n            <h4\n              style={{\n                textAlign: \"start\",\n                marginTop: \"20px\",\n                width: \"100%\",\n                marginBottom: \"20px\",\n              }}\n            >\n              Favoruites\n              {console.log(favimages)}\n            </h4>\n            {!favimages.length > 0 ? (\n              <h6 style={{ width: \"100%\", marginBottom: \"30px\" }}>\n                No Images To Show\n              </h6>\n            ) : (\n              favimages.map((ele, i) => (\n                <Card key={\"picture-favoruite-\" + i} className={classes.root}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      image={ele.imagePath}\n                      title=\"Contemplative Reptile\"\n                    />\n                  </CardActionArea>\n                  <CardActions\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      paddingLeft: 20,\n                      paddingRight: 20,\n                    }}\n                  >\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick={() => {\n                        downloadImage(ele.imagePath);\n                      }}\n                    >\n                      Download\n                    </Button>\n\n                    <IconButton onClick={() => removeToFavourites(ele._id)}>\n                      <MdDelete />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n      <PageFoot\n        nextLink=\"/aiBLog\"\n        backLink=\"/blogOutline\"\n        pageNo=\"2\"\n        backDisabled={true}\n      />\n    </div>\n  );\n}\nexport default ImageCrawler;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ImageEditor.js",["561","562","563","564"],"import { Button, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport FilerobotImageEditor, {\n  TABS,\n  TOOLS,\n} from \"react-filerobot-image-editor\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ImageEditor() {\n  const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n  const openImgEditor = () => {\n    setIsImgEditorShown(true);\n  };\n\n  const closeImgEditor = () => {\n    setIsImgEditorShown(false);\n  };\n  const [download, setDownload] = useState(false);\n  const [url, seturl] = useState(\" \");\n  const [base64, setbase64] = useState(\"\");\n  useEffect(() => {\n    seturl(localStorage.getItem(\"imageEdit\"));\n  }, []);\n  return (\n    <div\n      style={{\n        minHeight: \"90vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"start\",\n        justifyContent: \"center\",\n      }}\n    >\n      {download ? (\n        <Button\n          variant=\"contained\"\n          href={base64}\n          download=\"EdittedImage\"\n          color=\"primary\"\n          disableElevation\n          style={{\n            transform: \"scale(0.9)\",\n          }}\n        >\n          Download\n        </Button>\n      ) : null}\n      <FilerobotImageEditor\n        source={url}\n        onSave={(editedImageObject, designState) => {\n          setbase64(editedImageObject.imageBase64);\n          setDownload(true);\n        }}\n        onClose={closeImgEditor}\n        annotationsCommon={{\n          fill: \"#ff0000\",\n        }}\n        Text={{ text: \"Filerobot...\" }}\n        Crop={{\n          presetsItems: [\n            {\n              titleKey: \"classicTv\",\n              descriptionKey: \"4:3\",\n              ratio: 4 / 3,\n              // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n            },\n            {\n              titleKey: \"cinemascope\",\n              descriptionKey: \"21:9\",\n              ratio: 21 / 9,\n              // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n            },\n          ],\n          presetsFolders: [\n            {\n              titleKey: \"socialMedia\", // will be translated into Social Media as backend contains this translation key\n              // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n              groups: [\n                {\n                  titleKey: \"facebook\",\n                  items: [\n                    {\n                      titleKey: \"profile\",\n                      width: 180,\n                      height: 180,\n                      descriptionKey: \"fbProfileSize\",\n                    },\n                    {\n                      titleKey: \"coverPhoto\",\n                      width: 820,\n                      height: 312,\n                      descriptionKey: \"fbCoverPhotoSize\",\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        }}\n        tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK, TABS.FILTERS]} // or {['Adjust', 'Annotate', 'Watermark']}\n        defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n        defaultToolId={TOOLS.TEXT} // or 'Text'\n      />\n    </div>\n  );\n}\n","/Users/devusama/Work/FYP_FrontEnd/src/components/Query.js",["565","566","567","568","569","570","571"],"import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  Typography,\n  IconButton,\n  CircularProgress,\n  alpha,\n  Modal,\n  Backdrop,\n  Fade,\n  Avatar,\n} from \"@material-ui/core\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState, useEffect } from \"react\";\nimport Snackbar from \"./Snackbar\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  ratingFeedbackHead: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  complaintCard: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    boxSizing: \"border-box\",\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    width: \"98.5%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95%\",\n      padding: theme.spacing(3),\n    },\n  },\n  catagoryHeading: {\n    fontSize: \"14px\",\n    marginBottom: theme.spacing(1),\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n\n  complaintHeading: {\n    color: theme.palette.dark.main,\n    fontSize: \"14px\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    backgroundImage: `linear-gradient(95.47deg, ${theme.palette.secondary.main} 0%,  ${theme.palette.primary.main} 100%)`,\n    color: theme.palette.light.main,\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  complainCategory: {\n    marginTop: theme.spacing(1),\n  },\n  content: {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    margin: theme.spacing(7),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2),\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginBottom: theme.spacing(4),\n  },\n  ratingFeedbackHead: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  ratingFeedbackCard: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    boxSizing: \"border-box\",\n    boxShadow: \"none\",\n    border: `1px solid ${theme.palette.primary.light}`,\n    width: \"98.5%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95%\",\n      padding: theme.spacing(3),\n    },\n  },\n  ratingHeading: {\n    fontSize: \"14px\",\n    marginBottom: theme.spacing(1),\n    fontWeight: \"bold\",\n    color: theme.palette.dark.main,\n  },\n  ratingStars: {\n    transform: \"scale(1.5)\",\n  },\n  feedbackHeading: {\n    color: theme.palette.dark.main,\n    fontSize: \"14px\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.light.main,\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  btn: {\n    marginTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n  ratingsFeedbacksHeading: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main,\n  },\n  editRatingsFeedbacksHeading: {\n    marginBottom: theme.spacing(4),\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n  },\n  ratingsFeedbacksContainer: {\n    maxWidth: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  feedbackCard: {\n    flexGrow: 1,\n    minHeight: \"200px\",\n    boxShadow: \"none\",\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n    border: `1px solid ${theme.palette.primary.light}`,\n  },\n  cardName: {\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n  },\n  cardRating: {\n    marginTop: theme.spacing(1),\n  },\n  cardFeedback: {\n    marginTop: theme.spacing(1),\n  },\n  cardTag: {\n    display: \"inline-block\",\n    fontWeight: \"bold\",\n    fontFamily: \"Cookie, cursive\",\n    fontSize: \"20px\",\n    marginTop: theme.spacing(2),\n    backgroundImage: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    backgroundSize: \"100%\",\n    WebkitBackgroundClip: \"text\",\n    MozBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\",\n    MozTextFillColor: \"transparent\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  displayFlexCenter: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  dangerHeading: {\n    marginLeft: theme.spacing(1),\n  },\n  contentPart1: {\n    marginBottom: theme.spacing(2),\n  },\n  reply: {\n    backgroundColor: \"#f7f7f7\",\n    marginTop: theme.spacing(2),\n  },\n  p2: {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction Query() {\n  const classes = useStyles();\n\n  const [actionID, setActionID] = useState(\"\");\n  const [disable, setDisable] = useState(false);\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const [myComplaints, setMyComplaints] = useState([]);\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const [actionDisable, setActionDisable] = useState(false);\n\n  //   Edit Complaint Modal methods\n  const [editComplaint, seteditComplaint] = useState(false);\n\n  const editOpen = () => {\n    seteditComplaint(true);\n  };\n\n  const editClose = () => {\n    seteditComplaint(false);\n  };\n\n  const [deleteComplaint, setdeleteComplaint] = useState(false);\n\n  const deleteOpen = () => {\n    setdeleteComplaint(true);\n  };\n\n  const deleteClose = () => {\n    setdeleteComplaint(false);\n  };\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  function getmyComplaints() {\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/userRouter/viewAllQueries${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        if (response.data !== \"No Queries Available.\")\n          setMyComplaints(response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          type: \"error\",\n          message: \"Error getting Queries\",\n          open: true,\n        });\n      });\n  }\n\n  function postComplaint(data) {\n    console.log(data);\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/postQuery${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        description: data.complaint,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints([response.data, ...myComplaints]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Query posted successfully\",\n          open: true,\n        });\n        reset();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error posting Query\",\n          open: true,\n        });\n      });\n  }\n\n  function updateComplaint(data) {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/userRouter/updateQuery${actionID}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        description: data.complaint,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints(\n          myComplaints.map((ele) =>\n            ele._id == actionID ? { ...ele, description: data.complaint } : ele\n          )\n        );\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Query updated successfully\",\n          open: true,\n        });\n        reset();\n        editClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error updating Query\",\n          open: true,\n        });\n      });\n  }\n\n  function removeComplaint() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setActionDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/userRouter/deleteQuery${actionID}/user${\n        JSON.parse(localStorage.getItem(\"user\"))._id\n      }`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setMyComplaints(myComplaints.filter((ele) => ele._id !== actionID));\n        setActionDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Query Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setActionDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting Query\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getmyComplaints();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography variant=\"h6\" component={\"h1\"} className={classes.heading}>\n        QUERY AND RESPONSES\n      </Typography>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingFeedbackHead}\n      >\n        Your Query\n      </Typography>\n      <Card className={classes.complaintCard}>\n        <Typography\n          variant=\"h6\"\n          component={\"h6\"}\n          className={classes.complaintHeading}\n        >\n          Query Detail\n        </Typography>\n        <form\n          noValidate\n          onSubmit={handleSubmit((data) => {\n            postComplaint(data);\n          })}\n        >\n          <TextField\n            variant={\"outlined\"}\n            multiline\n            fullWidth\n            rows={8}\n            InputLabelProps={{ shrink: true }}\n            {...register(\"complaint\", {\n              required: \"Complaint Detail Required\",\n              pattern: {\n                value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                message: \"Invalid ComplaintDetail\",\n              },\n            })}\n            error={Boolean(errors.complaint)}\n            helperText={errors.complaint?.message}\n          />\n          <div className={classes.dFlexBetween}>\n            <Button\n              className={classes.submitBtn}\n              variant={\"contained\"}\n              type=\"submit\"\n              disableElevation\n              disabled={disable}\n              color={\"primary\"}\n            >\n              Submit Query\n              {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n            </Button>\n          </div>\n        </form>\n      </Card>\n      <Typography\n        variant=\"h6\"\n        component={\"h2\"}\n        className={classes.ratingsFeedbacksHeading}\n      >\n        Your Queries\n      </Typography>\n      <div className={classes.ratingsFeedbacksContainer}>\n        {myComplaints.length > 0 ? (\n          myComplaints.map((ele, i) => {\n            return (\n              <Card className={classes.feedbackCard} key={\"complaint-\" + i}>\n                <div className={classes.dFlexBetween}>\n                  <div>\n                    <Typography\n                      variant=\"h6\"\n                      component={\"h3\"}\n                      className={classes.cardName}\n                    >\n                      {ele.userFullName}\n                    </Typography>\n                  </div>\n                  <div>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"edit\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        setValue(\"complaint\", ele.description);\n                        editOpen();\n                      }}\n                    >\n                      <MdEdit color=\"primary\" />\n                    </IconButton>\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"delete\"\n                      onClick={() => {\n                        setActionID(ele._id);\n                        deleteOpen();\n                      }}\n                    >\n                      <MdDelete />\n                    </IconButton>\n                  </div>\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component=\"h6\"\n                  className={classes.cardFeedback}\n                >\n                  {ele.description.split(\"\\n\").map((item, i) => (\n                    <p key={\"ele-\" + i}>{item}</p>\n                  ))}\n                </Typography>\n                <div className={classes.reply}>\n                  {ele.reply ? (\n                    <div className={classes.p2}>\n                      <Typography\n                        variant=\"body1\"\n                        component={\"p\"}\n                        color=\"primary\"\n                        className={classes.cardFeedback}\n                      >\n                        Admin\n                      </Typography>\n                      <Typography variant=\"body1\" component={\"p\"}>\n                        {ele.reply}\n                      </Typography>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  component={\"p\"}\n                  className={classes.cardTag}\n                >\n                  Powered By IntelliGenie\n                </Typography>\n              </Card>\n            );\n          })\n        ) : (\n          <div className={classes.displayFlexCenter}>\n            {pageLoading ? (\n              <CircularProgress size={30} color=\"primary\" />\n            ) : (\n              <p>No Queries To Show</p>\n            )}\n          </div>\n        )}\n      </div>\n      <Modal\n        aria-labelledby=\"Add Sub User\"\n        aria-describedby=\"Add Account of a sub user\"\n        className={classes.modal}\n        open={editComplaint}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 300,\n        }}\n        style={{\n          overflowY: \"auto\",\n        }}\n      >\n        <Fade in={editComplaint}>\n          <div className={classes.paper}>\n            <Typography\n              variant=\"h6\"\n              component={\"h2\"}\n              className={classes.editRatingsFeedbacksHeading}\n            >\n              Edit Query\n            </Typography>\n\n            <Typography\n              variant=\"h6\"\n              component={\"h6\"}\n              className={classes.complaintHeading}\n            >\n              Query Detail\n            </Typography>\n            <form\n              noValidate\n              onSubmit={handleSubmit1((data) => {\n                updateComplaint(data);\n              })}\n            >\n              <TextField\n                variant={\"outlined\"}\n                multiline\n                fullWidth\n                rows={8}\n                InputLabelProps={{ shrink: true }}\n                {...register1(\"complaint\", {\n                  required: \"Complaint Detail Required\",\n                  pattern: {\n                    value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                    message: \"Invalid Complaint Detail\",\n                  },\n                })}\n                error={Boolean(errors1.complaint)}\n                helperText={errors1.complaint?.message}\n              />\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={classes.submitBtn}\n                  variant={\"contained\"}\n                  type=\"submit\"\n                  disableElevation\n                  disabled={actionDisable}\n                  color={\"primary\"}\n                >\n                  Edit Query\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={classes.btn}\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={editClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteComplaint}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteComplaint}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Query Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete query from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  color=\"red\"\n                  disabled={actionDisable}\n                  onClick={removeComplaint}\n                >\n                  Delete Query\n                  {actionDisable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn]}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Query;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/AdminQueryManagement.js",["572","573","574"],"import {\n  Avatar,\n  Typography,\n  Button,\n  Modal,\n  Fade,\n  Backdrop,\n  TextField,\n  alpha,\n  Chip,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { MdDelete } from \"react-icons/md\";\nimport Snackbar from \"./Snackbar\";\nimport {\n  FiX as NotRespondedIcon,\n  FiCheck as RespondedIcon,\n} from \"react-icons/fi\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyle = makeStyles((theme) => ({\n  notResponded: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n  },\n  responded: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.light.main,\n  },\n  icon: {\n    color: theme.palette.light.main,\n  },\n  deleteBtn: {\n    backgroundColor: theme.palette.danger.main,\n    boxShadow: \"none\",\n    display: \"block\",\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n  },\n  btnGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  deleteIcon: {\n    backgroundColor: theme.palette.danger.main,\n  },\n  dangerHeading: {\n    color: theme.palette.danger.main,\n    marginLeft: theme.spacing(3),\n    fontWeight: \"bold\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.main,\n    textAlign: \"center\",\n    marginBottom: theme.spacing(5),\n  },\n  content: {\n    width: \"98.5%\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    marginTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: theme.spacing(7),\n      width: \"100%\",\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(2.5),\n      width: \"90%\",\n    },\n  },\n  contentContainer: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    width: \"600px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(5),\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n  modalForm: {\n    width: \"100%\",\n  },\n  formItem: {\n    marginTop: theme.spacing(3),\n  },\n  ml3: {\n    marginLeft: theme.spacing(3),\n  },\n  btn: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n    alignSelf: \"flex-end\",\n  },\n  tableContainer: {\n    width: \"98.5%\",\n  },\n  dFlexBetween: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"start\",\n  },\n  btnDanger: {\n    backgroundColor: theme.palette.danger.main,\n    color: theme.palette.light.main,\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.danger.main, 0.8),\n    },\n    \"&:disable\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.8),\n    },\n  },\n}));\n\nfunction AdminQueryManagement() {\n  const classes = useStyle();\n\n  const [feedbacks, setFeedbacks] = useState([]);\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [actionId, setActionId] = useState(\"\");\n  const [activeFeedback, setActiveFeedback] = useState(\"\");\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  //   Edit User Modal methods\n  const [editUser, setEditUser] = useState(false);\n\n  const editOpen = () => {\n    setEditUser(true);\n    reset();\n  };\n\n  const editClose = () => {\n    setEditUser(false);\n    setActionId(\"\");\n    setActiveFeedback(\"\");\n  };\n\n  //   Delete User Modal methods\n  const [deleteUser, setDeleteUser] = useState(false);\n\n  const deleteOpen = () => {\n    setDeleteUser(true);\n  };\n\n  const deleteClose = () => {\n    setDeleteUser(false);\n  };\n\n  function getAllComplaints() {\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"get\",\n      url: `${BACKEND}/adminRouter/viewAllQueries`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data === \"No Un-Responded Complaints Found\")\n          setFeedbacks([]);\n        else setFeedbacks(...feedbacks, response.data);\n        setPageLoading(false);\n      })\n      .catch(function (error) {\n        setPageLoading(false);\n        setSnackData({\n          message: \"Error Loading Data\",\n          type: \"error\",\n          open: true,\n        });\n      });\n  }\n\n  function replyComlaint(data) {\n    setSnackData({ ...snackData, open: false });\n    setDisable(true);\n    console.log(disable);\n    var config = {\n      method: \"put\",\n      url: `${BACKEND}/adminRouter/respondToQuery${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: { reply: data.feedbackReply },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setFeedbacks([\n          ...feedbacks.map((ele) =>\n            ele._id === actionId ? { ...ele, isResponded: true } : ele\n          ),\n        ]);\n        setSnackData({\n          message: \"Reply Sent Successfully\",\n          type: \"success\",\n          open: true,\n        });\n        editClose();\n        setDisable(false);\n        console.log(disable);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Replying Query\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  function removeFeedback() {\n    setSnackData({\n      type: \"error\",\n      message: \"\",\n      open: false,\n    });\n    setDisable(true);\n    var config = {\n      method: \"delete\",\n      url: `${BACKEND}/adminRouter/deleteQuery${actionId}`,\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(feedbacks.filter((ele) => ele._id !== actionId));\n        setFeedbacks([...feedbacks.filter((ele) => ele._id !== actionId)]);\n        setDisable(false);\n        setSnackData({\n          type: \"success\",\n          message: \"Query Deleted successfully\",\n          open: true,\n        });\n        deleteClose();\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n        setSnackData({\n          type: \"error\",\n          message: \"Error Deleting Query\",\n          open: true,\n        });\n      });\n  }\n\n  useEffect(() => {\n    getAllComplaints();\n  }, []);\n\n  return (\n    <div className={classes.content}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Typography\n        variant={\"h5\"}\n        component={\"h2\"}\n        className={classes.heading}\n        gutterBottom\n      >\n        QUERY MANAGEMENT\n      </Typography>\n      <div className={classes.tableContainer}>\n        <MaterialTable\n          style={{ boxShadow: \"none\", border: \"1px solid \t#E8E8E8\" }}\n          isLoading={pageLoading}\n          title=\"\"\n          columns={[\n            {\n              title: \"Name\",\n              field: \"userFullName\",\n            },\n            {\n              title: \"Username\",\n              field: \"username\",\n            },\n            {\n              title: \"Query\",\n              field: \"description\",\n              type: \"String\",\n              cellStyle: {\n                width: \"40%\",\n                minWidth: \"400px\",\n              },\n            },\n            {\n              title: \"Response\",\n              field: \"isResponded\",\n              render: (rowData) =>\n                rowData.isResponded ? (\n                  <Chip\n                    label=\"Responded\"\n                    className={classes.responded}\n                    icon={<RespondedIcon className={classes.icon} />}\n                  />\n                ) : (\n                  <Chip\n                    label=\"Not Responded\"\n                    className={classes.notResponded}\n                    icon={<NotRespondedIcon className={classes.icon} />}\n                  />\n                ),\n            },\n          ]}\n          data={feedbacks}\n          actions={[\n            {\n              icon: \"edit\",\n              tooltip: \"Reply Query\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                setActiveFeedback(data.description);\n                editOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n            {\n              icon: \"delete\",\n              tooltip: \"Delete Query\",\n              onClick: (e, data) => {\n                setActionId(data._id);\n                deleteOpen();\n              },\n              iconProps: {\n                style: { color: \"#7fbfbf\" },\n              },\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            exportFileName: \"Queries\",\n            exportAllData: true,\n            emptyRowsWhenPaging: false,\n            headerStyle: {\n              backgroundColor: \"#7FBFBF\",\n              color: \"#444\",\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            },\n            tableLayout: \"auto\",\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"Edit Sub User Modal\"\n        aria-describedby=\"Edit sub user detail and update them\"\n        className={classes.modal}\n        open={editUser}\n        onClose={editClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={editUser}>\n          <div className={classes.paper}>\n            <Typography\n              variant={\"h5\"}\n              color={\"primary\"}\n              id=\"transition-modal-title\"\n            >\n              Reply Query\n            </Typography>\n            <div className={classes.modalForm}>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  replyComlaint(data);\n                })}\n              >\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Query\n                </Typography>\n                <Typography\n                  variant=\"inherit\"\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  {activeFeedback}\n                </Typography>\n                <Typography\n                  variant={\"h6\"}\n                  color={\"primary\"}\n                  id=\"transition-modal-title\"\n                  className={classes.formItem}\n                >\n                  Reply\n                </Typography>\n                <TextField\n                  variant={\"outlined\"}\n                  multiline\n                  fullWidth\n                  rows={8}\n                  InputLabelProps={{ shrink: true }}\n                  {...register(\"feedbackReply\", {\n                    required: \"Reply Required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9_. -]{2,}$/m,\n                      message: \"Invalid Reply\",\n                    },\n                  })}\n                  error={Boolean(errors.feedbackReply)}\n                  helperText={errors.feedbackReply?.message}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignContent: \"flex-end\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <Button\n                    variant={\"contained\"}\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={disable}\n                    disableElevation\n                  >\n                    Reply Query\n                    {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={editClose}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <Modal\n        aria-labelledby=\"Delete Sub User\"\n        aria-describedby=\"Delete Account of a sub user\"\n        className={classes.modal}\n        open={deleteUser}\n        onClose={deleteClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={deleteUser}>\n          <div className={classes.paper}>\n            <div className={classes.modalForm}>\n              <div className={classes.displayFlex}>\n                <Avatar className={classes.deleteIcon}>\n                  <MdDelete />\n                </Avatar>\n                <Typography\n                  variant={\"h6\"}\n                  component={\"h3\"}\n                  className={classes.dangerHeading}\n                >\n                  Delete Query Permanently\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.contentBox}>\n              <Typography variant=\"body2\" className={classes.contentPart1}>\n                This will permenantly delete Query from IntelliGenie.\n              </Typography>\n              <div className={classes.dFlexBetween}>\n                <Button\n                  className={[classes.btn, classes.btnDanger].join(\" \")}\n                  variant=\"contained\"\n                  disableElevation\n                  disabled={disable}\n                  onClick={removeFeedback}\n                >\n                  Delete Query\n                  {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n                </Button>\n                <Button\n                  className={[classes.ml3, classes.btn].join(\" \")}\n                  variant={\"contained\"}\n                  onClick={deleteClose}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdminQueryManagement;\n","/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPasswordAdmin.js",["575","576","577","578","579","580","581","582","583"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  color: {\n    backgroundColor: \"#F2F8F8\",\n  },\n\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2),\n  },\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    height: \"100%\",\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPasswordAdmin() {\n  const classes = useStyles();\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              forgetPassword(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify Email\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 1:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              verifyOTP(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"OTP\"}\n              name=\"otp\"\n              className={classes.inputFeild}\n              {...register1(\"otp\", {\n                required: \"OTP required\",\n                pattern: {\n                  value: /^[0-9]{5}$/,\n                  message: \"Invalid OTP\",\n                },\n              })}\n              error={Boolean(errors1.otp)}\n              helperText={errors1.otp?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify OTP\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 2:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit2((data) => {\n              updatePassword(data);\n            })}\n            className={classes.passwordSection}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"New Password\"}\n              className={classes.inputFeild}\n              name=\"password\"\n              {...register2(\"password\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors2.password)}\n              helperText={errors2.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Confirm Password\"}\n              className={classes.inputFeild}\n              name=\"confirmPassword\"\n              {...register2(\"confirmPassword\", {\n                required: \"Confirm Password Required\",\n                validate: (value) =>\n                  value === password.current || \"Passwords do not match\",\n              })}\n              type={\"password\"}\n              error={Boolean(errors2.confirmPassword)}\n              helperText={errors2.confirmPassword?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              type=\"submit\"\n              size=\"medium\"\n              disabled={disable}\n              className={classes.button}\n            >\n              Update Password {disable ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register: register2,\n    formState: { errors: errors2 },\n    handleSubmit: handleSubmit2,\n    watch,\n    setValue: setValue1,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const history = useHistory();\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [username, setUsername] = useState(\"\");\n\n  function forgetPassword(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/adminRouter/forgetPassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        if (response.data.message == \"OTP Send to Your Email\") {\n          handleNext();\n          console.log(response.data.data[0].username);\n          setUsername(response.data.data[0].username);\n          setDisable(false);\n        } else {\n          setValue(\"userEmail\", \"\");\n          setDisable(false);\n          setSnackData({\n            message: \"Error Verifying Email\",\n            type: \"error\",\n            open: true,\n          });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function verifyOTP(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/adminRouter/verifyOTP`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data == \"OTP Matched\") {\n          handleNext();\n          setDisable(false);\n        } else {\n          setValue(\"otp\", \"\");\n          setSnackData({\n            message: \"OTP Not Matched\",\n            type: \"error\",\n            open: true,\n          });\n          setDisable(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function updatePassword(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/adminRouter/updatePassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        ...data,\n        username: username,\n      },\n    };\n    console.log({\n      ...data,\n      username: username,\n    });\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"Invalid Password\") {\n          setSnackData({\n            message: \"Password Updated Succesfully\",\n            type: \"success\",\n            open: true,\n          });\n          setValue1(\"password\", \"\");\n          setValue1(\"confirmPassword\", \"\");\n          setDisable(false);\n          setTimeout(() => {\n            history.push(\"/signin\");\n          }, 5000);\n        } else {\n          setSnackData({\n            message: \"Error Updating Password\",\n            type: \"error\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setDisable(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Stepper\n        activeStep={activeStep}\n        orientation=\"vertical\"\n        classes={{\n          root: classes.color,\n        }}\n      >\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent className={classes.content}>\n              <div>{getStepContent(index)}</div>\n\n              <Link\n                to=\"/adminSignin\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#015A59\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                Sign In?\n              </Link>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n",{"ruleId":"584","replacedBy":"585"},{"ruleId":"586","replacedBy":"587"},{"ruleId":"588","severity":1,"message":"589","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":21},{"ruleId":"588","severity":1,"message":"592","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":21},{"ruleId":"588","severity":1,"message":"593","line":7,"column":8,"nodeType":"590","messageId":"591","endLine":7,"endColumn":18},{"ruleId":"588","severity":1,"message":"594","line":8,"column":8,"nodeType":"590","messageId":"591","endLine":8,"endColumn":19},{"ruleId":"588","severity":1,"message":"595","line":9,"column":8,"nodeType":"590","messageId":"591","endLine":9,"endColumn":27},{"ruleId":"588","severity":1,"message":"596","line":10,"column":8,"nodeType":"590","messageId":"591","endLine":10,"endColumn":22},{"ruleId":"588","severity":1,"message":"597","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":16},{"ruleId":"588","severity":1,"message":"598","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":22},{"ruleId":"588","severity":1,"message":"599","line":15,"column":8,"nodeType":"590","messageId":"591","endLine":15,"endColumn":22},{"ruleId":"588","severity":1,"message":"600","line":16,"column":8,"nodeType":"590","messageId":"591","endLine":16,"endColumn":17},{"ruleId":"588","severity":1,"message":"601","line":17,"column":8,"nodeType":"590","messageId":"591","endLine":17,"endColumn":19},{"ruleId":"588","severity":1,"message":"602","line":18,"column":8,"nodeType":"590","messageId":"591","endLine":18,"endColumn":20},{"ruleId":"588","severity":1,"message":"603","line":19,"column":8,"nodeType":"590","messageId":"591","endLine":19,"endColumn":14},{"ruleId":"588","severity":1,"message":"604","line":20,"column":8,"nodeType":"590","messageId":"591","endLine":20,"endColumn":19},{"ruleId":"588","severity":1,"message":"605","line":21,"column":8,"nodeType":"590","messageId":"591","endLine":21,"endColumn":15},{"ruleId":"588","severity":1,"message":"606","line":22,"column":8,"nodeType":"590","messageId":"591","endLine":22,"endColumn":25},{"ruleId":"588","severity":1,"message":"607","line":27,"column":8,"nodeType":"590","messageId":"591","endLine":27,"endColumn":27},{"ruleId":"588","severity":1,"message":"608","line":32,"column":8,"nodeType":"590","messageId":"591","endLine":32,"endColumn":19},{"ruleId":"588","severity":1,"message":"609","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"610","line":11,"column":18,"nodeType":"590","messageId":"591","endLine":11,"endColumn":26},{"ruleId":"588","severity":1,"message":"611","line":12,"column":15,"nodeType":"590","messageId":"591","endLine":12,"endColumn":21},{"ruleId":"588","severity":1,"message":"612","line":13,"column":16,"nodeType":"590","messageId":"591","endLine":13,"endColumn":23},{"ruleId":"588","severity":1,"message":"613","line":14,"column":15,"nodeType":"590","messageId":"591","endLine":14,"endColumn":21},{"ruleId":"614","severity":1,"message":"615","line":285,"column":50,"nodeType":"616","messageId":"617","endLine":285,"endColumn":51,"suggestions":"618"},{"ruleId":"614","severity":1,"message":"619","line":285,"column":66,"nodeType":"616","messageId":"617","endLine":285,"endColumn":67,"suggestions":"620"},{"ruleId":"621","severity":1,"message":"622","line":214,"column":6,"nodeType":"623","endLine":214,"endColumn":8,"suggestions":"624"},{"ruleId":"614","severity":1,"message":"615","line":309,"column":50,"nodeType":"616","messageId":"617","endLine":309,"endColumn":51,"suggestions":"625"},{"ruleId":"614","severity":1,"message":"619","line":309,"column":66,"nodeType":"616","messageId":"617","endLine":309,"endColumn":67,"suggestions":"626"},{"ruleId":"588","severity":1,"message":"627","line":4,"column":3,"nodeType":"590","messageId":"591","endLine":4,"endColumn":14},{"ruleId":"588","severity":1,"message":"628","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":13},{"ruleId":"588","severity":1,"message":"629","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":9},{"ruleId":"588","severity":1,"message":"630","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":11},{"ruleId":"588","severity":1,"message":"631","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":35},{"ruleId":"588","severity":1,"message":"632","line":105,"column":10,"nodeType":"590","messageId":"591","endLine":105,"endColumn":14},{"ruleId":"588","severity":1,"message":"633","line":107,"column":9,"nodeType":"590","messageId":"591","endLine":107,"endColumn":21},{"ruleId":"588","severity":1,"message":"609","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"610","line":11,"column":18,"nodeType":"590","messageId":"591","endLine":11,"endColumn":26},{"ruleId":"588","severity":1,"message":"611","line":12,"column":15,"nodeType":"590","messageId":"591","endLine":12,"endColumn":21},{"ruleId":"588","severity":1,"message":"612","line":13,"column":16,"nodeType":"590","messageId":"591","endLine":13,"endColumn":23},{"ruleId":"588","severity":1,"message":"613","line":14,"column":15,"nodeType":"590","messageId":"591","endLine":14,"endColumn":21},{"ruleId":"588","severity":1,"message":"631","line":9,"column":8,"nodeType":"590","messageId":"591","endLine":9,"endColumn":35},{"ruleId":"588","severity":1,"message":"634","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":13},{"ruleId":"588","severity":1,"message":"635","line":15,"column":8,"nodeType":"590","messageId":"591","endLine":15,"endColumn":22},{"ruleId":"588","severity":1,"message":"636","line":24,"column":8,"nodeType":"590","messageId":"591","endLine":24,"endColumn":19},{"ruleId":"588","severity":1,"message":"637","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":16},{"ruleId":"588","severity":1,"message":"638","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":23},{"ruleId":"588","severity":1,"message":"639","line":14,"column":43,"nodeType":"590","messageId":"591","endLine":14,"endColumn":54},{"ruleId":"588","severity":1,"message":"640","line":21,"column":10,"nodeType":"590","messageId":"591","endLine":21,"endColumn":24},{"ruleId":"588","severity":1,"message":"638","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":23},{"ruleId":"588","severity":1,"message":"638","line":15,"column":8,"nodeType":"590","messageId":"591","endLine":15,"endColumn":23},{"ruleId":"621","severity":1,"message":"641","line":353,"column":6,"nodeType":"623","endLine":353,"endColumn":8,"suggestions":"642"},{"ruleId":"614","severity":1,"message":"615","line":515,"column":56,"nodeType":"616","messageId":"617","endLine":515,"endColumn":57,"suggestions":"643"},{"ruleId":"614","severity":1,"message":"619","line":515,"column":72,"nodeType":"616","messageId":"617","endLine":515,"endColumn":73,"suggestions":"644"},{"ruleId":"614","severity":1,"message":"615","line":729,"column":58,"nodeType":"616","messageId":"617","endLine":729,"endColumn":59,"suggestions":"645"},{"ruleId":"614","severity":1,"message":"619","line":729,"column":74,"nodeType":"616","messageId":"617","endLine":729,"endColumn":75,"suggestions":"646"},{"ruleId":"588","severity":1,"message":"631","line":1,"column":8,"nodeType":"590","messageId":"591","endLine":1,"endColumn":35},{"ruleId":"588","severity":1,"message":"636","line":24,"column":8,"nodeType":"590","messageId":"591","endLine":24,"endColumn":19},{"ruleId":"588","severity":1,"message":"647","line":19,"column":13,"nodeType":"590","messageId":"591","endLine":19,"endColumn":26},{"ruleId":"588","severity":1,"message":"648","line":20,"column":13,"nodeType":"590","messageId":"591","endLine":20,"endColumn":21},{"ruleId":"588","severity":1,"message":"649","line":21,"column":14,"nodeType":"590","messageId":"591","endLine":21,"endColumn":24},{"ruleId":"588","severity":1,"message":"650","line":26,"column":10,"nodeType":"590","messageId":"591","endLine":26,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":28,"column":8,"nodeType":"590","messageId":"591","endLine":28,"endColumn":19},{"ruleId":"588","severity":1,"message":"651","line":193,"column":5,"nodeType":"590","messageId":"591","endLine":193,"endColumn":10},{"ruleId":"588","severity":1,"message":"652","line":194,"column":5,"nodeType":"590","messageId":"591","endLine":194,"endColumn":10},{"ruleId":"614","severity":1,"message":"615","line":190,"column":48,"nodeType":"616","messageId":"617","endLine":190,"endColumn":49,"suggestions":"653"},{"ruleId":"614","severity":1,"message":"619","line":190,"column":64,"nodeType":"616","messageId":"617","endLine":190,"endColumn":65,"suggestions":"654"},{"ruleId":"588","severity":1,"message":"609","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":13},{"ruleId":"588","severity":1,"message":"655","line":18,"column":14,"nodeType":"590","messageId":"591","endLine":18,"endColumn":25},{"ruleId":"588","severity":1,"message":"656","line":19,"column":18,"nodeType":"590","messageId":"591","endLine":19,"endColumn":31},{"ruleId":"588","severity":1,"message":"647","line":20,"column":13,"nodeType":"590","messageId":"591","endLine":20,"endColumn":26},{"ruleId":"588","severity":1,"message":"648","line":21,"column":13,"nodeType":"590","messageId":"591","endLine":21,"endColumn":21},{"ruleId":"588","severity":1,"message":"649","line":22,"column":14,"nodeType":"590","messageId":"591","endLine":22,"endColumn":24},{"ruleId":"588","severity":1,"message":"657","line":24,"column":10,"nodeType":"590","messageId":"591","endLine":24,"endColumn":13},{"ruleId":"588","severity":1,"message":"658","line":24,"column":15,"nodeType":"590","messageId":"591","endLine":24,"endColumn":23},{"ruleId":"588","severity":1,"message":"650","line":26,"column":10,"nodeType":"590","messageId":"591","endLine":26,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":28,"column":8,"nodeType":"590","messageId":"591","endLine":28,"endColumn":19},{"ruleId":"588","severity":1,"message":"659","line":181,"column":10,"nodeType":"590","messageId":"591","endLine":181,"endColumn":15},{"ruleId":"588","severity":1,"message":"660","line":181,"column":17,"nodeType":"590","messageId":"591","endLine":181,"endColumn":25},{"ruleId":"588","severity":1,"message":"661","line":182,"column":10,"nodeType":"590","messageId":"591","endLine":182,"endColumn":21},{"ruleId":"588","severity":1,"message":"662","line":182,"column":23,"nodeType":"590","messageId":"591","endLine":182,"endColumn":37},{"ruleId":"588","severity":1,"message":"651","line":190,"column":5,"nodeType":"590","messageId":"591","endLine":190,"endColumn":10},{"ruleId":"588","severity":1,"message":"652","line":191,"column":5,"nodeType":"590","messageId":"591","endLine":191,"endColumn":10},{"ruleId":"588","severity":1,"message":"663","line":195,"column":10,"nodeType":"590","messageId":"591","endLine":195,"endColumn":21},{"ruleId":"588","severity":1,"message":"664","line":195,"column":23,"nodeType":"590","messageId":"591","endLine":195,"endColumn":37},{"ruleId":"588","severity":1,"message":"665","line":196,"column":10,"nodeType":"590","messageId":"591","endLine":196,"endColumn":19},{"ruleId":"588","severity":1,"message":"666","line":196,"column":21,"nodeType":"590","messageId":"591","endLine":196,"endColumn":33},{"ruleId":"667","severity":1,"message":"668","line":240,"column":14,"nodeType":"669","messageId":"670","endLine":240,"endColumn":16},{"ruleId":"667","severity":1,"message":"668","line":242,"column":21,"nodeType":"669","messageId":"670","endLine":242,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":24,"column":8,"nodeType":"590","messageId":"591","endLine":24,"endColumn":19},{"ruleId":"588","severity":1,"message":"671","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":23},{"ruleId":"588","severity":1,"message":"672","line":1,"column":42,"nodeType":"590","messageId":"591","endLine":1,"endColumn":48},{"ruleId":"588","severity":1,"message":"609","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":13},{"ruleId":"588","severity":1,"message":"655","line":18,"column":14,"nodeType":"590","messageId":"591","endLine":18,"endColumn":25},{"ruleId":"588","severity":1,"message":"656","line":19,"column":18,"nodeType":"590","messageId":"591","endLine":19,"endColumn":31},{"ruleId":"588","severity":1,"message":"647","line":20,"column":13,"nodeType":"590","messageId":"591","endLine":20,"endColumn":26},{"ruleId":"588","severity":1,"message":"648","line":21,"column":13,"nodeType":"590","messageId":"591","endLine":21,"endColumn":21},{"ruleId":"588","severity":1,"message":"649","line":22,"column":14,"nodeType":"590","messageId":"591","endLine":22,"endColumn":24},{"ruleId":"588","severity":1,"message":"650","line":27,"column":10,"nodeType":"590","messageId":"591","endLine":27,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":29,"column":8,"nodeType":"590","messageId":"591","endLine":29,"endColumn":19},{"ruleId":"588","severity":1,"message":"673","line":32,"column":8,"nodeType":"590","messageId":"591","endLine":32,"endColumn":23},{"ruleId":"588","severity":1,"message":"674","line":188,"column":37,"nodeType":"590","messageId":"591","endLine":188,"endColumn":51},{"ruleId":"588","severity":1,"message":"651","line":196,"column":5,"nodeType":"590","messageId":"591","endLine":196,"endColumn":10},{"ruleId":"588","severity":1,"message":"652","line":197,"column":5,"nodeType":"590","messageId":"591","endLine":197,"endColumn":10},{"ruleId":"588","severity":1,"message":"675","line":201,"column":10,"nodeType":"590","messageId":"591","endLine":201,"endColumn":14},{"ruleId":"588","severity":1,"message":"676","line":201,"column":16,"nodeType":"590","messageId":"591","endLine":201,"endColumn":23},{"ruleId":"588","severity":1,"message":"663","line":202,"column":10,"nodeType":"590","messageId":"591","endLine":202,"endColumn":21},{"ruleId":"588","severity":1,"message":"664","line":202,"column":23,"nodeType":"590","messageId":"591","endLine":202,"endColumn":37},{"ruleId":"667","severity":1,"message":"668","line":238,"column":67,"nodeType":"669","messageId":"670","endLine":238,"endColumn":69},{"ruleId":"588","severity":1,"message":"631","line":1,"column":8,"nodeType":"590","messageId":"591","endLine":1,"endColumn":35},{"ruleId":"588","severity":1,"message":"677","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":7},{"ruleId":"588","severity":1,"message":"609","line":11,"column":3,"nodeType":"590","messageId":"591","endLine":11,"endColumn":13},{"ruleId":"588","severity":1,"message":"655","line":18,"column":14,"nodeType":"590","messageId":"591","endLine":18,"endColumn":25},{"ruleId":"588","severity":1,"message":"656","line":19,"column":18,"nodeType":"590","messageId":"591","endLine":19,"endColumn":31},{"ruleId":"588","severity":1,"message":"647","line":20,"column":13,"nodeType":"590","messageId":"591","endLine":20,"endColumn":26},{"ruleId":"588","severity":1,"message":"648","line":21,"column":13,"nodeType":"590","messageId":"591","endLine":21,"endColumn":21},{"ruleId":"588","severity":1,"message":"649","line":22,"column":14,"nodeType":"590","messageId":"591","endLine":22,"endColumn":24},{"ruleId":"588","severity":1,"message":"657","line":24,"column":10,"nodeType":"590","messageId":"591","endLine":24,"endColumn":13},{"ruleId":"588","severity":1,"message":"658","line":24,"column":15,"nodeType":"590","messageId":"591","endLine":24,"endColumn":23},{"ruleId":"588","severity":1,"message":"650","line":26,"column":10,"nodeType":"590","messageId":"591","endLine":26,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":28,"column":8,"nodeType":"590","messageId":"591","endLine":28,"endColumn":19},{"ruleId":"588","severity":1,"message":"659","line":182,"column":10,"nodeType":"590","messageId":"591","endLine":182,"endColumn":15},{"ruleId":"588","severity":1,"message":"660","line":182,"column":17,"nodeType":"590","messageId":"591","endLine":182,"endColumn":25},{"ruleId":"588","severity":1,"message":"661","line":183,"column":10,"nodeType":"590","messageId":"591","endLine":183,"endColumn":21},{"ruleId":"588","severity":1,"message":"662","line":183,"column":23,"nodeType":"590","messageId":"591","endLine":183,"endColumn":37},{"ruleId":"588","severity":1,"message":"651","line":191,"column":5,"nodeType":"590","messageId":"591","endLine":191,"endColumn":10},{"ruleId":"588","severity":1,"message":"652","line":192,"column":5,"nodeType":"590","messageId":"591","endLine":192,"endColumn":10},{"ruleId":"588","severity":1,"message":"663","line":196,"column":10,"nodeType":"590","messageId":"591","endLine":196,"endColumn":21},{"ruleId":"588","severity":1,"message":"664","line":196,"column":23,"nodeType":"590","messageId":"591","endLine":196,"endColumn":37},{"ruleId":"588","severity":1,"message":"665","line":197,"column":10,"nodeType":"590","messageId":"591","endLine":197,"endColumn":19},{"ruleId":"588","severity":1,"message":"666","line":197,"column":21,"nodeType":"590","messageId":"591","endLine":197,"endColumn":33},{"ruleId":"667","severity":1,"message":"668","line":260,"column":27,"nodeType":"669","messageId":"670","endLine":260,"endColumn":29},{"ruleId":"667","severity":1,"message":"668","line":262,"column":34,"nodeType":"669","messageId":"670","endLine":262,"endColumn":36},{"ruleId":"588","severity":1,"message":"678","line":276,"column":12,"nodeType":"590","messageId":"591","endLine":276,"endColumn":20},{"ruleId":"667","severity":1,"message":"668","line":277,"column":14,"nodeType":"669","messageId":"670","endLine":277,"endColumn":16},{"ruleId":"667","severity":1,"message":"668","line":279,"column":21,"nodeType":"669","messageId":"670","endLine":279,"endColumn":23},{"ruleId":"588","severity":1,"message":"598","line":2,"column":8,"nodeType":"590","messageId":"591","endLine":2,"endColumn":22},{"ruleId":"588","severity":1,"message":"595","line":3,"column":8,"nodeType":"590","messageId":"591","endLine":3,"endColumn":27},{"ruleId":"588","severity":1,"message":"596","line":4,"column":8,"nodeType":"590","messageId":"591","endLine":4,"endColumn":22},{"ruleId":"588","severity":1,"message":"597","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":16},{"ruleId":"621","severity":1,"message":"679","line":12,"column":6,"nodeType":"623","endLine":12,"endColumn":8,"suggestions":"680"},{"ruleId":"588","severity":1,"message":"681","line":13,"column":8,"nodeType":"590","messageId":"591","endLine":13,"endColumn":15},{"ruleId":"588","severity":1,"message":"682","line":17,"column":5,"nodeType":"590","messageId":"591","endLine":17,"endColumn":10},{"ruleId":"588","severity":1,"message":"681","line":14,"column":8,"nodeType":"590","messageId":"591","endLine":14,"endColumn":15},{"ruleId":"588","severity":1,"message":"681","line":16,"column":8,"nodeType":"590","messageId":"591","endLine":16,"endColumn":15},{"ruleId":"588","severity":1,"message":"683","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":19},{"ruleId":"588","severity":1,"message":"684","line":95,"column":10,"nodeType":"590","messageId":"591","endLine":95,"endColumn":17},{"ruleId":"588","severity":1,"message":"685","line":120,"column":12,"nodeType":"590","messageId":"591","endLine":120,"endColumn":29},{"ruleId":"621","severity":1,"message":"622","line":205,"column":6,"nodeType":"623","endLine":205,"endColumn":8,"suggestions":"686"},{"ruleId":"614","severity":1,"message":"615","line":282,"column":54,"nodeType":"616","messageId":"617","endLine":282,"endColumn":55,"suggestions":"687"},{"ruleId":"614","severity":1,"message":"619","line":282,"column":70,"nodeType":"616","messageId":"617","endLine":282,"endColumn":71,"suggestions":"688"},{"ruleId":"689","severity":1,"message":"690","line":89,"column":3,"nodeType":"691","messageId":"670","endLine":89,"endColumn":10},{"ruleId":"689","severity":1,"message":"692","line":107,"column":3,"nodeType":"691","messageId":"670","endLine":107,"endColumn":10},{"ruleId":"689","severity":1,"message":"693","line":114,"column":3,"nodeType":"691","messageId":"670","endLine":114,"endColumn":21},{"ruleId":"689","severity":1,"message":"694","line":146,"column":3,"nodeType":"691","messageId":"670","endLine":146,"endColumn":12},{"ruleId":"588","severity":1,"message":"695","line":317,"column":24,"nodeType":"590","messageId":"591","endLine":317,"endColumn":39},{"ruleId":"667","severity":1,"message":"668","line":451,"column":21,"nodeType":"669","messageId":"670","endLine":451,"endColumn":23},{"ruleId":"621","severity":1,"message":"696","line":518,"column":6,"nodeType":"623","endLine":518,"endColumn":8,"suggestions":"697"},{"ruleId":"588","severity":1,"message":"698","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":15},{"ruleId":"621","severity":1,"message":"699","line":129,"column":6,"nodeType":"623","endLine":129,"endColumn":8,"suggestions":"700"},{"ruleId":"667","severity":1,"message":"668","line":340,"column":21,"nodeType":"669","messageId":"670","endLine":340,"endColumn":23},{"ruleId":"621","severity":1,"message":"701","line":464,"column":6,"nodeType":"623","endLine":464,"endColumn":8,"suggestions":"702"},{"ruleId":"588","severity":1,"message":"703","line":2,"column":3,"nodeType":"590","messageId":"591","endLine":2,"endColumn":9},{"ruleId":"588","severity":1,"message":"677","line":3,"column":3,"nodeType":"590","messageId":"591","endLine":3,"endColumn":7},{"ruleId":"588","severity":1,"message":"704","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":12},{"ruleId":"588","severity":1,"message":"705","line":114,"column":12,"nodeType":"590","messageId":"591","endLine":114,"endColumn":22},{"ruleId":"621","severity":1,"message":"706","line":157,"column":6,"nodeType":"623","endLine":157,"endColumn":8,"suggestions":"707"},{"ruleId":"588","severity":1,"message":"708","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"709","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":20},{"ruleId":"588","severity":1,"message":"681","line":14,"column":8,"nodeType":"590","messageId":"591","endLine":14,"endColumn":15},{"ruleId":"588","severity":1,"message":"710","line":20,"column":19,"nodeType":"590","messageId":"591","endLine":20,"endColumn":28},{"ruleId":"588","severity":1,"message":"711","line":26,"column":3,"nodeType":"590","messageId":"591","endLine":26,"endColumn":16},{"ruleId":"588","severity":1,"message":"712","line":29,"column":3,"nodeType":"590","messageId":"591","endLine":29,"endColumn":19},{"ruleId":"689","severity":1,"message":"713","line":64,"column":3,"nodeType":"691","messageId":"670","endLine":64,"endColumn":12},{"ruleId":"621","severity":1,"message":"714","line":358,"column":6,"nodeType":"623","endLine":358,"endColumn":8,"suggestions":"715"},{"ruleId":"614","severity":1,"message":"615","line":534,"column":54,"nodeType":"616","messageId":"617","endLine":534,"endColumn":55,"suggestions":"716"},{"ruleId":"614","severity":1,"message":"619","line":534,"column":70,"nodeType":"616","messageId":"617","endLine":534,"endColumn":71,"suggestions":"717"},{"ruleId":"614","severity":1,"message":"615","line":747,"column":56,"nodeType":"616","messageId":"617","endLine":747,"endColumn":57,"suggestions":"718"},{"ruleId":"614","severity":1,"message":"619","line":747,"column":72,"nodeType":"616","messageId":"617","endLine":747,"endColumn":73,"suggestions":"719"},{"ruleId":"588","severity":1,"message":"720","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"621","severity":1,"message":"722","line":304,"column":6,"nodeType":"623","endLine":304,"endColumn":8,"suggestions":"723"},{"ruleId":"588","severity":1,"message":"709","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":20},{"ruleId":"588","severity":1,"message":"681","line":14,"column":8,"nodeType":"590","messageId":"591","endLine":14,"endColumn":15},{"ruleId":"588","severity":1,"message":"724","line":18,"column":10,"nodeType":"590","messageId":"591","endLine":18,"endColumn":19},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"621","severity":1,"message":"725","line":302,"column":6,"nodeType":"623","endLine":302,"endColumn":8,"suggestions":"726"},{"ruleId":"588","severity":1,"message":"727","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":7},{"ruleId":"588","severity":1,"message":"720","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"728","line":16,"column":10,"nodeType":"590","messageId":"591","endLine":16,"endColumn":26},{"ruleId":"588","severity":1,"message":"729","line":17,"column":14,"nodeType":"590","messageId":"591","endLine":17,"endColumn":27},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"588","severity":1,"message":"652","line":157,"column":5,"nodeType":"590","messageId":"591","endLine":157,"endColumn":10},{"ruleId":"621","severity":1,"message":"730","line":351,"column":6,"nodeType":"623","endLine":351,"endColumn":8,"suggestions":"731"},{"ruleId":"588","severity":1,"message":"732","line":2,"column":3,"nodeType":"590","messageId":"591","endLine":2,"endColumn":9},{"ruleId":"588","severity":1,"message":"727","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":7},{"ruleId":"588","severity":1,"message":"720","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"733","line":13,"column":10,"nodeType":"590","messageId":"591","endLine":13,"endColumn":18},{"ruleId":"588","severity":1,"message":"728","line":16,"column":10,"nodeType":"590","messageId":"591","endLine":16,"endColumn":26},{"ruleId":"588","severity":1,"message":"729","line":17,"column":14,"nodeType":"590","messageId":"591","endLine":17,"endColumn":27},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"621","severity":1,"message":"734","line":253,"column":6,"nodeType":"623","endLine":253,"endColumn":8,"suggestions":"735"},{"ruleId":"588","severity":1,"message":"727","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":7},{"ruleId":"588","severity":1,"message":"720","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"728","line":16,"column":10,"nodeType":"590","messageId":"591","endLine":16,"endColumn":26},{"ruleId":"588","severity":1,"message":"729","line":17,"column":14,"nodeType":"590","messageId":"591","endLine":17,"endColumn":27},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"588","severity":1,"message":"736","line":154,"column":5,"nodeType":"590","messageId":"591","endLine":154,"endColumn":13},{"ruleId":"588","severity":1,"message":"737","line":155,"column":18,"nodeType":"590","messageId":"591","endLine":155,"endColumn":24},{"ruleId":"588","severity":1,"message":"738","line":156,"column":5,"nodeType":"590","messageId":"591","endLine":156,"endColumn":17},{"ruleId":"588","severity":1,"message":"652","line":157,"column":5,"nodeType":"590","messageId":"591","endLine":157,"endColumn":10},{"ruleId":"588","severity":1,"message":"739","line":158,"column":5,"nodeType":"590","messageId":"591","endLine":158,"endColumn":13},{"ruleId":"621","severity":1,"message":"740","line":310,"column":6,"nodeType":"623","endLine":310,"endColumn":8,"suggestions":"741"},{"ruleId":"614","severity":1,"message":"742","line":435,"column":34,"nodeType":"616","messageId":"617","endLine":435,"endColumn":35,"suggestions":"743"},{"ruleId":"588","severity":1,"message":"744","line":8,"column":8,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"745","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":24},{"ruleId":"614","severity":1,"message":"615","line":83,"column":50,"nodeType":"616","messageId":"617","endLine":83,"endColumn":51,"suggestions":"746"},{"ruleId":"614","severity":1,"message":"619","line":83,"column":66,"nodeType":"616","messageId":"617","endLine":83,"endColumn":67,"suggestions":"747"},{"ruleId":"588","severity":1,"message":"748","line":244,"column":9,"nodeType":"590","messageId":"591","endLine":244,"endColumn":19},{"ruleId":"588","severity":1,"message":"749","line":248,"column":9,"nodeType":"590","messageId":"591","endLine":248,"endColumn":20},{"ruleId":"667","severity":1,"message":"668","line":279,"column":35,"nodeType":"669","messageId":"670","endLine":279,"endColumn":37},{"ruleId":"667","severity":1,"message":"668","line":313,"column":27,"nodeType":"669","messageId":"670","endLine":313,"endColumn":29},{"ruleId":"588","severity":1,"message":"704","line":4,"column":3,"nodeType":"590","messageId":"591","endLine":4,"endColumn":12},{"ruleId":"588","severity":1,"message":"703","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":9},{"ruleId":"588","severity":1,"message":"609","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"610","line":11,"column":18,"nodeType":"590","messageId":"591","endLine":11,"endColumn":26},{"ruleId":"588","severity":1,"message":"611","line":12,"column":15,"nodeType":"590","messageId":"591","endLine":12,"endColumn":21},{"ruleId":"588","severity":1,"message":"612","line":13,"column":16,"nodeType":"590","messageId":"591","endLine":13,"endColumn":23},{"ruleId":"588","severity":1,"message":"613","line":14,"column":15,"nodeType":"590","messageId":"591","endLine":14,"endColumn":21},{"ruleId":"588","severity":1,"message":"750","line":16,"column":10,"nodeType":"590","messageId":"591","endLine":16,"endColumn":14},{"ruleId":"588","severity":1,"message":"751","line":21,"column":8,"nodeType":"590","messageId":"591","endLine":21,"endColumn":16},{"ruleId":"588","severity":1,"message":"736","line":133,"column":5,"nodeType":"590","messageId":"591","endLine":133,"endColumn":13},{"ruleId":"588","severity":1,"message":"737","line":134,"column":18,"nodeType":"590","messageId":"591","endLine":134,"endColumn":24},{"ruleId":"588","severity":1,"message":"738","line":135,"column":5,"nodeType":"590","messageId":"591","endLine":135,"endColumn":17},{"ruleId":"588","severity":1,"message":"684","line":139,"column":10,"nodeType":"590","messageId":"591","endLine":139,"endColumn":17},{"ruleId":"588","severity":1,"message":"752","line":146,"column":12,"nodeType":"590","messageId":"591","endLine":146,"endColumn":34},{"ruleId":"588","severity":1,"message":"744","line":5,"column":3,"nodeType":"590","messageId":"591","endLine":5,"endColumn":8},{"ruleId":"588","severity":1,"message":"753","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":7},{"ruleId":"588","severity":1,"message":"754","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":6},{"ruleId":"588","severity":1,"message":"755","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":6},{"ruleId":"588","severity":1,"message":"756","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":13},{"ruleId":"588","severity":1,"message":"757","line":13,"column":3,"nodeType":"590","messageId":"591","endLine":13,"endColumn":14},{"ruleId":"588","severity":1,"message":"758","line":23,"column":12,"nodeType":"590","messageId":"591","endLine":23,"endColumn":22},{"ruleId":"588","severity":1,"message":"655","line":24,"column":14,"nodeType":"590","messageId":"591","endLine":24,"endColumn":25},{"ruleId":"588","severity":1,"message":"656","line":25,"column":18,"nodeType":"590","messageId":"591","endLine":25,"endColumn":31},{"ruleId":"588","severity":1,"message":"647","line":26,"column":13,"nodeType":"590","messageId":"591","endLine":26,"endColumn":26},{"ruleId":"588","severity":1,"message":"648","line":27,"column":13,"nodeType":"590","messageId":"591","endLine":27,"endColumn":21},{"ruleId":"588","severity":1,"message":"649","line":28,"column":14,"nodeType":"590","messageId":"591","endLine":28,"endColumn":24},{"ruleId":"588","severity":1,"message":"759","line":30,"column":8,"nodeType":"590","messageId":"591","endLine":30,"endColumn":17},{"ruleId":"588","severity":1,"message":"650","line":31,"column":10,"nodeType":"590","messageId":"591","endLine":31,"endColumn":23},{"ruleId":"588","severity":1,"message":"636","line":33,"column":8,"nodeType":"590","messageId":"591","endLine":33,"endColumn":19},{"ruleId":"588","severity":1,"message":"760","line":207,"column":10,"nodeType":"590","messageId":"591","endLine":207,"endColumn":19},{"ruleId":"667","severity":1,"message":"761","line":286,"column":60,"nodeType":"669","messageId":"670","endLine":286,"endColumn":62},{"ruleId":"621","severity":1,"message":"762","line":334,"column":6,"nodeType":"623","endLine":334,"endColumn":8,"suggestions":"763"},{"ruleId":"588","severity":1,"message":"704","line":1,"column":18,"nodeType":"590","messageId":"591","endLine":1,"endColumn":27},{"ruleId":"588","severity":1,"message":"764","line":7,"column":10,"nodeType":"590","messageId":"591","endLine":7,"endColumn":19},{"ruleId":"588","severity":1,"message":"765","line":10,"column":10,"nodeType":"590","messageId":"591","endLine":10,"endColumn":26},{"ruleId":"588","severity":1,"message":"766","line":12,"column":9,"nodeType":"590","messageId":"591","endLine":12,"endColumn":22},{"ruleId":"588","severity":1,"message":"767","line":16,"column":10,"nodeType":"590","messageId":"591","endLine":16,"endColumn":22},{"ruleId":"689","severity":1,"message":"690","line":89,"column":3,"nodeType":"691","messageId":"670","endLine":89,"endColumn":10},{"ruleId":"689","severity":1,"message":"692","line":107,"column":3,"nodeType":"691","messageId":"670","endLine":107,"endColumn":10},{"ruleId":"689","severity":1,"message":"693","line":114,"column":3,"nodeType":"691","messageId":"670","endLine":114,"endColumn":21},{"ruleId":"689","severity":1,"message":"694","line":146,"column":3,"nodeType":"691","messageId":"670","endLine":146,"endColumn":12},{"ruleId":"667","severity":1,"message":"668","line":428,"column":21,"nodeType":"669","messageId":"670","endLine":428,"endColumn":23},{"ruleId":"621","severity":1,"message":"696","line":493,"column":6,"nodeType":"623","endLine":493,"endColumn":8,"suggestions":"768"},{"ruleId":"588","severity":1,"message":"720","line":12,"column":8,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"721","line":21,"column":31,"nodeType":"590","messageId":"591","endLine":21,"endColumn":37},{"ruleId":"621","severity":1,"message":"722","line":304,"column":6,"nodeType":"623","endLine":304,"endColumn":8,"suggestions":"769"},{"ruleId":"588","severity":1,"message":"744","line":8,"column":8,"nodeType":"590","messageId":"591","endLine":8,"endColumn":13},{"ruleId":"588","severity":1,"message":"756","line":9,"column":8,"nodeType":"590","messageId":"591","endLine":9,"endColumn":18},{"ruleId":"588","severity":1,"message":"745","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":24},{"ruleId":"614","severity":1,"message":"615","line":86,"column":50,"nodeType":"616","messageId":"617","endLine":86,"endColumn":51,"suggestions":"770"},{"ruleId":"614","severity":1,"message":"619","line":86,"column":66,"nodeType":"616","messageId":"617","endLine":86,"endColumn":67,"suggestions":"771"},{"ruleId":"588","severity":1,"message":"748","line":247,"column":9,"nodeType":"590","messageId":"591","endLine":247,"endColumn":19},{"ruleId":"588","severity":1,"message":"749","line":251,"column":9,"nodeType":"590","messageId":"591","endLine":251,"endColumn":20},{"ruleId":"667","severity":1,"message":"668","line":282,"column":35,"nodeType":"669","messageId":"670","endLine":282,"endColumn":37},{"ruleId":"667","severity":1,"message":"668","line":317,"column":27,"nodeType":"669","messageId":"670","endLine":317,"endColumn":29},"no-native-reassign",["772"],"no-negated-in-lhs",["773"],"no-unused-vars","'ProfileDelete' is defined but never used.","Identifier","unusedVar","'ProfileUpdate' is defined but never used.","'AddSubUser' is defined but never used.","'BlogHistory' is defined but never used.","'SubscriptionPackage' is defined but never used.","'BillingDetails' is defined but never used.","'Invoices' is defined but never used.","'PaymentDetails' is defined but never used.","'AdminDashboard' is defined but never used.","'BlogTitle' is defined but never used.","'BlogOutline' is defined but never used.","'BlogKeywords' is defined but never used.","'AIBlog' is defined but never used.","'SEOAnalyzer' is defined but never used.","'SEOBlog' is defined but never used.","'PlagiarismChecker' is defined but never used.","'AdminForgotPassword' is defined but never used.","'ImageEditor' is defined but never used.","'IconButton' is defined but never used.","'Facebook' is defined but never used.","'Google' is defined but never used.","'Twitter' is defined but never used.","'GitHub' is defined but never used.","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["774","775"],"Unnecessary escape character: \\..",["776","777"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'plotData'. Either include it or remove the dependency array.","ArrayExpression",["778"],["779","780"],["781","782"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'PaymentSubscriptionTemplate' is defined but never used.","'plan' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'axios' is defined but never used.","'StripeCheckout' is defined but never used.","'AppTemplate' is defined but never used.","'Checkbox' is defined but never used.","'ProfileTemplate' is defined but never used.","'WarningIcon' is defined but never used.","'MdOutlineClose' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllSubusers'. Either include it or remove the dependency array.",["783"],["784","785"],["786","787"],["788","789"],["790","791"],"'FavouriteIcon' is defined but never used.","'FlagIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'FiCheckSquare' is defined but never used.","'watch' is assigned a value but never used.","'reset' is assigned a value but never used.",["792","793"],["794","795"],"'HistoryIcon' is defined but never used.","'ClipboardIcon' is defined but never used.","'Pie' is defined but never used.","'PieChart' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'blogHistory' is assigned a value but never used.","'setBlogHistory' is assigned a value but never used.","'snackData' is assigned a value but never used.","'setSnackData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Switch' is defined but never used.","'Router' is defined but never used.","'CopyToClipboard' is defined but never used.","'PYTHON_BACKEND' is assigned a value but never used.","'blog' is assigned a value but never used.","'setBlog' is assigned a value but never used.","'Card' is defined but never used.","'getcolor' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["796"],"'Toolbar' is defined but never used.","'value' is assigned a value but never used.","'CircularProgress' is defined but never used.","'disable' is assigned a value but never used.","'updateInformation' is defined but never used.",["797"],["798","799"],["800","801"],"no-dupe-keys","Duplicate key 'content'.","ObjectExpression","Duplicate key 'heading'.","Duplicate key 'ratingFeedbackHead'.","Duplicate key 'submitBtn'.","'setEditCategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getmyComplaints'. Either include it or remove the dependency array.",["802"],"'Close' is defined but never used.","React Hook useEffect has a missing dependency: 'getFAQS'. Either include it or remove the dependency array.",["803"],"React Hook useEffect has missing dependencies: 'getReviews' and 'getmyReviews'. Either include them or remove the dependency array.",["804"],"'Button' is defined but never used.","'TextField' is defined but never used.","'videoReady' is defined but never used.","React Hook useEffect has missing dependencies: 'getChangeLog' and 'getSystemVideos'. Either include them or remove the dependency array.",["805"],"'useEffect' is defined but never used.","'ListItemIcon' is defined but never used.","'QueryIcon' is defined but never used.","'MdInfoOutline' is defined but never used.","'MdQuestionAnswer' is defined but never used.","Duplicate key 'deleteBtn'.","React Hook useEffect has a missing dependency: 'getAllUsers'. Either include it or remove the dependency array.",["806"],["807","808"],["809","810"],["811","812"],["813","814"],"'Rating' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllComplaints'. Either include it or remove the dependency array.",["815"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllFeedbacks'. Either include it or remove the dependency array.",["816"],"'Chip' is defined but never used.","'NotRespondedIcon' is defined but never used.","'RespondedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllFAQs'. Either include it or remove the dependency array.",["817"],"'Avatar' is defined but never used.","'MdDelete' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllChangelog'. Either include it or remove the dependency array.",["818"],"'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllSystemVideos'. Either include it or remove the dependency array.",["819"],"Unnecessary escape character: \\:.",["820","821"],"'Paper' is defined but never used.","'SignInUpTemplate' is defined but never used.",["822","823"],["824","825"],"'handleBack' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'Link' is defined but never used.","'Progress' is defined but never used.","'ForgetPasswordTemplate' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'CardContent' is defined but never used.","'OutputIcon' is defined but never used.","'PropTypes' is defined but never used.","'favAction' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getFavImages'. Either include it or remove the dependency array.",["826"],"'useParams' is defined but never used.","'isImgEditorShown' is assigned a value but never used.","'openImgEditor' is assigned a value but never used.","'Autocomplete' is defined but never used.",["827"],["828"],["829","830"],["831","832"],"no-global-assign","no-unsafe-negation",{"messageId":"833","fix":"834","desc":"835"},{"messageId":"836","fix":"837","desc":"838"},{"messageId":"833","fix":"839","desc":"835"},{"messageId":"836","fix":"840","desc":"838"},{"desc":"841","fix":"842"},{"messageId":"833","fix":"843","desc":"835"},{"messageId":"836","fix":"844","desc":"838"},{"messageId":"833","fix":"845","desc":"835"},{"messageId":"836","fix":"846","desc":"838"},{"desc":"847","fix":"848"},{"messageId":"833","fix":"849","desc":"835"},{"messageId":"836","fix":"850","desc":"838"},{"messageId":"833","fix":"851","desc":"835"},{"messageId":"836","fix":"852","desc":"838"},{"messageId":"833","fix":"853","desc":"835"},{"messageId":"836","fix":"854","desc":"838"},{"messageId":"833","fix":"855","desc":"835"},{"messageId":"836","fix":"856","desc":"838"},{"messageId":"833","fix":"857","desc":"835"},{"messageId":"836","fix":"858","desc":"838"},{"messageId":"833","fix":"859","desc":"835"},{"messageId":"836","fix":"860","desc":"838"},{"desc":"861","fix":"862"},{"desc":"841","fix":"863"},{"messageId":"833","fix":"864","desc":"835"},{"messageId":"836","fix":"865","desc":"838"},{"messageId":"833","fix":"866","desc":"835"},{"messageId":"836","fix":"867","desc":"838"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"messageId":"833","fix":"878","desc":"835"},{"messageId":"836","fix":"879","desc":"838"},{"messageId":"833","fix":"880","desc":"835"},{"messageId":"836","fix":"881","desc":"838"},{"messageId":"833","fix":"882","desc":"835"},{"messageId":"836","fix":"883","desc":"838"},{"messageId":"833","fix":"884","desc":"835"},{"messageId":"836","fix":"885","desc":"838"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"messageId":"833","fix":"896","desc":"835"},{"messageId":"836","fix":"897","desc":"838"},{"messageId":"833","fix":"898","desc":"835"},{"messageId":"836","fix":"899","desc":"838"},{"messageId":"833","fix":"900","desc":"835"},{"messageId":"836","fix":"901","desc":"838"},{"desc":"902","fix":"903"},{"desc":"868","fix":"904"},{"desc":"886","fix":"905"},{"messageId":"833","fix":"906","desc":"835"},{"messageId":"836","fix":"907","desc":"838"},{"messageId":"833","fix":"908","desc":"835"},{"messageId":"836","fix":"909","desc":"838"},"removeEscape",{"range":"910","text":"911"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"912","text":"913"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"914","text":"911"},{"range":"915","text":"913"},"Update the dependencies array to be: [plotData]",{"range":"916","text":"917"},{"range":"918","text":"911"},{"range":"919","text":"913"},{"range":"920","text":"911"},{"range":"921","text":"913"},"Update the dependencies array to be: [getAllSubusers]",{"range":"922","text":"923"},{"range":"924","text":"911"},{"range":"925","text":"913"},{"range":"926","text":"911"},{"range":"927","text":"913"},{"range":"928","text":"911"},{"range":"929","text":"913"},{"range":"930","text":"911"},{"range":"931","text":"913"},{"range":"932","text":"911"},{"range":"933","text":"913"},{"range":"934","text":"911"},{"range":"935","text":"913"},"Update the dependencies array to be: [history]",{"range":"936","text":"937"},{"range":"938","text":"917"},{"range":"939","text":"911"},{"range":"940","text":"913"},{"range":"941","text":"911"},{"range":"942","text":"913"},"Update the dependencies array to be: [getmyComplaints]",{"range":"943","text":"944"},"Update the dependencies array to be: [getFAQS]",{"range":"945","text":"946"},"Update the dependencies array to be: [getReviews, getmyReviews]",{"range":"947","text":"948"},"Update the dependencies array to be: [getChangeLog, getSystemVideos]",{"range":"949","text":"950"},"Update the dependencies array to be: [getAllUsers]",{"range":"951","text":"952"},{"range":"953","text":"911"},{"range":"954","text":"913"},{"range":"955","text":"911"},{"range":"956","text":"913"},{"range":"957","text":"911"},{"range":"958","text":"913"},{"range":"959","text":"911"},{"range":"960","text":"913"},"Update the dependencies array to be: [getAllComplaints]",{"range":"961","text":"962"},"Update the dependencies array to be: [getAllFeedbacks]",{"range":"963","text":"964"},"Update the dependencies array to be: [getAllFAQs]",{"range":"965","text":"966"},"Update the dependencies array to be: [getAllChangelog]",{"range":"967","text":"968"},"Update the dependencies array to be: [getAllSystemVideos]",{"range":"969","text":"970"},{"range":"971","text":"911"},{"range":"972","text":"913"},{"range":"973","text":"911"},{"range":"974","text":"913"},{"range":"975","text":"911"},{"range":"976","text":"913"},"Update the dependencies array to be: [getFavImages]",{"range":"977","text":"978"},{"range":"979","text":"944"},{"range":"980","text":"962"},{"range":"981","text":"911"},{"range":"982","text":"913"},{"range":"983","text":"911"},{"range":"984","text":"913"},[7469,7470],"",[7469,7469],"\\",[7485,7486],[7485,7485],[5707,5709],"[plotData]",[8800,8801],[8800,8800],[8816,8817],[8816,8816],[8577,8579],"[getAllSubusers]",[14040,14041],[14040,14040],[14056,14057],[14056,14056],[22233,22234],[22233,22233],[22249,22250],[22249,22249],[4696,4697],[4696,4696],[4712,4713],[4712,4712],[296,298],"[history]",[5055,5057],[7774,7775],[7774,7774],[7790,7791],[7790,7790],[12322,12324],"[getmyComplaints]",[3060,3062],"[getFAQS]",[11003,11005],"[getReviews, getmyReviews]",[3509,3511],"[getChangeLog, getSystemVideos]",[8455,8457],"[getAllUsers]",[13862,13863],[13862,13862],[13878,13879],[13878,13878],[21606,21607],[21606,21606],[21622,21623],[21622,21622],[7329,7331],"[getAllComplaints]",[7226,7228],"[getAllFeedbacks]",[8104,8106],"[getAllFAQs]",[5949,5951],"[getAllChangelog]",[7356,7358],"[getAllSystemVideos]",[11053,11054],[11053,11053],[2314,2315],[2314,2314],[2330,2331],[2330,2330],[8023,8025],"[getFavImages]",[11723,11725],[7305,7307],[2387,2388],[2387,2387],[2403,2404],[2403,2403]]