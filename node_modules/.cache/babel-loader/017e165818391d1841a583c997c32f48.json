{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nfunction getStepContent(step) {\n  var _errors$username, _errors$userEmail;\n\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(data => {// signIn(data);\n        }),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          disabled: true,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          name: \"usename\",\n          label: \"Username\",\n          className: classes.inputFeild,\n          fullWidth: true,\n          ...register(\"username\", {\n            required: \"Username Required\",\n            pattern: {\n              value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n              message: \"Invalid Username\"\n            }\n          }),\n          error: Boolean(errors.username),\n          helperText: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Email\",\n          name: \"userEmail\",\n          className: classes.inputFeild,\n          ...register(\"userEmail\", {\n            required: \"Email required\",\n            pattern: {\n              value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n              message: \"Invalid email\"\n            }\n          }),\n          error: Boolean(errors.userEmail),\n          helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.btnGroup,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroupLeft,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              disableElevation: true,\n              color: \"primary\",\n              size: \"large\",\n              type: \"submit\",\n              disabled: disable,\n              children: [\"Update Information\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 28\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n\n    case 1:\n      return \"An ad group contains one or more ads which target a shared set of keywords.\";\n\n    case 2:\n      return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function ForgetPassword() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInUpTemplate, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: getStepContent(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.actionsContainer,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disabled: activeStep === 0,\n                  onClick: handleBack,\n                  className: classes.button,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleNext,\n                  className: classes.button,\n                  children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n        square: true,\n        elevation: 0,\n        className: classes.resetContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","SignInUpTemplate","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getSteps","getStepContent","step","handleSubmit","data","shrink","classes","inputFeild","register","required","pattern","value","message","Boolean","errors","username","userEmail","btnGroup","btnGroupLeft","disable","ForgetPassword","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return (\n        <form\n          noValidate\n          onSubmit={handleSubmit((data) => {\n            // signIn(data);\n          })}\n        >\n          <TextField\n            required\n            disabled\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            name=\"usename\"\n            label={\"Username\"}\n            className={classes.inputFeild}\n            fullWidth\n            {...register(\"username\", {\n              required: \"Username Required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                message: \"Invalid Username\",\n              },\n            })}\n            error={Boolean(errors.username)}\n            helperText={errors.username?.message}\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Email\"}\n            name=\"userEmail\"\n            className={classes.inputFeild}\n            {...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value:\n                  /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\",\n              },\n            })}\n            error={Boolean(errors.userEmail)}\n            helperText={errors.userEmail?.message}\n            fullWidth\n          ></TextField>\n          <Box className={classes.btnGroup}>\n            <Box className={classes.btnGroupLeft}>\n              <Button\n                variant={\"contained\"}\n                disableElevation\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={disable}\n              >\n                Update Information\n                {disable ? <Progress size={20} /> : \"\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      );\n    case 1:\n      return \"An ad group contains one or more ads which target a shared set of keywords.\";\n    case 2:\n      return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function ForgetPassword() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <SignInUpTemplate>\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </Paper>\n        )}\n      </div>\n    </SignInUpTemplate>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}