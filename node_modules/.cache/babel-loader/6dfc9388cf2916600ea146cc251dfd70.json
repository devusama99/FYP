{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  color: {\n    backgroundColor: \"#F2F8F8\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2)\n  },\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    height: \"100%\"\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\"\n  }\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  _s();\n\n  const classes = useStyles();\n\n  function getStepContent(step) {\n    var _errors$userEmail, _errors1$otp, _errors2$password, _errors2$confirmPassw;\n\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit(data => {\n            forgetPassword(data);\n          }),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"Email\",\n            name: \"userEmail\",\n            className: classes.inputFeild,\n            ...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\"\n              }\n            }),\n            error: Boolean(errors.userEmail),\n            helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroup,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                type: \"submit\",\n                size: \"medium\",\n                disabled: disable,\n                children: [\"Verify Email\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 30\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit1(data => {\n            verifyOTP(data);\n          }),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"OTP\",\n            name: \"otp\",\n            className: classes.inputFeild,\n            ...register1(\"otp\", {\n              required: \"OTP required\",\n              pattern: {\n                value: /^[0-9]{4}$/,\n                message: \"Invalid OTP\"\n              }\n            }),\n            error: Boolean(errors1.otp),\n            helperText: (_errors1$otp = errors1.otp) === null || _errors1$otp === void 0 ? void 0 : _errors1$otp.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroup,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                type: \"submit\",\n                size: \"medium\",\n                disabled: disable,\n                children: [\"Verify OTP\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 30\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit2(data => {\n            updatePassword(data);\n          }),\n          className: classes.passwordSection,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"New Password\",\n            className: classes.inputFeild,\n            name: \"password\",\n            ...register2(\"password\", {\n              required: \"Password Required\",\n              minLength: {\n                value: 6,\n                message: \"Invalid Password\"\n              }\n            }),\n            type: \"password\",\n            fullWidth: true,\n            error: Boolean(errors2.password),\n            helperText: (_errors2$password = errors2.password) === null || _errors2$password === void 0 ? void 0 : _errors2$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"Confirm Password\",\n            className: classes.inputFeild,\n            name: \"confirmPassword\",\n            ...register2(\"confirmPassword\", {\n              required: \"Confirm Password Required\",\n              validate: value => value === password.current || \"Passwords do not match\"\n            }),\n            type: \"password\",\n            error: Boolean(errors2.confirmPassword),\n            helperText: (_errors2$confirmPassw = errors2.confirmPassword) === null || _errors2$confirmPassw === void 0 ? void 0 : _errors2$confirmPassw.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            size: \"medium\",\n            disabled: disable,\n            className: classes.button,\n            children: [\"Update Password \", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 42\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const {\n    register: register1,\n    formState: {\n      errors: errors1\n    },\n    handleSubmit: handleSubmit1,\n    setValue\n  } = useForm();\n  const {\n    register: register2,\n    formState: {\n      errors: errors2\n    },\n    handleSubmit: handleSubmit2,\n    watch,\n    setValue: setValue1\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false\n  });\n  const history = useHistory();\n  const {\n    REACT_APP_BACKEND: BACKEND\n  } = process.env;\n  const [username, setUsername] = useState(\"\");\n\n  function forgetPassword(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/forgetPassword`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(response);\n\n      if (response.data.message == \"OTP Send to Your Email\") {\n        handleNext();\n        setUsername(response.data.username);\n        setDisable(false);\n      } else {\n        setValue(\"userEmail\", \"\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setDisable(false);\n    });\n  }\n\n  function verifyOTP(data) {\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/verifyOTP`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      if (response.data == \"OTP Matched\") {\n        handleNext();\n        setDisable(false);\n      } else {\n        setValue(\"otp\", \"\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setDisable(false);\n    });\n  }\n\n  function updatePassword(data) {\n    setDisable(true);\n    setSnackData({ ...snackData,\n      open: false\n    });\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/updatePassword`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: { ...data,\n        username: username\n      }\n    };\n    console.log({ ...data,\n      username: username\n    });\n    axios(config).then(function (response) {\n      if (response.data !== \"Invalid Password\") {\n        setSnackData({\n          message: \"Password Updated Succesfully\",\n          type: \"success\",\n          open: true\n        });\n        setValue1(\"password\", \"\");\n        setValue1(\"confirmPassword\", \"\");\n        setDisable(false);\n        setTimeout(() => {\n          history.push(\"/signin\");\n        }, 5000);\n      } else {\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true\n        });\n        setValue1(\"oldPassword\", \"\");\n        setDisable(false);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setSnackData({\n        message: \"Error Updating Password\",\n        type: \"error\",\n        open: true\n      });\n      setDisable(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackData.open,\n      type: snackData.type,\n      message: snackData.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      classes: {\n        root: classes.color\n      },\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: getStepContent(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            style: {\n              textDecoration: \"none\",\n              color: \"#015A59\",\n              marginLeft: \"3px\"\n            },\n            children: \"Sign In?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"rjC8CZ1yhKyddnsQ/uDDAtwd0FM=\", false, function () {\n  return [useStyles, useForm, useForm, useForm, useHistory];\n});\n\n_c = ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","TextField","Box","SignInUpTemplate","useState","useForm","Progress","useRef","axios","Snackbar","useHistory","Link","useStyles","theme","root","width","color","backgroundColor","button","marginTop","spacing","marginBottom","actionsContainer","resetContainer","padding","inputFeild","maxWidth","content","paddingTop","paddingBottom","height","passwordSection","display","flexDirection","alignItems","getSteps","ForgetPassword","classes","getStepContent","step","handleSubmit","data","forgetPassword","shrink","register","required","pattern","value","message","Boolean","errors","userEmail","btnGroup","disable","handleSubmit1","verifyOTP","register1","errors1","otp","handleSubmit2","updatePassword","register2","minLength","errors2","password","validate","current","confirmPassword","formState","setValue","watch","setValue1","setDisable","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","snackData","setSnackData","type","open","history","REACT_APP_BACKEND","BACKEND","process","env","username","setUsername","console","log","config","method","url","headers","then","response","catch","error","setTimeout","push","map","label","index","textDecoration","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Snackbar from \"./Snackbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  color: {\n    backgroundColor: \"#F2F8F8\",\n  },\n\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2),\n  },\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    height: \"100%\",\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  const classes = useStyles();\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              forgetPassword(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify Email\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 1:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              verifyOTP(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"OTP\"}\n              name=\"otp\"\n              className={classes.inputFeild}\n              {...register1(\"otp\", {\n                required: \"OTP required\",\n                pattern: {\n                  value: /^[0-9]{4}$/,\n                  message: \"Invalid OTP\",\n                },\n              })}\n              error={Boolean(errors1.otp)}\n              helperText={errors1.otp?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"medium\"\n                  disabled={disable}\n                >\n                  Verify OTP\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 2:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit2((data) => {\n              updatePassword(data);\n            })}\n            className={classes.passwordSection}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"New Password\"}\n              className={classes.inputFeild}\n              name=\"password\"\n              {...register2(\"password\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors2.password)}\n              helperText={errors2.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Confirm Password\"}\n              className={classes.inputFeild}\n              name=\"confirmPassword\"\n              {...register2(\"confirmPassword\", {\n                required: \"Confirm Password Required\",\n                validate: (value) =>\n                  value === password.current || \"Passwords do not match\",\n              })}\n              type={\"password\"}\n              error={Boolean(errors2.confirmPassword)}\n              helperText={errors2.confirmPassword?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              type=\"submit\"\n              size=\"medium\"\n              disabled={disable}\n              className={classes.button}\n            >\n              Update Password {disable ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n    setValue,\n  } = useForm();\n\n  const {\n    register: register2,\n    formState: { errors: errors2 },\n    handleSubmit: handleSubmit2,\n    watch,\n    setValue: setValue1,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const history = useHistory();\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n\n  const [username, setUsername] = useState(\"\");\n\n  function forgetPassword(data) {\n    console.log(data);\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/forgetPassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        if (response.data.message == \"OTP Send to Your Email\") {\n          handleNext();\n          setUsername(response.data.username);\n          setDisable(false);\n        } else {\n          setValue(\"userEmail\", \"\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function verifyOTP(data) {\n    setDisable(true);\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/verifyOTP`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        if (response.data == \"OTP Matched\") {\n          handleNext();\n          setDisable(false);\n        } else {\n          setValue(\"otp\", \"\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setDisable(false);\n      });\n  }\n\n  function updatePassword(data) {\n    setDisable(true);\n    setSnackData({ ...snackData, open: false });\n    var config = {\n      method: \"post\",\n      url: `${BACKEND}/userRouter/updatePassword`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        ...data,\n        username: username,\n      },\n    };\n    console.log({\n      ...data,\n      username: username,\n    });\n    axios(config)\n      .then(function (response) {\n        if (response.data !== \"Invalid Password\") {\n          setSnackData({\n            message: \"Password Updated Succesfully\",\n            type: \"success\",\n            open: true,\n          });\n          setValue1(\"password\", \"\");\n          setValue1(\"confirmPassword\", \"\");\n          setDisable(false);\n          setTimeout(() => {\n            history.push(\"/signin\");\n          }, 5000);\n        } else {\n          setSnackData({\n            message: \"Error Updating Password\",\n            type: \"error\",\n            open: true,\n          });\n          setValue1(\"oldPassword\", \"\");\n          setDisable(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSnackData({\n          message: \"Error Updating Password\",\n          type: \"error\",\n          open: true,\n        });\n        setDisable(false);\n      });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <Stepper\n        activeStep={activeStep}\n        orientation=\"vertical\"\n        classes={{\n          root: classes.color,\n        }}\n      >\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent className={classes.content}>\n              <Typography>{getStepContent(index)}</Typography>\n\n              <Link\n                to=\"/signin\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#015A59\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                Sign In?\n              </Link>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}