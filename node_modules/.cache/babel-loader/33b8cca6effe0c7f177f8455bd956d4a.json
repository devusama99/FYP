{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light\n  },\n  formContainer: {\n    padding: theme.spacing(5),\n    minWidth: \"350px\",\n    maxWidth: \"400px\",\n    borderRadius: theme.shape.borderRadius\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3)\n  },\n  formItem: {\n    marginBottom: theme.spacing(2)\n  },\n  btn: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2)\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\nfunction AdminSignup() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    REACT_APP_BACKEND: BACKEND\n  } = process.env;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    watch,\n    reset,\n    setValue\n  } = useForm();\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false\n  });\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        className: classes.formHeading,\n        children: \"INTELLIGENIE ADMIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          label: \"Username\",\n          value: username,\n          className: classes.formItem,\n          onChange: e => setUsername(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          label: \"Email\",\n          value: username,\n          className: classes.formItem,\n          onChange: e => setUsername(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"password\",\n          label: \"Password\",\n          value: password,\n          className: classes.formItem,\n          onChange: e => setPassword(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"password\",\n          label: \"Confirm Password\",\n          value: confirmPassword,\n          className: classes.formItem,\n          onChange: e => setConfirmPassword(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/adminSignin\",\n          className: classes.link,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            className: classes.btn,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Already Registered?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/adminSignin\",\n            className: classes.link,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminSignup, \"xIas84tYa4QexQUNypHAhdCWKjk=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AdminSignup;\nexport default AdminSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminSignup\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js"],"names":["Button","Card","makeStyles","TextField","Typography","Link","useState","useRef","useForm","useStyles","theme","container","width","height","display","justifyContent","alignItems","backgroundColor","palette","primary","light","formContainer","padding","spacing","minWidth","maxWidth","borderRadius","shape","formHeading","fontWeight","textAlign","marginBottom","formItem","btn","link","textDecoration","color","main","AdminSignup","classes","REACT_APP_BACKEND","BACKEND","process","env","register","formState","errors","handleSubmit","watch","reset","setValue","disable","setDisable","snackData","setSnackData","type","message","open","password","current","username","e","setUsername","target","value","setPassword","confirmPassword","setConfirmPassword"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light,\n  },\n  formContainer: {\n    padding: theme.spacing(5),\n    minWidth: \"350px\",\n    maxWidth: \"400px\",\n    borderRadius: theme.shape.borderRadius,\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3),\n  },\n  formItem: {\n    marginBottom: theme.spacing(2),\n  },\n  btn: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2),\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction AdminSignup() {\n  const classes = useStyles();\n\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div className={classes.container}>\n      <Card className={classes.formContainer}>\n        <Typography\n          variant=\"h6\"\n          color=\"primary\"\n          className={classes.formHeading}\n        >\n          INTELLIGENIE ADMIN\n        </Typography>\n        <form>\n          <TextField\n            variant=\"outlined\"\n            label={\"Username\"}\n            value={username}\n            className={classes.formItem}\n            onChange={(e) => setUsername(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            variant=\"outlined\"\n            label={\"Email\"}\n            value={username}\n            className={classes.formItem}\n            onChange={(e) => setUsername(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            variant=\"outlined\"\n            type={\"password\"}\n            label={\"Password\"}\n            value={password}\n            className={classes.formItem}\n            onChange={(e) => setPassword(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            variant=\"outlined\"\n            type={\"password\"}\n            label={\"Confirm Password\"}\n            value={confirmPassword}\n            className={classes.formItem}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            fullWidth\n          />\n          <Link to={\"/adminSignin\"} className={classes.link}>\n            <Button\n              variant={\"contained\"}\n              color={\"primary\"}\n              fullWidth\n              className={classes.btn}\n            >\n              Sign up\n            </Button>\n          </Link>\n          <Typography>\n            Already Registered?\n            <Link to={\"/adminSignin\"} className={classes.link}>\n              Sign in\n            </Link>\n          </Typography>\n        </form>\n      </Card>\n    </div>\n  );\n}\nexport default AdminSignup;\n"]},"metadata":{},"sourceType":"module"}