{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"icon\", \"badge\", \"color\", \"size\", \"loading\", \"disabled\"];\nimport React from 'react';\nimport PT from 'prop-types';\nimport SpinnerIcon from '@scaleflex/icons/spinner';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport Badge from '../badge';\nimport { ButtonSize, ButtonColor } from '../../utils/types';\nimport { getIconSize } from './button.utils';\nimport Styled from './button.styles';\nvar Button = intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      color = _ref.color,\n      size = _ref.size,\n      loading = _ref.loading,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Styled.Button, _extends({}, rest, {\n    disabled: loading || disabled,\n    color: color,\n    size: size,\n    ref: ref\n  }), icon && /*#__PURE__*/React.createElement(Styled.Icon, {\n    $loading: loading\n  }, typeof icon === 'function' ? loading ? /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  }) : icon({\n    size: getIconSize(size)\n  }) : // eslint-disable-next-line unicorn/no-nested-ternary\n  loading ? /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  }) : icon), loading && !icon && /*#__PURE__*/React.createElement(Styled.Icon, {\n    $loading: loading\n  }, /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  })), /*#__PURE__*/React.createElement(Styled.Label, null, children), badge && /*#__PURE__*/React.createElement(Styled.Badge, null, /*#__PURE__*/React.createElement(Badge, {\n    inline: true,\n    size: 14,\n    fontSize: 10,\n    padding: \"0 1px\",\n    badgeContent: badge,\n    color: color === ButtonColor.Primary ? 'white' : 'secondary'\n  })));\n});\nButton.defaultProps = {\n  size: ButtonSize.Md,\n  color: ButtonColor.Secondary\n};\nButton.propTypes = {\n  size: PT.oneOf(objectValues(ButtonSize)),\n  color: PT.oneOf(objectValues(ButtonColor)),\n  icon: PT.oneOfType([PT.node, PT.func]),\n  badge: PT.node,\n  loading: PT.bool,\n  disabled: PT.bool\n};\nexport default Button;","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/node_modules/react-filerobot-image-editor/node_modules/@scaleflex/ui/core/button/button.component.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","PT","SpinnerIcon","intrinsicComponent","objectValues","Badge","ButtonSize","ButtonColor","getIconSize","Styled","Button","_ref","ref","children","icon","badge","color","size","loading","disabled","rest","createElement","Icon","$loading","Label","inline","fontSize","padding","badgeContent","Primary","defaultProps","Md","Secondary","propTypes","oneOf","oneOfType","node","func","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"icon\", \"badge\", \"color\", \"size\", \"loading\", \"disabled\"];\nimport React from 'react';\nimport PT from 'prop-types';\nimport SpinnerIcon from '@scaleflex/icons/spinner';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport Badge from '../badge';\nimport { ButtonSize, ButtonColor } from '../../utils/types';\nimport { getIconSize } from './button.utils';\nimport Styled from './button.styles';\nvar Button = intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      color = _ref.color,\n      size = _ref.size,\n      loading = _ref.loading,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Styled.Button, _extends({}, rest, {\n    disabled: loading || disabled,\n    color: color,\n    size: size,\n    ref: ref\n  }), icon && /*#__PURE__*/React.createElement(Styled.Icon, {\n    $loading: loading\n  }, typeof icon === 'function' ? loading ? /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  }) : icon({\n    size: getIconSize(size)\n  }) : // eslint-disable-next-line unicorn/no-nested-ternary\n  loading ? /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  }) : icon), loading && !icon && /*#__PURE__*/React.createElement(Styled.Icon, {\n    $loading: loading\n  }, /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: getIconSize(size)\n  })), /*#__PURE__*/React.createElement(Styled.Label, null, children), badge && /*#__PURE__*/React.createElement(Styled.Badge, null, /*#__PURE__*/React.createElement(Badge, {\n    inline: true,\n    size: 14,\n    fontSize: 10,\n    padding: \"0 1px\",\n    badgeContent: badge,\n    color: color === ButtonColor.Primary ? 'white' : 'secondary'\n  })));\n});\nButton.defaultProps = {\n  size: ButtonSize.Md,\n  color: ButtonColor.Secondary\n};\nButton.propTypes = {\n  size: PT.oneOf(objectValues(ButtonSize)),\n  color: PT.oneOf(objectValues(ButtonColor)),\n  icon: PT.oneOfType([PT.node, PT.func]),\n  badge: PT.node,\n  loading: PT.bool,\n  disabled: PT.bool\n};\nexport default Button;"]},"metadata":{},"sourceType":"module"}