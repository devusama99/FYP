{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\n\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref[\"default\"]; // isControlled is ignored in the hook dependency lists as it should never change.\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueState = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var value = isControlled ? controlled : valueState;\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/node_modules/react-filerobot-image-editor/node_modules/@scaleflex/ui/hooks/use-controlled.js"],"names":["_slicedToArray","React","useControlled","_ref","controlled","defaultProp","_React$useRef","useRef","undefined","isControlled","current","_React$useState","useState","_React$useState2","valueState","setValue","value","setValueIfUncontrolled","useCallback","newValue"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC1C,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAAC,SAAD,CADtB,CAD0C,CAI1C;;AACA,MAAIG,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAaH,UAAU,KAAKI,SAA5B,CAApB;AAAA,MACIC,YAAY,GAAGH,aAAa,CAACI,OADjC;;AAGA,MAAIC,eAAe,GAAGV,KAAK,CAACW,QAAN,CAAeP,WAAf,CAAtB;AAAA,MACIQ,gBAAgB,GAAGb,cAAc,CAACW,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,UAAU,GAAGD,gBAAgB,CAAC,CAAD,CAFjC;AAAA,MAGIE,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAH/B;;AAKA,MAAIG,KAAK,GAAGP,YAAY,GAAGL,UAAH,GAAgBU,UAAxC;AACA,MAAIG,sBAAsB,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,UAAUC,QAAV,EAAoB;AACjE,QAAI,CAACV,YAAL,EAAmB;AACjBM,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACD;AACF,GAJ4B,EAI1B,EAJ0B,CAA7B;AAKA,SAAO,CAACH,KAAD,EAAQC,sBAAR,CAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref[\"default\"];\n\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueState = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var value = isControlled ? controlled : valueState;\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"]},"metadata":{},"sourceType":"module"}