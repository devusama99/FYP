{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  inputFeild: {\n    maxWidth: 400\n  },\n  content: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  _s();\n\n  const classes = useStyles();\n\n  function getStepContent(step) {\n    var _errors$userEmail;\n\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit(data => {// signIn(data);\n          }),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"Email\",\n            name: \"userEmail\",\n            className: classes.inputFeild,\n            ...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\"\n              }\n            }),\n            error: Boolean(errors.userEmail),\n            helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroup,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                type: \"submit\",\n                size: \"sm\",\n                disabled: disable,\n                children: [\"Verify Email\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 30\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return \"An ad group contains one or more ads which target a shared set of keywords.\";\n\n      case 2:\n        return `Try out different ad text to see what brings in the most customers,\n                and learn how to enhance your ads using features like ad extensions.\n                If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.`;\n\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    setValue\n  } = useForm();\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInUpTemplate, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: getStepContent(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n        square: true,\n        elevation: 0,\n        className: classes.resetContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"Cy8bbaFPaCEXW9SqsuzTYy8K9WM=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","TextField","Box","SignInUpTemplate","useState","useForm","Progress","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","inputFeild","maxWidth","content","getSteps","ForgetPassword","classes","getStepContent","step","handleSubmit","data","shrink","register","required","pattern","value","message","Boolean","errors","userEmail","btnGroup","disable","formState","setValue","setDisable","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  inputFeild: {\n    maxWidth: 400,\n  },\n  content: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  const classes = useStyles();\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              // signIn(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"sm\"\n                  disabled={disable}\n                >\n                  Verify Email\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 1:\n        return \"An ad group contains one or more ads which target a shared set of keywords.\";\n      case 2:\n        return `Try out different ad text to see what brings in the most customers,\n                and learn how to enhance your ads using features like ad extensions.\n                If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.`;\n      default:\n        return \"Unknown step\";\n    }\n  }\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm();\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <SignInUpTemplate>\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              <StepContent className={classes.content}>\n                <Typography>{getStepContent(index)}</Typography>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </Paper>\n        )}\n      </div>\n    </SignInUpTemplate>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}