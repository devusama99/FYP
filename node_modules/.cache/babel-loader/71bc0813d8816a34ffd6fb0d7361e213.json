{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"suggestedTags\", \"tags\", \"onAdd\", \"onRemove\", \"fullWidth\", \"placeholder\", \"disabled\", \"readOnly\", \"label\", \"suggestionLabel\", \"LabelProps\", \"error\", \"hint\", \"loading\", \"background\", \"getTagLabel\", \"getTagValue\", \"suggestionsFilter\"];\nimport React, { useState, useMemo } from 'react';\nimport PT from 'prop-types';\nimport { QuestionMarkOutline } from '@scaleflex/icons';\nimport SpinnerIcon from '@scaleflex/icons/spinner';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport Tag from '../tag';\nimport Label from '../label';\nimport FormHint from '../form-hint';\nimport { propTypes as labelPropTypes } from '../label/label.component';\nimport { AddTagType, Background } from './types';\nimport { tagsSuggestionsFilter } from './tag-field.utils';\nimport Styled from './tag-field.styles';\nvar TagField = intrinsicComponent(function (_ref, ref // eslint-disable-next-line sonarjs/cognitive-complexity\n) {\n  var _ref$suggestedTags = _ref.suggestedTags,\n      suggestedTags = _ref$suggestedTags === void 0 ? [] : _ref$suggestedTags,\n      _ref$tags = _ref.tags,\n      tags = _ref$tags === void 0 ? [] : _ref$tags,\n      onAdd = _ref.onAdd,\n      onRemove = _ref.onRemove,\n      fullWidth = _ref.fullWidth,\n      placeholder = _ref.placeholder,\n      disabled = _ref.disabled,\n      readOnly = _ref.readOnly,\n      label = _ref.label,\n      suggestionLabel = _ref.suggestionLabel,\n      LabelPropsData = _ref.LabelProps,\n      error = _ref.error,\n      hint = _ref.hint,\n      loading = _ref.loading,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? 'primary' : _ref$background,\n      _ref$getTagLabel = _ref.getTagLabel,\n      getTagLabel = _ref$getTagLabel === void 0 ? function (tag) {\n    return tag;\n  } : _ref$getTagLabel,\n      _ref$getTagValue = _ref.getTagValue,\n      getTagValue = _ref$getTagValue === void 0 ? function (tag) {\n    return tag;\n  } : _ref$getTagValue,\n      _ref$suggestionsFilte = _ref.suggestionsFilter,\n      suggestionsFilter = _ref$suggestionsFilte === void 0 ? tagsSuggestionsFilter : _ref$suggestionsFilte,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInput = _useState2[0],\n      setUserInput = _useState2[1];\n\n  var filteredTags = useMemo(function () {\n    return tags.filter(function (tag) {\n      return tag;\n    });\n  }, [tags]);\n  var existingLabels = useMemo(function () {\n    return filteredTags.map(function (tag) {\n      return getTagLabel(tag).toLowerCase();\n    });\n  }, [filteredTags]);\n  var filteredSuggestions = useMemo(function () {\n    var filteredItems = suggestedTags.filter(function (suggestion) {\n      return !existingLabels.includes(getTagLabel(suggestion).toLowerCase());\n    });\n    return suggestionsFilter(filteredItems, userInput, getTagLabel);\n  }, [userInput, suggestedTags, existingLabels, suggestionsFilter]);\n\n  var handleTagAdd = function handleTagAdd(item, type) {\n    if (!item) return;\n    var tagLabel = type === AddTagType.UserInput ? item : getTagLabel(item);\n\n    if (!filteredTags.some(function (tag) {\n      return getTagLabel(tag).toLowerCase() === tagLabel.toLowerCase();\n    })) {\n      onAdd(item, type);\n    }\n  };\n\n  var handleUserInputKeyDown = function handleUserInputKeyDown(event) {\n    if (event.key === 'Enter' && userInput) {\n      event.preventDefault();\n      handleTagAdd(userInput, AddTagType.UserInput);\n      setUserInput('');\n    } else if (event.key === 'Backspace' && !userInput) {\n      var index = filteredTags.length - 1;\n      onRemove(index, getTagValue(filteredTags[index]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Styled.TagFieldRoot, {\n    ref: ref\n  }, label && /*#__PURE__*/React.createElement(Label, _extends({\n    error: error\n  }, LabelPropsData || {}), label), /*#__PURE__*/React.createElement(Styled.TagFieldWrapper, _extends({\n    fullWidth: Boolean(fullWidth),\n    background: background\n  }, rest), /*#__PURE__*/React.createElement(Styled.TagFieldListWrapper, {\n    $loading: loading\n  }, filteredTags.map(function (tag, index) {\n    return /*#__PURE__*/React.createElement(Tag, {\n      key: getTagValue(tag),\n      tagIndex: index,\n      onRemove: disabled || readOnly || loading ? undefined : function () {\n        return onRemove(index, getTagValue(tag));\n      },\n      style: {\n        margin: '4px 4px 4px 0'\n      }\n    }, getTagLabel(tag));\n  }), loading ? /*#__PURE__*/React.createElement(Styled.TagFieldLoader, null, /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: 16,\n    color: \"#768184\"\n  })) : /*#__PURE__*/React.createElement(Styled.TagFieldInputWrapper, null, /*#__PURE__*/React.createElement(Styled.TagFieldInput, {\n    value: userInput,\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: placeholder,\n    onChange: function onChange(ev) {\n      return setUserInput(ev.target.value);\n    },\n    onKeyDown: handleUserInputKeyDown,\n    readOnly: readOnly,\n    disabled: disabled\n  })))), hint && /*#__PURE__*/React.createElement(FormHint, {\n    error: error\n  }, hint), filteredSuggestions.length > 0 && /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionWrapper, null, /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionLabel, null, /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionIcon, null, /*#__PURE__*/React.createElement(QuestionMarkOutline, {\n    size: 12,\n    color: \"#778285\"\n  })), suggestionLabel || /*#__PURE__*/React.createElement(\"span\", null, \"Suggested Tags\")), /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionWrapperList, null, filteredSuggestions.map(function (suggestion) {\n    return /*#__PURE__*/React.createElement(Tag, {\n      key: getTagValue(suggestion),\n      type: \"suggested\",\n      onSelect: function onSelect() {\n        handleTagAdd(suggestion, AddTagType.Suggestion);\n        setUserInput('');\n      },\n      style: {\n        margin: '0 8px 8px 0'\n      }\n    }, getTagLabel(suggestion));\n  }))));\n});\nTagField.defaultProps = {\n  tags: [],\n  suggestedTags: [],\n  fullWidth: false,\n  placeholder: 'Add a tag (separate by pressing enter)',\n  disabled: false,\n  readOnly: false,\n  background: Background.Primary\n};\nTagField.propTypes = {\n  tags: PT.arrayOf(PT.oneOfType([PT.string, PT.object])).isRequired,\n  suggestedTags: PT.arrayOf(PT.oneOfType([PT.string, PT.object])),\n  LabelProps: PT.exact(labelPropTypes),\n  onAdd: PT.func.isRequired,\n  onRemove: PT.func.isRequired,\n  fullWidth: PT.bool,\n  placeholder: PT.string,\n  readOnly: PT.bool,\n  disabled: PT.bool,\n  label: PT.node,\n  error: PT.bool,\n  hint: PT.node,\n  loading: PT.bool,\n  getTagValue: PT.func,\n  getTagLabel: PT.func,\n  suggestionsFilter: PT.func,\n  background: PT.oneOf(objectValues(Background)),\n  suggestionLabel: PT.node\n};\nexport default TagField;","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/node_modules/react-filerobot-image-editor/node_modules/@scaleflex/ui/core/tag-field/tag-field.component.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useState","useMemo","PT","QuestionMarkOutline","SpinnerIcon","intrinsicComponent","objectValues","Tag","Label","FormHint","propTypes","labelPropTypes","AddTagType","Background","tagsSuggestionsFilter","Styled","TagField","_ref","ref","_ref$suggestedTags","suggestedTags","_ref$tags","tags","onAdd","onRemove","fullWidth","placeholder","disabled","readOnly","label","suggestionLabel","LabelPropsData","LabelProps","error","hint","loading","_ref$background","background","_ref$getTagLabel","getTagLabel","tag","_ref$getTagValue","getTagValue","_ref$suggestionsFilte","suggestionsFilter","rest","_useState","_useState2","userInput","setUserInput","filteredTags","filter","existingLabels","map","toLowerCase","filteredSuggestions","filteredItems","suggestion","includes","handleTagAdd","item","type","tagLabel","UserInput","some","handleUserInputKeyDown","event","key","preventDefault","index","length","createElement","TagFieldRoot","TagFieldWrapper","Boolean","TagFieldListWrapper","$loading","tagIndex","undefined","style","margin","TagFieldLoader","size","color","TagFieldInputWrapper","TagFieldInput","value","autoComplete","onChange","ev","target","onKeyDown","TagFieldSuggestionWrapper","TagFieldSuggestionLabel","TagFieldSuggestionIcon","TagFieldSuggestionWrapperList","onSelect","Suggestion","defaultProps","Primary","arrayOf","oneOfType","string","object","isRequired","exact","func","bool","node","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"suggestedTags\", \"tags\", \"onAdd\", \"onRemove\", \"fullWidth\", \"placeholder\", \"disabled\", \"readOnly\", \"label\", \"suggestionLabel\", \"LabelProps\", \"error\", \"hint\", \"loading\", \"background\", \"getTagLabel\", \"getTagValue\", \"suggestionsFilter\"];\nimport React, { useState, useMemo } from 'react';\nimport PT from 'prop-types';\nimport { QuestionMarkOutline } from '@scaleflex/icons';\nimport SpinnerIcon from '@scaleflex/icons/spinner';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport Tag from '../tag';\nimport Label from '../label';\nimport FormHint from '../form-hint';\nimport { propTypes as labelPropTypes } from '../label/label.component';\nimport { AddTagType, Background } from './types';\nimport { tagsSuggestionsFilter } from './tag-field.utils';\nimport Styled from './tag-field.styles';\nvar TagField = intrinsicComponent(function (_ref, ref // eslint-disable-next-line sonarjs/cognitive-complexity\n) {\n  var _ref$suggestedTags = _ref.suggestedTags,\n      suggestedTags = _ref$suggestedTags === void 0 ? [] : _ref$suggestedTags,\n      _ref$tags = _ref.tags,\n      tags = _ref$tags === void 0 ? [] : _ref$tags,\n      onAdd = _ref.onAdd,\n      onRemove = _ref.onRemove,\n      fullWidth = _ref.fullWidth,\n      placeholder = _ref.placeholder,\n      disabled = _ref.disabled,\n      readOnly = _ref.readOnly,\n      label = _ref.label,\n      suggestionLabel = _ref.suggestionLabel,\n      LabelPropsData = _ref.LabelProps,\n      error = _ref.error,\n      hint = _ref.hint,\n      loading = _ref.loading,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? 'primary' : _ref$background,\n      _ref$getTagLabel = _ref.getTagLabel,\n      getTagLabel = _ref$getTagLabel === void 0 ? function (tag) {\n    return tag;\n  } : _ref$getTagLabel,\n      _ref$getTagValue = _ref.getTagValue,\n      getTagValue = _ref$getTagValue === void 0 ? function (tag) {\n    return tag;\n  } : _ref$getTagValue,\n      _ref$suggestionsFilte = _ref.suggestionsFilter,\n      suggestionsFilter = _ref$suggestionsFilte === void 0 ? tagsSuggestionsFilter : _ref$suggestionsFilte,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInput = _useState2[0],\n      setUserInput = _useState2[1];\n\n  var filteredTags = useMemo(function () {\n    return tags.filter(function (tag) {\n      return tag;\n    });\n  }, [tags]);\n  var existingLabels = useMemo(function () {\n    return filteredTags.map(function (tag) {\n      return getTagLabel(tag).toLowerCase();\n    });\n  }, [filteredTags]);\n  var filteredSuggestions = useMemo(function () {\n    var filteredItems = suggestedTags.filter(function (suggestion) {\n      return !existingLabels.includes(getTagLabel(suggestion).toLowerCase());\n    });\n    return suggestionsFilter(filteredItems, userInput, getTagLabel);\n  }, [userInput, suggestedTags, existingLabels, suggestionsFilter]);\n\n  var handleTagAdd = function handleTagAdd(item, type) {\n    if (!item) return;\n    var tagLabel = type === AddTagType.UserInput ? item : getTagLabel(item);\n\n    if (!filteredTags.some(function (tag) {\n      return getTagLabel(tag).toLowerCase() === tagLabel.toLowerCase();\n    })) {\n      onAdd(item, type);\n    }\n  };\n\n  var handleUserInputKeyDown = function handleUserInputKeyDown(event) {\n    if (event.key === 'Enter' && userInput) {\n      event.preventDefault();\n      handleTagAdd(userInput, AddTagType.UserInput);\n      setUserInput('');\n    } else if (event.key === 'Backspace' && !userInput) {\n      var index = filteredTags.length - 1;\n      onRemove(index, getTagValue(filteredTags[index]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Styled.TagFieldRoot, {\n    ref: ref\n  }, label && /*#__PURE__*/React.createElement(Label, _extends({\n    error: error\n  }, LabelPropsData || {}), label), /*#__PURE__*/React.createElement(Styled.TagFieldWrapper, _extends({\n    fullWidth: Boolean(fullWidth),\n    background: background\n  }, rest), /*#__PURE__*/React.createElement(Styled.TagFieldListWrapper, {\n    $loading: loading\n  }, filteredTags.map(function (tag, index) {\n    return /*#__PURE__*/React.createElement(Tag, {\n      key: getTagValue(tag),\n      tagIndex: index,\n      onRemove: disabled || readOnly || loading ? undefined : function () {\n        return onRemove(index, getTagValue(tag));\n      },\n      style: {\n        margin: '4px 4px 4px 0'\n      }\n    }, getTagLabel(tag));\n  }), loading ? /*#__PURE__*/React.createElement(Styled.TagFieldLoader, null, /*#__PURE__*/React.createElement(SpinnerIcon, {\n    size: 16,\n    color: \"#768184\"\n  })) : /*#__PURE__*/React.createElement(Styled.TagFieldInputWrapper, null, /*#__PURE__*/React.createElement(Styled.TagFieldInput, {\n    value: userInput,\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: placeholder,\n    onChange: function onChange(ev) {\n      return setUserInput(ev.target.value);\n    },\n    onKeyDown: handleUserInputKeyDown,\n    readOnly: readOnly,\n    disabled: disabled\n  })))), hint && /*#__PURE__*/React.createElement(FormHint, {\n    error: error\n  }, hint), filteredSuggestions.length > 0 && /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionWrapper, null, /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionLabel, null, /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionIcon, null, /*#__PURE__*/React.createElement(QuestionMarkOutline, {\n    size: 12,\n    color: \"#778285\"\n  })), suggestionLabel || /*#__PURE__*/React.createElement(\"span\", null, \"Suggested Tags\")), /*#__PURE__*/React.createElement(Styled.TagFieldSuggestionWrapperList, null, filteredSuggestions.map(function (suggestion) {\n    return /*#__PURE__*/React.createElement(Tag, {\n      key: getTagValue(suggestion),\n      type: \"suggested\",\n      onSelect: function onSelect() {\n        handleTagAdd(suggestion, AddTagType.Suggestion);\n        setUserInput('');\n      },\n      style: {\n        margin: '0 8px 8px 0'\n      }\n    }, getTagLabel(suggestion));\n  }))));\n});\nTagField.defaultProps = {\n  tags: [],\n  suggestedTags: [],\n  fullWidth: false,\n  placeholder: 'Add a tag (separate by pressing enter)',\n  disabled: false,\n  readOnly: false,\n  background: Background.Primary\n};\nTagField.propTypes = {\n  tags: PT.arrayOf(PT.oneOfType([PT.string, PT.object])).isRequired,\n  suggestedTags: PT.arrayOf(PT.oneOfType([PT.string, PT.object])),\n  LabelProps: PT.exact(labelPropTypes),\n  onAdd: PT.func.isRequired,\n  onRemove: PT.func.isRequired,\n  fullWidth: PT.bool,\n  placeholder: PT.string,\n  readOnly: PT.bool,\n  disabled: PT.bool,\n  label: PT.node,\n  error: PT.bool,\n  hint: PT.node,\n  loading: PT.bool,\n  getTagValue: PT.func,\n  getTagLabel: PT.func,\n  suggestionsFilter: PT.func,\n  background: PT.oneOf(objectValues(Background)),\n  suggestionLabel: PT.node\n};\nexport default TagField;"]},"metadata":{},"sourceType":"module"}