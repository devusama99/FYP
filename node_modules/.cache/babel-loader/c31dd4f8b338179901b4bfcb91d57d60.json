{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminAccount.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, TextField, CircularProgress, makeStyles, Box, Typography } from \"@material-ui/core\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: theme.spacing(3),\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      width: \"90%\",\n      paddingLeft: theme.spacing(0)\n    }\n  },\n  avatar: {\n    width: \"100px\",\n    height: \"100px\",\n    backgroundColor: theme.palette.primary.main\n  },\n  avatarText: {\n    fontSize: \"42px\"\n  },\n  updateBtn: {\n    marginTop: theme.spacing(2)\n  },\n  avatarContainer: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginBottom: theme.spacing(4)\n    }\n  },\n  input: {\n    display: \"none\"\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  formContainer: {\n    paddingLeft: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(0)\n    }\n  },\n  forms: {\n    borderLeft: `1px solid ${theme.palette.primary.light}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"none\",\n      textAlign: \"center\"\n    }\n  },\n  formHeading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4)\n  },\n  formHeading2: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(6)\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nfunction AdminDashboard() {\n  _s();\n\n  var _errors$username, _errors$userEmail;\n\n  const classes = useStyles();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const {\n    REACT_APP_BACKEND: BACKEND\n  } = process.env;\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackData.open,\n      type: snackData.type,\n      message: snackData.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoxContainerWhite, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avatarContainer,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.avatarText,\n              children: \" A \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            className: classes.input,\n            id: \"contained-button-file\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              className: classes.updateBtn,\n              disableElevation: true,\n              children: \"Change Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.forms,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.formHeading,\n              children: \"Personal Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              onSubmit: handleSubmit(data => {// signIn(data);\n              }),\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                disabled: true,\n                variant: \"outlined\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                size: \"medium\",\n                color: \"primary\",\n                name: \"usename\",\n                label: \"Username\",\n                className: classes.inputFeild,\n                fullWidth: true,\n                ...register(\"username\", {\n                  required: \"Username Required\",\n                  pattern: {\n                    value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                    message: \"Invalid Username\"\n                  }\n                }),\n                error: Boolean(errors.username),\n                helperText: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                size: \"medium\",\n                color: \"primary\",\n                label: \"Email\",\n                name: \"userEmail\",\n                className: classes.inputFeild,\n                ...register(\"userEmail\", {\n                  required: \"Email required\",\n                  pattern: {\n                    value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                    message: \"Invalid email\"\n                  }\n                }),\n                error: Boolean(errors.userEmail),\n                helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.btnGroup,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.btnGroupLeft,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    disableElevation: true,\n                    color: \"primary\",\n                    size: \"large\",\n                    type: \"submit\",\n                    disabled: disable,\n                    children: [\"Update Information\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 34\n                    }, this) : \"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.formHeading2,\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              color: \"primary\",\n              label: \"Old Password\",\n              type: \"password\",\n              className: classes.inputFeild,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              color: \"primary\",\n              type: \"password\",\n              label: \"New Password\",\n              className: classes.inputFeild,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              color: \"primary\",\n              type: \"password\",\n              label: \"Confirm Password\",\n              className: classes.inputFeild,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.updateBtn,\n              variant: \"contained\",\n              children: \"Update Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminDashboard, \"OzBQjTH6AsfHxjQWU0nAIUNzUns=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/AdminAccount.js"],"names":["Avatar","Button","TextField","CircularProgress","makeStyles","Box","Typography","BoxContainerWhite","useState","useForm","Progress","Snackbar","useStyles","theme","container","paddingLeft","spacing","width","breakpoints","down","marginTop","marginBottom","avatar","height","backgroundColor","palette","primary","main","avatarText","fontSize","updateBtn","avatarContainer","display","flexDirection","justifyContent","alignItems","input","content","formContainer","forms","borderLeft","light","border","textAlign","formHeading","formHeading2","inputFeild","AdminDashboard","classes","register","formState","errors","handleSubmit","REACT_APP_BACKEND","BACKEND","process","env","disable","setDisable","snackData","setSnackData","type","message","open","data","shrink","required","pattern","value","Boolean","username","userEmail","btnGroup","btnGroupLeft"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  TextField,\n  CircularProgress,\n  makeStyles,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport BoxContainerWhite from \"./BoxContainerWhite\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport Snackbar from \"./Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingLeft: theme.spacing(3),\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      width: \"90%\",\n      paddingLeft: theme.spacing(0),\n    },\n  },\n  avatar: {\n    width: \"100px\",\n    height: \"100px\",\n    backgroundColor: theme.palette.primary.main,\n  },\n  avatarText: {\n    fontSize: \"42px\",\n  },\n  updateBtn: {\n    marginTop: theme.spacing(2),\n  },\n  avatarContainer: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginBottom: theme.spacing(4),\n    },\n  },\n  input: { display: \"none\" },\n  content: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  formContainer: {\n    paddingLeft: theme.spacing(5),\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(0),\n    },\n  },\n  forms: {\n    borderLeft: `1px solid ${theme.palette.primary.light}`,\n    [theme.breakpoints.down(\"sm\")]: {\n      border: \"none\",\n      textAlign: \"center\",\n    },\n  },\n  formHeading: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4),\n  },\n  formHeading2: {\n    fontSize: \"24px\",\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(6),\n  },\n  inputFeild: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nfunction AdminDashboard() {\n  const classes = useStyles();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n  return (\n    <div className={classes.container}>\n      <Snackbar\n        open={snackData.open}\n        type={snackData.type}\n        message={snackData.message}\n      />\n      <BoxContainerWhite>\n        <div className={classes.content}>\n          <div className={classes.avatarContainer}>\n            <Avatar className={classes.avatar}>\n              <span className={classes.avatarText}> A </span>\n            </Avatar>\n            <input\n              accept=\"image/*\"\n              className={classes.input}\n              id=\"contained-button-file\"\n              type=\"file\"\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n                className={classes.updateBtn}\n                disableElevation\n              >\n                Change Picture\n              </Button>\n            </label>\n          </div>\n          <div className={classes.forms}>\n            <div className={classes.formContainer}>\n              <Typography variant={\"h5\"} className={classes.formHeading}>\n                Personal Information\n              </Typography>\n              <form\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  // signIn(data);\n                })}\n              >\n                <TextField\n                  required\n                  disabled\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  name=\"usename\"\n                  label={\"Username\"}\n                  className={classes.inputFeild}\n                  fullWidth\n                  {...register(\"username\", {\n                    required: \"Username Required\",\n                    pattern: {\n                      value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                      message: \"Invalid Username\",\n                    },\n                  })}\n                  error={Boolean(errors.username)}\n                  helperText={errors.username?.message}\n                ></TextField>\n                <TextField\n                  variant={\"outlined\"}\n                  InputLabelProps={{ shrink: true }}\n                  size={\"medium\"}\n                  color={\"primary\"}\n                  label={\"Email\"}\n                  name=\"userEmail\"\n                  className={classes.inputFeild}\n                  {...register(\"userEmail\", {\n                    required: \"Email required\",\n                    pattern: {\n                      value:\n                        /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                      message: \"Invalid email\",\n                    },\n                  })}\n                  error={Boolean(errors.userEmail)}\n                  helperText={errors.userEmail?.message}\n                  fullWidth\n                ></TextField>\n                <Box className={classes.btnGroup}>\n                  <Box className={classes.btnGroupLeft}>\n                    <Button\n                      variant={\"contained\"}\n                      disableElevation\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      disabled={disable}\n                    >\n                      Update Information\n                      {disable ? <Progress size={20} /> : \"\"}\n                    </Button>\n                  </Box>\n                </Box>\n              </form>\n            </div>\n            <div className={classes.formContainer}>\n              <Typography variant={\"h5\"} className={classes.formHeading2}>\n                Change Password\n              </Typography>\n              <TextField\n                variant={\"outlined\"}\n                color={\"primary\"}\n                label={\"Old Password\"}\n                type={\"password\"}\n                className={classes.inputFeild}\n                fullWidth\n              ></TextField>\n              <TextField\n                variant={\"outlined\"}\n                color={\"primary\"}\n                type={\"password\"}\n                label={\"New Password\"}\n                className={classes.inputFeild}\n                fullWidth\n              ></TextField>\n              <TextField\n                variant={\"outlined\"}\n                color={\"primary\"}\n                type={\"password\"}\n                label={\"Confirm Password\"}\n                className={classes.inputFeild}\n                fullWidth\n              ></TextField>\n              <Button className={classes.updateBtn} variant={\"contained\"}>\n                Update Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </BoxContainerWhite>\n    </div>\n  );\n}\nexport default AdminDashboard;\n"]},"metadata":{},"sourceType":"module"}