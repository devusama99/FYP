{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, makeStyles, TextField, Typography, Box } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light\n  },\n  formContainer: {\n    padding: theme.spacing(5),\n    minWidth: \"350px\",\n    maxWidth: \"400px\",\n    borderRadius: theme.shape.borderRadius\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3)\n  },\n  formItem: {\n    marginBottom: theme.spacing(2)\n  },\n  btn: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2)\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main\n  }\n}));\n\nfunction AdminSignup() {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$userEmail, _errors$username, _errors$password, _errors$confirmPasswo;\n\n  const classes = useStyles();\n  const {\n    REACT_APP_BACKEND: BACKEND\n  } = process.env;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    watch,\n    reset,\n    setValue\n  } = useForm();\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false\n  });\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit(data => {}),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"First Name\",\n          name: \"firstName\",\n          className: classes.inputFeild,\n          ...register(\"firstName\", {\n            required: \"First name required\",\n            pattern: {\n              value: /^[a-zA-Z ]*$/,\n              message: \"Invalid first name\"\n            }\n          }),\n          error: Boolean(errors.firstName),\n          helperText: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Last Name\",\n          className: classes.inputFeild,\n          name: \"lastName\",\n          ...register(\"lastName\", {\n            required: \"Last name required\",\n            pattern: {\n              value: /^[a-zA-Z ]*$/,\n              message: \"Invalid last name\"\n            }\n          }),\n          error: Boolean(errors.lastName),\n          helperText: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Email\",\n          name: \"userEmail\",\n          className: classes.inputFeild,\n          ...register(\"userEmail\", {\n            required: \"Email required\",\n            pattern: {\n              value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n              message: \"Invalid email\"\n            }\n          }),\n          error: Boolean(errors.userEmail),\n          helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Username\",\n          name: \"username\",\n          className: classes.inputFeild,\n          ...register(\"username\", {\n            required: \"Username Required\",\n            pattern: {\n              value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n              minLength: {\n                value: 6,\n                message: \"Username can not be less than 3 characters\"\n              },\n              message: \"Invalid Username\"\n            }\n          }),\n          error: Boolean(errors.username),\n          helperText: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Password\",\n          className: classes.inputFeild,\n          name: \"password\",\n          ...register(\"password\", {\n            required: \"Password Required\",\n            minLength: {\n              value: 6,\n              message: \"Invalid Password\"\n            }\n          }),\n          type: \"password\",\n          fullWidth: true,\n          error: Boolean(errors.password),\n          helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          size: \"medium\",\n          color: \"primary\",\n          label: \"Confirm Password\",\n          className: classes.inputFeild,\n          name: \"confirmPassword\",\n          ...register(\"confirmPassword\", {\n            required: \"Confirm Password Required\",\n            validate: value => value === password.current || \"Passwords do not match\"\n          }),\n          type: \"password\",\n          error: Boolean(errors.confirmPassword),\n          helperText: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.btnGroup,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            type: \"submit\",\n            disabled: disable,\n            children: [\"Sign up\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n              color: \"primary\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 26\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"span\",\n          className: classes.loginLink,\n          children: [\"Alread Registered?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            className: classes.anchorTag,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminSignup, \"xIas84tYa4QexQUNypHAhdCWKjk=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = AdminSignup;\nexport default AdminSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminSignup\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/AdminSignup.js"],"names":["Button","Card","makeStyles","TextField","Typography","Box","Link","useState","useRef","useForm","Progress","useStyles","theme","container","width","height","display","justifyContent","alignItems","backgroundColor","palette","primary","light","formContainer","padding","spacing","minWidth","maxWidth","borderRadius","shape","formHeading","fontWeight","textAlign","marginBottom","formItem","btn","link","textDecoration","color","main","AdminSignup","classes","REACT_APP_BACKEND","BACKEND","process","env","register","formState","errors","handleSubmit","watch","reset","setValue","disable","setDisable","snackData","setSnackData","type","message","open","password","current","data","shrink","inputFeild","required","pattern","value","Boolean","firstName","lastName","userEmail","minLength","username","validate","confirmPassword","btnGroup","loginLink","anchorTag"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  makeStyles,\n  TextField,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light,\n  },\n  formContainer: {\n    padding: theme.spacing(5),\n    minWidth: \"350px\",\n    maxWidth: \"400px\",\n    borderRadius: theme.shape.borderRadius,\n  },\n  formHeading: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3),\n  },\n  formItem: {\n    marginBottom: theme.spacing(2),\n  },\n  btn: {\n    padding: theme.spacing(1.5),\n    marginBottom: theme.spacing(2),\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction AdminSignup() {\n  const classes = useStyles();\n  const { REACT_APP_BACKEND: BACKEND } = process.env;\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n  } = useForm();\n\n  const [disable, setDisable] = useState(false);\n  const [snackData, setSnackData] = useState({\n    type: \"\",\n    message: \"\",\n    open: false,\n  });\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  return (\n    <div className={classes.container}>\n      <Card className={classes.formContainer}>\n        <form noValidate onSubmit={handleSubmit((data) => {})}>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"First Name\"}\n            name=\"firstName\"\n            className={classes.inputFeild}\n            {...register(\"firstName\", {\n              required: \"First name required\",\n              pattern: {\n                value: /^[a-zA-Z ]*$/,\n                message: \"Invalid first name\",\n              },\n            })}\n            error={Boolean(errors.firstName)}\n            helperText={errors.firstName?.message}\n            fullWidth\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Last Name\"}\n            className={classes.inputFeild}\n            name=\"lastName\"\n            {...register(\"lastName\", {\n              required: \"Last name required\",\n              pattern: {\n                value: /^[a-zA-Z ]*$/,\n                message: \"Invalid last name\",\n              },\n            })}\n            error={Boolean(errors.lastName)}\n            helperText={errors.lastName?.message}\n            fullWidth\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Email\"}\n            name=\"userEmail\"\n            className={classes.inputFeild}\n            {...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value:\n                  /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\",\n              },\n            })}\n            error={Boolean(errors.userEmail)}\n            helperText={errors.userEmail?.message}\n            fullWidth\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Username\"}\n            name=\"username\"\n            className={classes.inputFeild}\n            {...register(\"username\", {\n              required: \"Username Required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{2,}$/,\n                minLength: {\n                  value: 6,\n                  message: \"Username can not be less than 3 characters\",\n                },\n                message: \"Invalid Username\",\n              },\n            })}\n            error={Boolean(errors.username)}\n            helperText={errors.username?.message}\n            fullWidth\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Password\"}\n            className={classes.inputFeild}\n            name=\"password\"\n            {...register(\"password\", {\n              required: \"Password Required\",\n              minLength: { value: 6, message: \"Invalid Password\" },\n            })}\n            type={\"password\"}\n            fullWidth\n            error={Boolean(errors.password)}\n            helperText={errors.password?.message}\n          ></TextField>\n          <TextField\n            variant={\"outlined\"}\n            InputLabelProps={{ shrink: true }}\n            size={\"medium\"}\n            color={\"primary\"}\n            label={\"Confirm Password\"}\n            className={classes.inputFeild}\n            name=\"confirmPassword\"\n            {...register(\"confirmPassword\", {\n              required: \"Confirm Password Required\",\n              validate: (value) =>\n                value === password.current || \"Passwords do not match\",\n            })}\n            type={\"password\"}\n            error={Boolean(errors.confirmPassword)}\n            helperText={errors.confirmPassword?.message}\n            fullWidth\n          ></TextField>\n          <Box className={classes.btnGroup}>\n            <Button\n              variant={\"contained\"}\n              color=\"primary\"\n              size=\"large\"\n              type=\"submit\"\n              disabled={disable}\n            >\n              Sign up\n              {disable ? <Progress color=\"primary\" size={20} /> : \"\"}\n            </Button>\n          </Box>\n          <Typography\n            variant={\"body2\"}\n            component={\"span\"}\n            className={classes.loginLink}\n          >\n            Alread Registered?{\" \"}\n            <Link to={\"/signin\"} className={classes.anchorTag}>\n              Log In\n            </Link>\n          </Typography>\n        </form>\n      </Card>\n    </div>\n  );\n}\nexport default AdminSignup;\n"]},"metadata":{},"sourceType":"module"}