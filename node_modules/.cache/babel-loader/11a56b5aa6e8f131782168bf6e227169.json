{"ast":null,"code":"var _jsxFileName = \"/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2)\n  },\n  content: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\"\n  }\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  _s();\n\n  const classes = useStyles();\n\n  function getStepContent(step) {\n    var _errors$userEmail, _errors1$otp, _errors2$password, _errors2$confirmPassw;\n\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit(data => {// signIn(data);\n          }),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"Email\",\n            name: \"userEmail\",\n            className: classes.inputFeild,\n            ...register(\"userEmail\", {\n              required: \"Email required\",\n              pattern: {\n                value: /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                message: \"Invalid email\"\n              }\n            }),\n            error: Boolean(errors.userEmail),\n            helperText: (_errors$userEmail = errors.userEmail) === null || _errors$userEmail === void 0 ? void 0 : _errors$userEmail.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroup,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                type: \"submit\",\n                size: \"sm\",\n                disabled: disable,\n                children: [\"Verify Email\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 30\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit1(data => {// signIn(data);\n          }),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"OTP\",\n            name: \"otp\",\n            className: classes.inputFeild,\n            ...register1(\"otp\", {\n              required: \"OTP required\",\n              pattern: {\n                value: /^[0-9]{4}$/,\n                message: \"Invalid OTP\"\n              }\n            }),\n            error: Boolean(errors1.otp),\n            helperText: (_errors1$otp = errors1.otp) === null || _errors1$otp === void 0 ? void 0 : _errors1$otp.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnGroup,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                type: \"submit\",\n                size: \"sm\",\n                disabled: disable,\n                children: [\"Verify OTP\", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 30\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit1(data => {//   updatePassword(data);\n          }),\n          className: classes.passwordSection,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"New Password\",\n            className: classes.button,\n            name: \"password\",\n            ...register2(\"password\", {\n              required: \"Password Required\",\n              minLength: {\n                value: 6,\n                message: \"Invalid Password\"\n              }\n            }),\n            type: \"password\",\n            fullWidth: true,\n            error: Boolean(errors2.password),\n            helperText: (_errors2$password = errors2.password) === null || _errors2$password === void 0 ? void 0 : _errors2$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            size: \"medium\",\n            color: \"primary\",\n            label: \"Confirm Password\",\n            className: classes.inputFeild,\n            name: \"confirmPassword\",\n            ...register2(\"confirmPassword\", {\n              required: \"Confirm Password Required\",\n              validate: value => value === password.current || \"Passwords do not match\"\n            }),\n            type: \"password\",\n            error: Boolean(errors2.confirmPassword),\n            helperText: (_errors2$confirmPassw = errors2.confirmPassword) === null || _errors2$confirmPassw === void 0 ? void 0 : _errors2$confirmPassw.message,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: disable,\n            children: [\"Update Password \", disable ? /*#__PURE__*/_jsxDEV(Progress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 42\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const {\n    register: register1,\n    formState: {\n      errors: errors1\n    },\n    handleSubmit: handleSubmit1\n  } = useForm();\n  const {\n    register: register2,\n    formState: {\n      errors: errors2\n    },\n    handleSubmit: handleSubmit2,\n    watch\n  } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(2);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInUpTemplate, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: getStepContent(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n        square: true,\n        elevation: 0,\n        className: classes.resetContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"n3nDOLGsQYV0belVTmpD3O6kCKg=\", false, function () {\n  return [useStyles, useForm, useForm, useForm];\n});\n\n_c = ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/Users/devusama/Work/FYP_FrontEnd/src/components/ForgetPassword.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","TextField","Box","SignInUpTemplate","useState","useForm","Progress","useRef","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","inputFeild","maxWidth","content","passwordSection","display","flexDirection","alignItems","getSteps","ForgetPassword","classes","getStepContent","step","handleSubmit","data","shrink","register","required","pattern","value","message","Boolean","errors","userEmail","btnGroup","disable","handleSubmit1","register1","errors1","otp","register2","minLength","errors2","password","validate","current","confirmPassword","formState","handleSubmit2","watch","setDisable","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport SignInUpTemplate from \"./SignInUpTemplate\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Progress from \"./ButtonLoader\";\nimport { useRef } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  inputFeild: {\n    maxWidth: 400,\n    marginTop: theme.spacing(2),\n  },\n  content: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n  },\n  passwordSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nfunction getSteps() {\n  return [\"Verify Email\", \"Verify OTP\", \"Change Password\"];\n}\n\nexport default function ForgetPassword() {\n  const classes = useStyles();\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit((data) => {\n              // signIn(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Email\"}\n              name=\"userEmail\"\n              className={classes.inputFeild}\n              {...register(\"userEmail\", {\n                required: \"Email required\",\n                pattern: {\n                  value:\n                    /^[a-zA-Z]+[a-zA-Z0-9_.-]{1,}\\@([A-Za-z0-9_\\-\\.]){1,}\\.([A-Za-z]){2,4}$/,\n                  message: \"Invalid email\",\n                },\n              })}\n              error={Boolean(errors.userEmail)}\n              helperText={errors.userEmail?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"sm\"\n                  disabled={disable}\n                >\n                  Verify Email\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 1:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              // signIn(data);\n            })}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"OTP\"}\n              name=\"otp\"\n              className={classes.inputFeild}\n              {...register1(\"otp\", {\n                required: \"OTP required\",\n                pattern: {\n                  value: /^[0-9]{4}$/,\n                  message: \"Invalid OTP\",\n                },\n              })}\n              error={Boolean(errors1.otp)}\n              helperText={errors1.otp?.message}\n              fullWidth\n            ></TextField>\n            <Box className={classes.btnGroup}>\n              <Box className={classes.button}>\n                <Button\n                  variant={\"contained\"}\n                  disableElevation\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"sm\"\n                  disabled={disable}\n                >\n                  Verify OTP\n                  {disable ? <Progress size={20} /> : \"\"}\n                </Button>\n              </Box>\n            </Box>\n          </form>\n        );\n      case 2:\n        return (\n          <form\n            noValidate\n            onSubmit={handleSubmit1((data) => {\n              //   updatePassword(data);\n            })}\n            className={classes.passwordSection}\n          >\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"New Password\"}\n              className={classes.button}\n              name=\"password\"\n              {...register2(\"password\", {\n                required: \"Password Required\",\n                minLength: { value: 6, message: \"Invalid Password\" },\n              })}\n              type={\"password\"}\n              fullWidth\n              error={Boolean(errors2.password)}\n              helperText={errors2.password?.message}\n            ></TextField>\n            <TextField\n              variant={\"outlined\"}\n              InputLabelProps={{ shrink: true }}\n              size={\"medium\"}\n              color={\"primary\"}\n              label={\"Confirm Password\"}\n              className={classes.inputFeild}\n              name=\"confirmPassword\"\n              {...register2(\"confirmPassword\", {\n                required: \"Confirm Password Required\",\n                validate: (value) =>\n                  value === password.current || \"Passwords do not match\",\n              })}\n              type={\"password\"}\n              error={Boolean(errors2.confirmPassword)}\n              helperText={errors2.confirmPassword?.message}\n              fullWidth\n            ></TextField>\n            <Button\n              color=\"primary\"\n              variant={\"contained\"}\n              type=\"submit\"\n              disabled={disable}\n            >\n              Update Password {disable ? <Progress size={20} /> : \"\"}\n            </Button>\n          </form>\n        );\n      default:\n        return \"Unknown step\";\n    }\n  }\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  const {\n    register: register1,\n    formState: { errors: errors1 },\n    handleSubmit: handleSubmit1,\n  } = useForm();\n\n  const {\n    register: register2,\n    formState: { errors: errors2 },\n    handleSubmit: handleSubmit2,\n    watch,\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const [disable, setDisable] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(2);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <SignInUpTemplate>\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              <StepContent className={classes.content}>\n                <Typography>{getStepContent(index)}</Typography>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </Paper>\n        )}\n      </div>\n    </SignInUpTemplate>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}